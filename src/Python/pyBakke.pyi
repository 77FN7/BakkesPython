# Stubs for pybakke (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, List

from typing import overload

CAR_AFTERSHOCK: Any
CAR_ANIMUSGP: Any
CAR_ARMADILLO: Any
CAR_BACKFIRE: Any
CAR_BATMOBILE: Any
CAR_BONESHAKER: Any
CAR_BREAKOUT: Any
CAR_BREAKOUTTYPES: Any
CAR_CENTIO: Any
CAR_DELOREAN: Any
CAR_DOMINUS: Any
CAR_DOMINUSGT: Any
CAR_ENDO: Any
CAR_ESPER: Any
CAR_GIZMO: Any
CAR_GROG: Any
CAR_HOTSHOT: Any
CAR_ICECHARGER: Any
CAR_JOGER619RS: Any
CAR_MANTIS: Any
CAR_MARAUDER: Any
CAR_MASAMUNE: Any
CAR_MERC: Any
CAR_OCTANE: Any
CAR_OCTANEZSR: Any
CAR_PALADIN: Any
CAR_PROTEUS: Any
CAR_RIPPER: Any
CAR_ROADHOG: Any
CAR_ROADHOGXL: Any
CAR_SCARAB: Any
CAR_SWEETTOOTH: Any
CAR_TAKUMI: Any
CAR_TAKUMIRXT: Any
CAR_TRITON: Any
CAR_TWINMILL: Any
CAR_VENOM: Any
CAR_VULCAN: Any
CAR_WARTHOG: Any
CAR_XDEVIL: Any
CAR_XDEVILMK2: Any
CAR_ZIPPY: Any
ToastType_Error: Any
ToastType_Info: Any
ToastType_OK: Any
ToastType_Warning: Any

@overload
def RotatorToVector(R: Rotator) -> Vector: ...
@overload
def RotatorToVector(structRotator) -> structVector: ...
@overload
def VectorToRotator(vVector: Vector) -> Rotator: ...
@overload
def VectorToRotator(structVector) -> structRotator: ...
@overload
def fixPitch(newRotation: float) -> float: ...
@overload
def fixPitch(float) -> float: ...
@overload
def fixRotator(newRotation: float) -> float: ...
@overload
def fixRotator(float) -> float: ...

class ActorWrapper(ObjectWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: ActorWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def AddVelocity(self, velocity: Vector) -> None: ...
    @overload
    def AddVelocity(conststructVector) -> void: ...
    @overload
    def ChartData(self, DataName: str, DataValue: float) -> None: ...
    @overload
    def ChartData(std, float) -> void: ...
    @overload
    def ContainsPoint(self, Spot: Vector) -> bool: ...
    @overload
    def ContainsPoint(structVector&) -> bool: ...
    def DrawDebugCone(self, Origin: Vector, Direction: Vector, Length: float, AngleWidth: float, AngleHeight: float, NumSides: int, DrawColor: UnrealColor, bPersistentLines: int) -> None: ...
    @overload
    def DrawDebugString(self, TextLocation: Vector, Text: str, TestBaseActor: ActorWrapper, TextColor: UnrealColor, Duration: float) -> None: ...
    @overload
    def DrawDebugString(structVector&, std, classActorWrapper, structUnrealColor&, float) -> void: ...
    @overload
    def ForceNetUpdate2(self) -> None: ...
    @overload
    def ForceNetUpdate2() -> void: ...
    @overload
    def ForceNetUpdatePacket(self) -> None: ...
    @overload
    def ForceNetUpdatePacket() -> void: ...
    @overload
    def GetAggregateBaseVelocity(self, TestBase: ActorWrapper) -> Vector: ...
    @overload
    def GetAggregateBaseVelocity(classActorWrapper) -> structVector: ...
    @overload
    def GetAngularVelocity(self) -> Vector: ...
    @overload
    def GetAngularVelocity() -> structVector: ...
    @overload
    def GetAttached(self) -> ArrayWrapper<ActorWrapper>: ...
    @overload
    def GetAttached() -> classArrayWrapper<classActorWrapper>: ...
    @overload
    def GetBase(self) -> ActorWrapper: ...
    @overload
    def GetBase() -> classActorWrapper: ...
    @overload
    def GetBlockRigidBody(self) -> int: ...
    @overload
    def GetBlockRigidBody() -> unsignedlong: ...
    @overload
    def GetCollisionComponent(self) -> PrimitiveComponentWrapper: ...
    @overload
    def GetCollisionComponent() -> classPrimitiveComponentWrapper: ...
    @overload
    def GetCollisionType(self) -> int: ...
    @overload
    def GetCollisionType() -> unsignedchar: ...
    @overload
    def GetCreationTime(self) -> float: ...
    @overload
    def GetCreationTime() -> float: ...
    @overload
    def GetCustomTimeDilation(self) -> float: ...
    @overload
    def GetCustomTimeDilation() -> float: ...
    @overload
    def GetDrawScale(self) -> float: ...
    @overload
    def GetDrawScale() -> float: ...
    @overload
    def GetDrawScale3D(self) -> Vector: ...
    @overload
    def GetDrawScale3D() -> structVector: ...
    @overload
    def GetEditorIconColor(self) -> UnrealColor: ...
    @overload
    def GetEditorIconColor() -> structUnrealColor: ...
    @overload
    def GetGravityAcceleration(self) -> Vector: ...
    @overload
    def GetGravityAcceleration() -> structVector: ...
    @overload
    def GetGravityDirection(self) -> Vector: ...
    @overload
    def GetGravityDirection() -> structVector: ...
    @overload
    def GetGravityZ(self) -> float: ...
    @overload
    def GetGravityZ() -> float: ...
    @overload
    def GetHiddenEditorViews(self) -> int: ...
    @overload
    def GetHiddenEditorViews() -> unsignedlonglong: ...
    @overload
    def GetLastForcePacketUpdateTime(self) -> float: ...
    @overload
    def GetLastForcePacketUpdateTime() -> float: ...
    @overload
    def GetLastNetUpdateTime(self) -> float: ...
    @overload
    def GetLastNetUpdateTime() -> float: ...
    @overload
    def GetLastRenderTime(self) -> float: ...
    @overload
    def GetLastRenderTime() -> float: ...
    @overload
    def GetLifeSpan(self) -> float: ...
    @overload
    def GetLifeSpan() -> float: ...
    @overload
    def GetLocation(self) -> Vector: ...
    @overload
    def GetLocation() -> structVector: ...
    @overload
    def GetNetPriority(self) -> float: ...
    @overload
    def GetNetPriority() -> float: ...
    @overload
    def GetNetUpdateFrequency(self) -> float: ...
    @overload
    def GetNetUpdateFrequency() -> float: ...
    @overload
    def GetNetUpdateTime(self) -> float: ...
    @overload
    def GetNetUpdateTime() -> float: ...
    @overload
    def GetOwner(self) -> ActorWrapper: ...
    @overload
    def GetOwner() -> classActorWrapper: ...
    @overload
    def GetPhysics(self) -> int: ...
    @overload
    def GetPhysics() -> unsignedchar: ...
    @overload
    def GetPrePivot(self) -> Vector: ...
    @overload
    def GetPrePivot() -> structVector: ...
    @overload
    def GetRelativeLocation(self) -> Vector: ...
    @overload
    def GetRelativeLocation() -> structVector: ...
    @overload
    def GetRelativeRotation(self) -> Rotator: ...
    @overload
    def GetRelativeRotation() -> structRotator: ...
    @overload
    def GetRemoteRole(self) -> int: ...
    @overload
    def GetRemoteRole() -> unsignedchar: ...
    @overload
    def GetReplicatedCollisionType(self) -> int: ...
    @overload
    def GetReplicatedCollisionType() -> unsignedchar: ...
    @overload
    def GetRole(self) -> int: ...
    @overload
    def GetRole() -> unsignedchar: ...
    @overload
    def GetRotation(self) -> Rotator: ...
    @overload
    def GetRotation() -> structRotator: ...
    @overload
    def GetTargetLocation(self, RequestedBy: ActorWrapper, bRequestAlternateLoc: int) -> Vector: ...
    @overload
    def GetTargetLocation(classActorWrapper, unsignedlong) -> structVector: ...
    @overload
    def GetTeamNum2(self) -> int: ...
    @overload
    def GetTeamNum2() -> unsignedchar: ...
    @overload
    def GetTerminalVelocity(self) -> float: ...
    @overload
    def GetTerminalVelocity() -> float: ...
    @overload
    def GetTimeSinceLastTick(self) -> float: ...
    @overload
    def GetTimeSinceLastTick() -> float: ...
    @overload
    def GetVelocity(self) -> Vector: ...
    @overload
    def GetVelocity() -> structVector: ...
    @overload
    def GetbAlwaysEncroachCheck(self) -> int: ...
    @overload
    def GetbAlwaysEncroachCheck() -> unsignedlong: ...
    @overload
    def GetbAlwaysRelevant(self) -> int: ...
    @overload
    def GetbAlwaysRelevant() -> unsignedlong: ...
    @overload
    def GetbAlwaysTick(self) -> int: ...
    @overload
    def GetbAlwaysTick() -> unsignedlong: ...
    @overload
    def GetbBlockActors(self) -> int: ...
    @overload
    def GetbBlockActors() -> unsignedlong: ...
    @overload
    def GetbBlocksNavigation(self) -> int: ...
    @overload
    def GetbBlocksNavigation() -> unsignedlong: ...
    @overload
    def GetbBlocksTeleport(self) -> int: ...
    @overload
    def GetbBlocksTeleport() -> unsignedlong: ...
    @overload
    def GetbBounce(self) -> int: ...
    @overload
    def GetbBounce() -> unsignedlong: ...
    @overload
    def GetbCallRigidBodyWakeEvents(self) -> int: ...
    @overload
    def GetbCallRigidBodyWakeEvents() -> unsignedlong: ...
    @overload
    def GetbCanTeleport(self) -> int: ...
    @overload
    def GetbCanTeleport() -> unsignedlong: ...
    @overload
    def GetbCollideActors(self) -> int: ...
    @overload
    def GetbCollideActors() -> unsignedlong: ...
    @overload
    def GetbCollideComplex(self) -> int: ...
    @overload
    def GetbCollideComplex() -> unsignedlong: ...
    @overload
    def GetbCollideWhenPlacing(self) -> int: ...
    @overload
    def GetbCollideWhenPlacing() -> unsignedlong: ...
    @overload
    def GetbCollideWorld(self) -> int: ...
    @overload
    def GetbCollideWorld() -> unsignedlong: ...
    @overload
    def GetbComponentOutsideWorld(self) -> int: ...
    @overload
    def GetbComponentOutsideWorld() -> unsignedlong: ...
    @overload
    def GetbDeleteMe(self) -> int: ...
    @overload
    def GetbDeleteMe() -> unsignedlong: ...
    @overload
    def GetbDemoOwner(self) -> int: ...
    @overload
    def GetbDemoOwner() -> unsignedlong: ...
    @overload
    def GetbDemoRecording(self) -> int: ...
    @overload
    def GetbDemoRecording() -> unsignedlong: ...
    @overload
    def GetbEditable(self) -> int: ...
    @overload
    def GetbEditable() -> unsignedlong: ...
    @overload
    def GetbForceDemoRelevant(self) -> int: ...
    @overload
    def GetbForceDemoRelevant() -> unsignedlong: ...
    @overload
    def GetbForceNetUpdate(self) -> int: ...
    @overload
    def GetbForceNetUpdate() -> unsignedlong: ...
    @overload
    def GetbForcePacketUpdate(self) -> int: ...
    @overload
    def GetbForcePacketUpdate() -> unsignedlong: ...
    @overload
    def GetbGameRelevant(self) -> int: ...
    @overload
    def GetbGameRelevant() -> unsignedlong: ...
    @overload
    def GetbHasAlternateTargetLocation(self) -> int: ...
    @overload
    def GetbHasAlternateTargetLocation() -> unsignedlong: ...
    @overload
    def GetbHidden(self) -> int: ...
    @overload
    def GetbHidden() -> unsignedlong: ...
    @overload
    def GetbHiddenSelf(self) -> int: ...
    @overload
    def GetbHiddenSelf() -> unsignedlong: ...
    @overload
    def GetbIgnoreRigidBodyPawns(self) -> int: ...
    @overload
    def GetbIgnoreRigidBodyPawns() -> unsignedlong: ...
    @overload
    def GetbIsMoving(self) -> int: ...
    @overload
    def GetbIsMoving() -> unsignedlong: ...
    @overload
    def GetbKillDuringLevelTransition(self) -> int: ...
    @overload
    def GetbKillDuringLevelTransition() -> unsignedlong: ...
    @overload
    def GetbLockLocation(self) -> int: ...
    @overload
    def GetbLockLocation() -> unsignedlong: ...
    @overload
    def GetbMovable(self) -> int: ...
    @overload
    def GetbMovable() -> unsignedlong: ...
    @overload
    def GetbNetInitialRotation(self) -> int: ...
    @overload
    def GetbNetInitialRotation() -> unsignedlong: ...
    @overload
    def GetbNoDelete(self) -> int: ...
    @overload
    def GetbNoDelete() -> unsignedlong: ...
    @overload
    def GetbOnlyOwnerSee(self) -> int: ...
    @overload
    def GetbOnlyOwnerSee() -> unsignedlong: ...
    @overload
    def GetbOrientOnSlope(self) -> int: ...
    @overload
    def GetbOrientOnSlope() -> unsignedlong: ...
    @overload
    def GetbPendingNetUpdate(self) -> int: ...
    @overload
    def GetbPendingNetUpdate() -> unsignedlong: ...
    @overload
    def GetbPhysRigidBodyOutOfWorldCheck(self) -> int: ...
    @overload
    def GetbPhysRigidBodyOutOfWorldCheck() -> unsignedlong: ...
    @overload
    def GetbPostRenderIfNotVisible(self) -> int: ...
    @overload
    def GetbPostRenderIfNotVisible() -> unsignedlong: ...
    @overload
    def GetbReplicateInstigator(self) -> int: ...
    @overload
    def GetbReplicateInstigator() -> unsignedlong: ...
    @overload
    def GetbReplicateMovement(self) -> int: ...
    @overload
    def GetbReplicateMovement() -> unsignedlong: ...
    @overload
    def GetbReplicateRigidBodyLocation(self) -> int: ...
    @overload
    def GetbReplicateRigidBodyLocation() -> unsignedlong: ...
    @overload
    def GetbRigidBodyWasAwake(self) -> int: ...
    @overload
    def GetbRigidBodyWasAwake() -> unsignedlong: ...
    @overload
    def GetbStatic(self) -> int: ...
    @overload
    def GetbStatic() -> unsignedlong: ...
    @overload
    def GetbTickIsDisabled(self) -> int: ...
    @overload
    def GetbTickIsDisabled() -> unsignedlong: ...
    @overload
    def GetbTicked(self) -> int: ...
    @overload
    def GetbTicked() -> unsignedlong: ...
    @overload
    def GetbUpdateSimulatedPosition(self) -> int: ...
    @overload
    def GetbUpdateSimulatedPosition() -> unsignedlong: ...
    @overload
    def GetbWorldGeometry(self) -> int: ...
    @overload
    def GetbWorldGeometry() -> unsignedlong: ...
    @overload
    def IsBasedOn(self, TestActor: ActorWrapper) -> bool: ...
    @overload
    def IsBasedOn(classActorWrapper) -> bool: ...
    @overload
    def IsInPersistentLevel(self, bIncludeLevelStreamingPersistent: int) -> bool: ...
    @overload
    def IsInPersistentLevel(unsignedlong) -> bool: ...
    @overload
    def IsNull(self) -> bool: ...
    @overload
    def IsNull() -> bool: ...
    @overload
    def IsOverlapping(self, A: ActorWrapper) -> bool: ...
    @overload
    def IsOverlapping(classActorWrapper) -> bool: ...
    @overload
    def IsOwnedBy(self, TestActor: ActorWrapper) -> bool: ...
    @overload
    def IsOwnedBy(classActorWrapper) -> bool: ...
    @overload
    def IsPlayerOwned(self) -> bool: ...
    @overload
    def IsPlayerOwned() -> bool: ...
    @overload
    def IsStationary(self) -> bool: ...
    @overload
    def IsStationary() -> bool: ...
    @overload
    def SetAngularVelocity(self, v: Vector, addToCurrent: bool) -> None: ...
    @overload
    def SetAngularVelocity(conststructVector, bool) -> void: ...
    @overload
    def SetBlockRigidBody(self, newBlockRigidBody: int) -> None: ...
    @overload
    def SetBlockRigidBody(unsignedlong) -> void: ...
    @overload
    def SetCollisionType(self, newCollisionType: int) -> None: ...
    @overload
    def SetCollisionType(unsignedchar) -> void: ...
    @overload
    def SetCustomTimeDilation(self, newCustomTimeDilation: float) -> None: ...
    @overload
    def SetCustomTimeDilation(float) -> void: ...
    @overload
    def SetDrawScale(self, newDrawScale: float) -> None: ...
    @overload
    def SetDrawScale(float) -> void: ...
    @overload
    def SetDrawScale3D(self, newDrawScale3D: Vector) -> None: ...
    @overload
    def SetDrawScale3D(structVector) -> void: ...
    @overload
    def SetEditorIconColor(self, newEditorIconColor: UnrealColor) -> None: ...
    @overload
    def SetEditorIconColor(structUnrealColor) -> void: ...
    @overload
    def SetHUDLocation(self, NewHUDLocation: Vector) -> None: ...
    @overload
    def SetHUDLocation(structVector&) -> void: ...
    @overload
    def SetHidden2(self, bNewHidden: int) -> None: ...
    @overload
    def SetHidden2(unsignedlong) -> void: ...
    @overload
    def SetHiddenEditorViews(self, newHiddenEditorViews: int) -> None: ...
    @overload
    def SetHiddenEditorViews(unsignedlonglong) -> void: ...
    @overload
    def SetLastForcePacketUpdateTime(self, newLastForcePacketUpdateTime: float) -> None: ...
    @overload
    def SetLastForcePacketUpdateTime(float) -> void: ...
    @overload
    def SetLocation(self, location: Vector) -> None: ...
    @overload
    def SetLocation(conststructVector) -> void: ...
    @overload
    def SetNetPriority(self, newNetPriority: float) -> None: ...
    @overload
    def SetNetPriority(float) -> void: ...
    @overload
    def SetNetUpdateFrequency(self, newNetUpdateFrequency: float) -> None: ...
    @overload
    def SetNetUpdateFrequency(float) -> void: ...
    @overload
    def SetNetUpdateTime(self, newNetUpdateTime: float) -> None: ...
    @overload
    def SetNetUpdateTime(float) -> void: ...
    @overload
    def SetPhysics(self, newPhysics: int) -> None: ...
    @overload
    def SetPhysics(unsignedchar) -> void: ...
    @overload
    def SetPhysics2(self, newPhysics: int) -> None: ...
    @overload
    def SetPhysics2(unsignedchar) -> void: ...
    @overload
    def SetPrePivot(self, newPrePivot: Vector) -> None: ...
    @overload
    def SetPrePivot(structVector) -> void: ...
    @overload
    def SetRelativeLocation(self, newRelativeLocation: Vector) -> None: ...
    @overload
    def SetRelativeLocation(structVector) -> void: ...
    @overload
    def SetRelativeRotation(self, newRelativeRotation: Rotator) -> None: ...
    @overload
    def SetRelativeRotation(structRotator) -> void: ...
    @overload
    def SetRemoteRole(self, newRemoteRole: int) -> None: ...
    @overload
    def SetRemoteRole(unsignedchar) -> void: ...
    @overload
    def SetReplicatedCollisionType(self, newReplicatedCollisionType: int) -> None: ...
    @overload
    def SetReplicatedCollisionType(unsignedchar) -> void: ...
    @overload
    def SetRole(self, newRole: int) -> None: ...
    @overload
    def SetRole(unsignedchar) -> void: ...
    @overload
    def SetRotation(self, rotation: Rotator) -> None: ...
    @overload
    def SetRotation(conststructRotator) -> void: ...
    @overload
    def SetTickIsDisabled(self, bInDisabled: int) -> None: ...
    @overload
    def SetTickIsDisabled(unsignedlong) -> void: ...
    @overload
    def SetTorque(self, torq: Vector) -> None: ...
    @overload
    def SetTorque(conststructVector) -> void: ...
    @overload
    def SetVelocity(self, velocity: Vector) -> None: ...
    @overload
    def SetVelocity(conststructVector) -> void: ...
    @overload
    def SetbAlwaysEncroachCheck(self, newbAlwaysEncroachCheck: int) -> None: ...
    @overload
    def SetbAlwaysEncroachCheck(unsignedlong) -> void: ...
    @overload
    def SetbAlwaysTick(self, newbAlwaysTick: int) -> None: ...
    @overload
    def SetbAlwaysTick(unsignedlong) -> void: ...
    @overload
    def SetbBlockActors(self, newbBlockActors: int) -> None: ...
    @overload
    def SetbBlockActors(unsignedlong) -> void: ...
    @overload
    def SetbBlocksNavigation(self, newbBlocksNavigation: int) -> None: ...
    @overload
    def SetbBlocksNavigation(unsignedlong) -> void: ...
    @overload
    def SetbBlocksTeleport(self, newbBlocksTeleport: int) -> None: ...
    @overload
    def SetbBlocksTeleport(unsignedlong) -> void: ...
    @overload
    def SetbBounce(self, newbBounce: int) -> None: ...
    @overload
    def SetbBounce(unsignedlong) -> void: ...
    @overload
    def SetbCallRigidBodyWakeEvents(self, newbCallRigidBodyWakeEvents: int) -> None: ...
    @overload
    def SetbCallRigidBodyWakeEvents(unsignedlong) -> void: ...
    @overload
    def SetbCanTeleport(self, newbCanTeleport: int) -> None: ...
    @overload
    def SetbCanTeleport(unsignedlong) -> void: ...
    @overload
    def SetbCollideActors(self, newbCollideActors: int) -> None: ...
    @overload
    def SetbCollideActors(unsignedlong) -> void: ...
    @overload
    def SetbCollideComplex(self, newbCollideComplex: int) -> None: ...
    @overload
    def SetbCollideComplex(unsignedlong) -> void: ...
    @overload
    def SetbCollideWhenPlacing(self, newbCollideWhenPlacing: int) -> None: ...
    @overload
    def SetbCollideWhenPlacing(unsignedlong) -> void: ...
    @overload
    def SetbCollideWorld(self, newbCollideWorld: int) -> None: ...
    @overload
    def SetbCollideWorld(unsignedlong) -> void: ...
    @overload
    def SetbDeleteMe(self, newbDeleteMe: int) -> None: ...
    @overload
    def SetbDeleteMe(unsignedlong) -> void: ...
    @overload
    def SetbDemoOwner(self, newbDemoOwner: int) -> None: ...
    @overload
    def SetbDemoOwner(unsignedlong) -> void: ...
    @overload
    def SetbDemoRecording(self, newbDemoRecording: int) -> None: ...
    @overload
    def SetbDemoRecording(unsignedlong) -> void: ...
    @overload
    def SetbEditable(self, newbEditable: int) -> None: ...
    @overload
    def SetbEditable(unsignedlong) -> void: ...
    @overload
    def SetbForceDemoRelevant(self, newbForceDemoRelevant: int) -> None: ...
    @overload
    def SetbForceDemoRelevant(unsignedlong) -> void: ...
    @overload
    def SetbForceNetUpdate(self, newbForceNetUpdate: int) -> None: ...
    @overload
    def SetbForceNetUpdate(unsignedlong) -> void: ...
    @overload
    def SetbForcePacketUpdate(self, newbForcePacketUpdate: int) -> None: ...
    @overload
    def SetbForcePacketUpdate(unsignedlong) -> void: ...
    @overload
    def SetbGameRelevant(self, newbGameRelevant: int) -> None: ...
    @overload
    def SetbGameRelevant(unsignedlong) -> void: ...
    @overload
    def SetbHiddenSelf(self, newbHiddenSelf: int) -> None: ...
    @overload
    def SetbHiddenSelf(unsignedlong) -> void: ...
    @overload
    def SetbIgnoreRigidBodyPawns(self, newbIgnoreRigidBodyPawns: int) -> None: ...
    @overload
    def SetbIgnoreRigidBodyPawns(unsignedlong) -> void: ...
    @overload
    def SetbKillDuringLevelTransition(self, newbKillDuringLevelTransition: int) -> None: ...
    @overload
    def SetbKillDuringLevelTransition(unsignedlong) -> void: ...
    @overload
    def SetbLockLocation(self, newbLockLocation: int) -> None: ...
    @overload
    def SetbLockLocation(unsignedlong) -> void: ...
    @overload
    def SetbMovable(self, newbMovable: int) -> None: ...
    @overload
    def SetbMovable(unsignedlong) -> void: ...
    @overload
    def SetbNetInitialRotation(self, newbNetInitialRotation: int) -> None: ...
    @overload
    def SetbNetInitialRotation(unsignedlong) -> void: ...
    @overload
    def SetbNoDelete(self, newbNoDelete: int) -> None: ...
    @overload
    def SetbNoDelete(unsignedlong) -> void: ...
    @overload
    def SetbOnlyOwnerSee(self, newbOnlyOwnerSee: int) -> None: ...
    @overload
    def SetbOnlyOwnerSee(unsignedlong) -> void: ...
    @overload
    def SetbOrientOnSlope(self, newbOrientOnSlope: int) -> None: ...
    @overload
    def SetbOrientOnSlope(unsignedlong) -> void: ...
    @overload
    def SetbPendingNetUpdate(self, newbPendingNetUpdate: int) -> None: ...
    @overload
    def SetbPendingNetUpdate(unsignedlong) -> void: ...
    @overload
    def SetbPhysRigidBodyOutOfWorldCheck(self, newbPhysRigidBodyOutOfWorldCheck: int) -> None: ...
    @overload
    def SetbPhysRigidBodyOutOfWorldCheck(unsignedlong) -> void: ...
    @overload
    def SetbPostRenderIfNotVisible(self, newbPostRenderIfNotVisible: int) -> None: ...
    @overload
    def SetbPostRenderIfNotVisible(unsignedlong) -> void: ...
    @overload
    def SetbReplicateRigidBodyLocation(self, newbReplicateRigidBodyLocation: int) -> None: ...
    @overload
    def SetbReplicateRigidBodyLocation(unsignedlong) -> void: ...
    @overload
    def SetbRigidBodyWasAwake(self, newbRigidBodyWasAwake: int) -> None: ...
    @overload
    def SetbRigidBodyWasAwake(unsignedlong) -> void: ...
    @overload
    def SetbTickIsDisabled(self, newbTickIsDisabled: int) -> None: ...
    @overload
    def SetbTickIsDisabled(unsignedlong) -> void: ...
    @overload
    def SetbTicked(self, newbTicked: int) -> None: ...
    @overload
    def SetbTicked(unsignedlong) -> void: ...
    @overload
    def SetbUpdateSimulatedPosition(self, newbUpdateSimulatedPosition: int) -> None: ...
    @overload
    def SetbUpdateSimulatedPosition(unsignedlong) -> void: ...
    @overload
    def SetbWorldGeometry(self, newbWorldGeometry: int) -> None: ...
    @overload
    def SetbWorldGeometry(unsignedlong) -> void: ...
    @overload
    def Stop(self) -> None: ...
    @overload
    def Stop() -> void: ...
    def WillOverlap(self, PosA: Vector, VelA: Vector, PosB: Vector, VelB: Vector, StepSize: float, Radius: float, Time: float) -> bool: ...
    def assign(self, rhs: ActorWrapper) -> ActorWrapper: ...
    @overload
    def eventDebugMessagePlayer(self, msg: str) -> None: ...
    @overload
    def eventDebugMessagePlayer(std) -> void: ...
    @overload
    def eventFellOutOfWorld(self) -> None: ...
    @overload
    def eventFellOutOfWorld() -> void: ...
    @overload
    def eventPostDemoRewind(self) -> None: ...
    @overload
    def eventPostDemoRewind() -> void: ...
    @overload
    def eventReplicationEnded(self) -> None: ...
    @overload
    def eventReplicationEnded() -> void: ...
    @overload
    def eventScriptGetTeamNum(self) -> int: ...
    @overload
    def eventScriptGetTeamNum() -> unsignedchar: ...
    @overload
    def eventSpawnedByKismet(self) -> None: ...
    @overload
    def eventSpawnedByKismet() -> void: ...

class AirControlComponentWrapper(CarComponentWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: AirControlComponentWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def ApplyForces(self, ActiveTime: float) -> None: ...
    @overload
    def ApplyForces(float) -> void: ...
    @overload
    def GetAirControlSensitivity(self) -> float: ...
    @overload
    def GetAirControlSensitivity() -> float: ...
    @overload
    def GetAirDamping(self) -> Rotator: ...
    @overload
    def GetAirDamping() -> structRotator: ...
    @overload
    def GetAirTorque(self) -> Rotator: ...
    @overload
    def GetAirTorque() -> structRotator: ...
    @overload
    def GetControlScale(self) -> float: ...
    @overload
    def GetControlScale() -> float: ...
    @overload
    def GetDodgeDisableTimeRemaining(self) -> float: ...
    @overload
    def GetDodgeDisableTimeRemaining() -> float: ...
    @overload
    def GetThrottleForce(self) -> float: ...
    @overload
    def GetThrottleForce() -> float: ...
    @overload
    def OnCreated(self) -> None: ...
    @overload
    def OnCreated() -> void: ...
    @overload
    def SetAirControlSensitivity(self, newAirControlSensitivity: float) -> None: ...
    @overload
    def SetAirControlSensitivity(float) -> void: ...
    @overload
    def SetAirDamping(self, newAirDamping: Rotator) -> None: ...
    @overload
    def SetAirDamping(structRotator) -> void: ...
    @overload
    def SetAirTorque(self, newAirTorque: Rotator) -> None: ...
    @overload
    def SetAirTorque(structRotator) -> void: ...
    @overload
    def SetControlScale(self, newControlScale: float) -> None: ...
    @overload
    def SetControlScale(float) -> void: ...
    @overload
    def SetDodgeDisableTimeRemaining(self, newDodgeDisableTimeRemaining: float) -> None: ...
    @overload
    def SetDodgeDisableTimeRemaining(float) -> void: ...
    @overload
    def SetThrottleForce(self, newThrottleForce: float) -> None: ...
    @overload
    def SetThrottleForce(float) -> void: ...
    def assign(self, rhs: AirControlComponentWrapper) -> AirControlComponentWrapper: ...

class ArrayWrapper_ActorWrapper_t:
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: ArrayWrapper_ActorWrapper_t) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def Count(self) -> int: ...
    @overload
    def Count() -> int: ...
    @overload
    def Get(self, index: int) -> ActorWrapper: ...
    @overload
    def Get(int) -> classActorWrapper: ...
    def assign(self, rhs: ArrayWrapper_ActorWrapper_t) -> ArrayWrapper_ActorWrapper_t: ...

class ArrayWrapper_BallWrapper_t:
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: ArrayWrapper_BallWrapper_t) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def Count(self) -> int: ...
    @overload
    def Count() -> int: ...
    @overload
    def Get(self, index: int) -> BallWrapper: ...
    @overload
    def Get(int) -> classBallWrapper: ...
    def assign(self, rhs: ArrayWrapper_BallWrapper_t) -> ArrayWrapper_BallWrapper_t: ...

class ArrayWrapper_CarComponentWrapper_t:
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: ArrayWrapper_CarComponentWrapper_t) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def Count(self) -> int: ...
    @overload
    def Count() -> int: ...
    @overload
    def Get(self, index: int) -> CarComponentWrapper: ...
    @overload
    def Get(int) -> classCarComponentWrapper: ...
    def assign(self, rhs: ArrayWrapper_CarComponentWrapper_t) -> ArrayWrapper_CarComponentWrapper_t: ...

class ArrayWrapper_CarWrapper_t:
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: ArrayWrapper_CarWrapper_t) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def Count(self) -> int: ...
    @overload
    def Count() -> int: ...
    @overload
    def Get(self, index: int) -> CarWrapper: ...
    @overload
    def Get(int) -> classCarWrapper: ...
    def assign(self, rhs: ArrayWrapper_CarWrapper_t) -> ArrayWrapper_CarWrapper_t: ...

class ArrayWrapper_GoalWrapper_t:
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: ArrayWrapper_GoalWrapper_t) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def Count(self) -> int: ...
    @overload
    def Count() -> int: ...
    @overload
    def Get(self, index: int) -> GoalWrapper: ...
    @overload
    def Get(int) -> classGoalWrapper: ...
    def assign(self, rhs: ArrayWrapper_GoalWrapper_t) -> ArrayWrapper_GoalWrapper_t: ...

class ArrayWrapper_PlayerControllerWrapper_t:
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: ArrayWrapper_PlayerControllerWrapper_t) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def Count(self) -> int: ...
    @overload
    def Count() -> int: ...
    @overload
    def Get(self, index: int) -> PlayerControllerWrapper: ...
    @overload
    def Get(int) -> classPlayerControllerWrapper: ...
    def assign(self, rhs: ArrayWrapper_PlayerControllerWrapper_t) -> ArrayWrapper_PlayerControllerWrapper_t: ...

class ArrayWrapper_PriWrapper_t:
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: ArrayWrapper_PriWrapper_t) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def Count(self) -> int: ...
    @overload
    def Count() -> int: ...
    @overload
    def Get(self, index: int) -> PriWrapper: ...
    @overload
    def Get(int) -> classPriWrapper: ...
    def assign(self, rhs: ArrayWrapper_PriWrapper_t) -> ArrayWrapper_PriWrapper_t: ...

class ArrayWrapper_RBActorWrapper_t:
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: ArrayWrapper_RBActorWrapper_t) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def Count(self) -> int: ...
    @overload
    def Count() -> int: ...
    @overload
    def Get(self, index: int) -> RBActorWrapper: ...
    @overload
    def Get(int) -> classRBActorWrapper: ...
    def assign(self, rhs: ArrayWrapper_RBActorWrapper_t) -> ArrayWrapper_RBActorWrapper_t: ...

class ArrayWrapper_SampleHistoryWrapper_t:
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: ArrayWrapper_SampleHistoryWrapper_t) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def Count(self) -> int: ...
    @overload
    def Count() -> int: ...
    @overload
    def Get(self, index: int) -> SampleHistoryWrapper: ...
    @overload
    def Get(int) -> classSampleHistoryWrapper: ...
    def assign(self, rhs: ArrayWrapper_SampleHistoryWrapper_t) -> ArrayWrapper_SampleHistoryWrapper_t: ...

class ArrayWrapper_StatGraphWrapper_t:
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: ArrayWrapper_StatGraphWrapper_t) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def Count(self) -> int: ...
    @overload
    def Count() -> int: ...
    @overload
    def Get(self, index: int) -> StatGraphWrapper: ...
    @overload
    def Get(int) -> classStatGraphWrapper: ...
    def assign(self, rhs: ArrayWrapper_StatGraphWrapper_t) -> ArrayWrapper_StatGraphWrapper_t: ...

class ArrayWrapper_TeamWrapper_t:
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: ArrayWrapper_TeamWrapper_t) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def Count(self) -> int: ...
    @overload
    def Count() -> int: ...
    @overload
    def Get(self, index: int) -> TeamWrapper: ...
    @overload
    def Get(int) -> classTeamWrapper: ...
    def assign(self, rhs: ArrayWrapper_TeamWrapper_t) -> ArrayWrapper_TeamWrapper_t: ...

class ArrayWrapper_WheelWrapper_t:
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: ArrayWrapper_WheelWrapper_t) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def Count(self) -> int: ...
    @overload
    def Count() -> int: ...
    @overload
    def Get(self, index: int) -> WheelWrapper: ...
    @overload
    def Get(int) -> classWheelWrapper: ...
    def assign(self, rhs: ArrayWrapper_WheelWrapper_t) -> ArrayWrapper_WheelWrapper_t: ...

class ArrayWrapper_wchar_t_t:
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: ArrayWrapper_wchar_t_t) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def Count(self) -> int: ...
    @overload
    def Count() -> int: ...
    @overload
    def Get(self, index: int) -> str: ...
    @overload
    def Get(int) -> wchar_t: ...
    def assign(self, rhs: ArrayWrapper_wchar_t_t) -> ArrayWrapper_wchar_t_t: ...

class AttachmentPickup(RumblePickupComponentWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: AttachmentPickup) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def PickupEnd(self) -> None: ...
    @overload
    def PickupEnd() -> void: ...
    @overload
    def PickupStart(self) -> None: ...
    @overload
    def PickupStart() -> void: ...
    def assign(self, rhs: AttachmentPickup) -> AttachmentPickup: ...

class BallCarSpringPickup(SpringPickup):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: BallCarSpringPickup) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    def ScaleSpringMeshToLocation(self, NewLocation: Vector, TargetLocation: Vector) -> None: ...
    def assign(self, rhs: BallCarSpringPickup) -> BallCarSpringPickup: ...

class BallFreezePickup(TargetedPickup):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: BallFreezePickup) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def ApplyForces(self, ActiveTime: float) -> None: ...
    @overload
    def ApplyForces(float) -> void: ...
    @overload
    def GetBall(self) -> BallWrapper: ...
    @overload
    def GetBall() -> classBallWrapper: ...
    @overload
    def GetOrigAngularVelocity(self) -> Vector: ...
    @overload
    def GetOrigAngularVelocity() -> structVector: ...
    @overload
    def GetOrigLinearVelocity(self) -> Vector: ...
    @overload
    def GetOrigLinearVelocity() -> structVector: ...
    @overload
    def GetOrigSpeed(self) -> float: ...
    @overload
    def GetOrigSpeed() -> float: ...
    @overload
    def GetRepOrigSpeed(self) -> float: ...
    @overload
    def GetRepOrigSpeed() -> float: ...
    @overload
    def GetStopMomentumPercentage(self) -> float: ...
    @overload
    def GetStopMomentumPercentage() -> float: ...
    @overload
    def GetTimeToStop(self) -> float: ...
    @overload
    def GetTimeToStop() -> float: ...
    @overload
    def GetbMaintainMomentum(self) -> int: ...
    @overload
    def GetbMaintainMomentum() -> unsignedlong: ...
    @overload
    def GetbTouched(self) -> int: ...
    @overload
    def GetbTouched() -> unsignedlong: ...
    @overload
    def HandleBallExploded(self, InBall: BallWrapper) -> None: ...
    @overload
    def HandleBallExploded(classBallWrapper) -> void: ...
    @overload
    def HandleBallHit(self, InBall: BallWrapper, InCar: CarWrapper, HitType: int) -> None: ...
    @overload
    def HandleBallHit(classBallWrapper, classCarWrapper, unsignedchar) -> void: ...
    @overload
    def OnTargetChanged(self) -> None: ...
    @overload
    def OnTargetChanged() -> void: ...
    @overload
    def PickupEnd(self) -> None: ...
    @overload
    def PickupEnd() -> void: ...
    @overload
    def PickupStart(self) -> None: ...
    @overload
    def PickupStart() -> void: ...
    @overload
    def SetBall(self, newBall: BallWrapper) -> None: ...
    @overload
    def SetBall(classBallWrapper) -> void: ...
    @overload
    def SetOrigAngularVelocity(self, newOrigAngularVelocity: Vector) -> None: ...
    @overload
    def SetOrigAngularVelocity(structVector) -> void: ...
    @overload
    def SetOrigLinearVelocity(self, newOrigLinearVelocity: Vector) -> None: ...
    @overload
    def SetOrigLinearVelocity(structVector) -> void: ...
    @overload
    def SetOrigSpeed(self, newOrigSpeed: float) -> None: ...
    @overload
    def SetOrigSpeed(float) -> void: ...
    @overload
    def SetRepOrigSpeed(self, newRepOrigSpeed: float) -> None: ...
    @overload
    def SetRepOrigSpeed(float) -> void: ...
    @overload
    def SetStopMomentumPercentage(self, newStopMomentumPercentage: float) -> None: ...
    @overload
    def SetStopMomentumPercentage(float) -> void: ...
    @overload
    def SetTimeToStop(self, newTimeToStop: float) -> None: ...
    @overload
    def SetTimeToStop(float) -> void: ...
    @overload
    def SetbMaintainMomentum(self, newbMaintainMomentum: int) -> None: ...
    @overload
    def SetbMaintainMomentum(unsignedlong) -> void: ...
    @overload
    def SetbTouched(self, newbTouched: int) -> None: ...
    @overload
    def SetbTouched(unsignedlong) -> void: ...
    def assign(self, rhs: BallFreezePickup) -> BallFreezePickup: ...

class BallLassoPickup(SpringPickup):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: BallLassoPickup) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def DoSpring(self, bFirstHit: int) -> None: ...
    @overload
    def DoSpring(unsignedlong) -> void: ...
    def ScaleSpringMeshToLocation(self, NewLocation: Vector, TargetLocation: Vector) -> None: ...
    def assign(self, rhs: BallLassoPickup) -> BallLassoPickup: ...

class BallWrapper(RBActorWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: BallWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def DoDestroy(self) -> None: ...
    @overload
    def DoDestroy() -> void: ...
    @overload
    def DoExplode(self) -> None: ...
    @overload
    def DoExplode() -> void: ...
    @overload
    def EventHitGoal(self, Ball: BallWrapper, Goal: GoalWrapper) -> None: ...
    @overload
    def EventHitGoal(classBallWrapper, classGoalWrapper) -> void: ...
    @overload
    def Explode(self, ExplosionGoal: GoalWrapper, ExplodeLocation: Vector, Scorer: PriWrapper) -> None: ...
    @overload
    def Explode(classGoalWrapper, structVector&, classPriWrapper) -> void: ...
    @overload
    def FellOutOfWorld(self) -> None: ...
    @overload
    def FellOutOfWorld() -> void: ...
    @overload
    def GetAdditionalCarBounceScaleZ(self, Car: CarWrapper) -> float: ...
    @overload
    def GetAdditionalCarBounceScaleZ(classCarWrapper) -> float: ...
    @overload
    def GetAdditionalCarGroundBounceScaleXY(self) -> float: ...
    @overload
    def GetAdditionalCarGroundBounceScaleXY() -> float: ...
    @overload
    def GetAdditionalCarGroundBounceScaleZ(self) -> float: ...
    @overload
    def GetAdditionalCarGroundBounceScaleZ() -> float: ...
    @overload
    def GetCurrentAffector(self) -> CarWrapper: ...
    @overload
    def GetCurrentAffector() -> classCarWrapper: ...
    @overload
    def GetEndOfGameFXArchetype(self) -> FXActorWrapper: ...
    @overload
    def GetEndOfGameFXArchetype() -> classFXActorWrapper: ...
    @overload
    def GetExplosionTime(self) -> float: ...
    @overload
    def GetExplosionTime() -> float: ...
    @overload
    def GetGameEvent(self) -> ServerWrapper: ...
    @overload
    def GetGameEvent() -> classServerWrapper: ...
    @overload
    def GetGroundForce(self) -> float: ...
    @overload
    def GetGroundForce() -> float: ...
    @overload
    def GetHitTeamNum(self) -> int: ...
    @overload
    def GetHitTeamNum() -> unsignedchar: ...
    @overload
    def GetInitialLocation(self) -> Vector: ...
    @overload
    def GetInitialLocation() -> structVector: ...
    @overload
    def GetLastCalculateCarHit(self) -> float: ...
    @overload
    def GetLastCalculateCarHit() -> float: ...
    @overload
    def GetLastHitWorldTime(self) -> float: ...
    @overload
    def GetLastHitWorldTime() -> float: ...
    @overload
    def GetLastPredictionTime(self) -> float: ...
    @overload
    def GetLastPredictionTime() -> float: ...
    @overload
    def GetLastTouchTime(self) -> float: ...
    @overload
    def GetLastTouchTime() -> float: ...
    @overload
    def GetMagnusCoefficient(self) -> Vector: ...
    @overload
    def GetMagnusCoefficient() -> structVector: ...
    @overload
    def GetOldLocation(self) -> Vector: ...
    @overload
    def GetOldLocation() -> structVector: ...
    @overload
    def GetPredictionTimestep(self) -> float: ...
    @overload
    def GetPredictionTimestep() -> float: ...
    @overload
    def GetRadius(self) -> float: ...
    @overload
    def GetRadius() -> float: ...
    @overload
    def GetReplicatedAddedCarBounceScale(self) -> float: ...
    @overload
    def GetReplicatedAddedCarBounceScale() -> float: ...
    @overload
    def GetReplicatedBallGravityScale(self) -> float: ...
    @overload
    def GetReplicatedBallGravityScale() -> float: ...
    @overload
    def GetReplicatedBallMaxLinearSpeedScale(self) -> float: ...
    @overload
    def GetReplicatedBallMaxLinearSpeedScale() -> float: ...
    @overload
    def GetReplicatedBallScale(self) -> float: ...
    @overload
    def GetReplicatedBallScale() -> float: ...
    @overload
    def GetReplicatedWorldBounceScale(self) -> float: ...
    @overload
    def GetReplicatedWorldBounceScale() -> float: ...
    @overload
    def GetTrajectoryStartLocation(self) -> Vector: ...
    @overload
    def GetTrajectoryStartLocation() -> structVector: ...
    @overload
    def GetTrajectoryStartRotation(self) -> Rotator: ...
    @overload
    def GetTrajectoryStartRotation() -> structRotator: ...
    @overload
    def GetTrajectoryStartVelocity(self) -> Vector: ...
    @overload
    def GetTrajectoryStartVelocity() -> structVector: ...
    @overload
    def GetVisualRadius(self) -> float: ...
    @overload
    def GetVisualRadius() -> float: ...
    @overload
    def GetbAllowPlayerExplosionOverride(self) -> int: ...
    @overload
    def GetbAllowPlayerExplosionOverride() -> unsignedlong: ...
    @overload
    def GetbCanBeAttached(self) -> int: ...
    @overload
    def GetbCanBeAttached() -> unsignedlong: ...
    @overload
    def GetbEndOfGameHidden(self) -> int: ...
    @overload
    def GetbEndOfGameHidden() -> unsignedlong: ...
    @overload
    def GetbFadeIn(self) -> int: ...
    @overload
    def GetbFadeIn() -> unsignedlong: ...
    @overload
    def GetbFadeOut(self) -> int: ...
    @overload
    def GetbFadeOut() -> unsignedlong: ...
    @overload
    def GetbItemFreeze(self) -> int: ...
    @overload
    def GetbItemFreeze() -> unsignedlong: ...
    @overload
    def GetbNotifyGroundHit(self) -> int: ...
    @overload
    def GetbNotifyGroundHit() -> unsignedlong: ...
    @overload
    def GetbPredictionOnGround(self) -> int: ...
    @overload
    def GetbPredictionOnGround() -> unsignedlong: ...
    @overload
    def InitAk(self) -> None: ...
    @overload
    def InitAk() -> void: ...
    @overload
    def IsGroundHit(self, HitNormal: Vector) -> bool: ...
    @overload
    def IsGroundHit(structVector&) -> bool: ...
    @overload
    def IsRoundActive(self) -> bool: ...
    @overload
    def IsRoundActive() -> bool: ...
    def Launch(self, LaunchPosition: Vector, LaunchDirection: Vector) -> None: ...
    @overload
    def OnCarTouch(self, HitCar: CarWrapper, HitType: int) -> None: ...
    @overload
    def OnCarTouch(classCarWrapper, unsignedchar) -> void: ...
    @overload
    def PredictPosition(self, timeAhead: float) -> PredictionInfo: ...
    @overload
    def PredictPosition(float) -> structPredictionInfo: ...
    def RecordCarHit(self, HitCar: CarWrapper, HitLocation: Vector, HitNormal: Vector, HitType: int) -> None: ...
    @overload
    def SetAdditionalCarGroundBounceScaleXY(self, newAdditionalCarGroundBounceScaleXY: float) -> None: ...
    @overload
    def SetAdditionalCarGroundBounceScaleXY(float) -> void: ...
    @overload
    def SetAdditionalCarGroundBounceScaleZ(self, newAdditionalCarGroundBounceScaleZ: float) -> None: ...
    @overload
    def SetAdditionalCarGroundBounceScaleZ(float) -> void: ...
    @overload
    def SetBallGravityScale(self, InBallGravityScale: float) -> None: ...
    @overload
    def SetBallGravityScale(float) -> void: ...
    @overload
    def SetBallMaxLinearSpeedScale(self, InMaxLinearSpeedScale: float) -> None: ...
    @overload
    def SetBallMaxLinearSpeedScale(float) -> void: ...
    @overload
    def SetBallScale(self, NewScale: float) -> None: ...
    @overload
    def SetBallScale(float) -> void: ...
    @overload
    def SetCarBounceScale(self, NewScale: float) -> None: ...
    @overload
    def SetCarBounceScale(float) -> void: ...
    @overload
    def SetCurrentAffector(self, newCurrentAffector: CarWrapper) -> None: ...
    @overload
    def SetCurrentAffector(classCarWrapper) -> void: ...
    @overload
    def SetEndOfGameFXArchetype(self, newEndOfGameFXArchetype: FXActorWrapper) -> None: ...
    @overload
    def SetEndOfGameFXArchetype(classFXActorWrapper) -> void: ...
    @overload
    def SetEndOfGameHidden(self) -> None: ...
    @overload
    def SetEndOfGameHidden() -> void: ...
    @overload
    def SetExplosionTime(self, newExplosionTime: float) -> None: ...
    @overload
    def SetExplosionTime(float) -> void: ...
    @overload
    def SetGroundForce(self, newGroundForce: float) -> None: ...
    @overload
    def SetGroundForce(float) -> void: ...
    @overload
    def SetHitTeamNum(self, newHitTeamNum: int) -> None: ...
    @overload
    def SetHitTeamNum(unsignedchar) -> void: ...
    @overload
    def SetInitialLocation(self, newInitialLocation: Vector) -> None: ...
    @overload
    def SetInitialLocation(structVector) -> void: ...
    @overload
    def SetInitialRotation(self, newInitialRotation: Rotator) -> None: ...
    @overload
    def SetInitialRotation(structRotator) -> void: ...
    @overload
    def SetLastPredictionTime(self, newLastPredictionTime: float) -> None: ...
    @overload
    def SetLastPredictionTime(float) -> void: ...
    @overload
    def SetMagnusCoefficient(self, newMagnusCoefficient: Vector) -> None: ...
    @overload
    def SetMagnusCoefficient(structVector) -> void: ...
    @overload
    def SetOldLocation(self, newOldLocation: Vector) -> None: ...
    @overload
    def SetOldLocation(structVector) -> void: ...
    @overload
    def SetPredictionTimestep(self, newPredictionTimestep: float) -> None: ...
    @overload
    def SetPredictionTimestep(float) -> void: ...
    @overload
    def SetRadius(self, newRadius: float) -> None: ...
    @overload
    def SetRadius(float) -> void: ...
    @overload
    def SetReplicatedAddedCarBounceScale(self, newReplicatedAddedCarBounceScale: float) -> None: ...
    @overload
    def SetReplicatedAddedCarBounceScale(float) -> void: ...
    @overload
    def SetReplicatedBallGravityScale(self, newReplicatedBallGravityScale: float) -> None: ...
    @overload
    def SetReplicatedBallGravityScale(float) -> void: ...
    @overload
    def SetReplicatedBallMaxLinearSpeedScale(self, newReplicatedBallMaxLinearSpeedScale: float) -> None: ...
    @overload
    def SetReplicatedBallMaxLinearSpeedScale(float) -> void: ...
    @overload
    def SetReplicatedBallScale(self, newReplicatedBallScale: float) -> None: ...
    @overload
    def SetReplicatedBallScale(float) -> void: ...
    @overload
    def SetReplicatedWorldBounceScale(self, newReplicatedWorldBounceScale: float) -> None: ...
    @overload
    def SetReplicatedWorldBounceScale(float) -> void: ...
    @overload
    def SetVisualRadius(self, newVisualRadius: float) -> None: ...
    @overload
    def SetVisualRadius(float) -> void: ...
    @overload
    def SetWorldBounceScale(self, NewScale: float) -> None: ...
    @overload
    def SetWorldBounceScale(float) -> void: ...
    @overload
    def SetbAllowPlayerExplosionOverride(self, newbAllowPlayerExplosionOverride: int) -> None: ...
    @overload
    def SetbAllowPlayerExplosionOverride(unsignedlong) -> void: ...
    @overload
    def SetbCanBeAttached(self, newbCanBeAttached: int) -> None: ...
    @overload
    def SetbCanBeAttached(unsignedlong) -> void: ...
    @overload
    def SetbEndOfGameHidden(self, newbEndOfGameHidden: int) -> None: ...
    @overload
    def SetbEndOfGameHidden(unsignedlong) -> void: ...
    @overload
    def SetbFadeIn(self, newbFadeIn: int) -> None: ...
    @overload
    def SetbFadeIn(unsignedlong) -> void: ...
    @overload
    def SetbFadeOut(self, newbFadeOut: int) -> None: ...
    @overload
    def SetbFadeOut(unsignedlong) -> void: ...
    @overload
    def SetbItemFreeze(self, newbItemFreeze: int) -> None: ...
    @overload
    def SetbItemFreeze(unsignedlong) -> void: ...
    @overload
    def SetbNotifyGroundHit(self, newbNotifyGroundHit: int) -> None: ...
    @overload
    def SetbNotifyGroundHit(unsignedlong) -> void: ...
    @overload
    def SetbPredictionOnGround(self, newbPredictionOnGround: int) -> None: ...
    @overload
    def SetbPredictionOnGround(unsignedlong) -> void: ...
    @overload
    def ShouldDrawTrajectory(self) -> bool: ...
    @overload
    def ShouldDrawTrajectory() -> bool: ...
    @overload
    def TurnOff(self) -> None: ...
    @overload
    def TurnOff() -> void: ...
    def assign(self, rhs: BallWrapper) -> BallWrapper: ...
    @overload
    def eventOnHitGoal(self, Goal: GoalWrapper, HitLoc: Vector) -> None: ...
    @overload
    def eventOnHitGoal(classGoalWrapper, structVector&) -> void: ...

class BaseCameraWrapper(ActorWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: BaseCameraWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def ApplyAudioFade(self) -> None: ...
    @overload
    def ApplyAudioFade() -> void: ...
    def CalcRadialShakeScale(self, Cam: BaseCameraWrapper, Epicenter: Vector, InnerRadius: float, OuterRadius: float, Falloff: float) -> float: ...
    @overload
    def ClearAllCameraShakes(self) -> None: ...
    @overload
    def ClearAllCameraShakes() -> void: ...
    @overload
    def ClearCameraLensEffects(self) -> None: ...
    @overload
    def ClearCameraLensEffects() -> void: ...
    @overload
    def DoUpdateCamera(self, DeltaTime: float) -> None: ...
    @overload
    def DoUpdateCamera(float) -> void: ...
    @overload
    def GetBlendTimeToGo(self) -> float: ...
    @overload
    def GetBlendTimeToGo() -> float: ...
    @overload
    def GetCamOverridePostProcessAlpha(self) -> float: ...
    @overload
    def GetCamOverridePostProcessAlpha() -> float: ...
    @overload
    def GetCameraRotation(self) -> Rotator: ...
    @overload
    def GetCameraRotation() -> structRotator: ...
    @overload
    def GetColorScale(self) -> Vector: ...
    @overload
    def GetColorScale() -> structVector: ...
    @overload
    def GetColorScaleInterpDuration(self) -> float: ...
    @overload
    def GetColorScaleInterpDuration() -> float: ...
    @overload
    def GetColorScaleInterpStartTime(self) -> float: ...
    @overload
    def GetColorScaleInterpStartTime() -> float: ...
    @overload
    def GetConstrainedAspectRatio(self) -> float: ...
    @overload
    def GetConstrainedAspectRatio() -> float: ...
    @overload
    def GetDefaultAspectRatio(self) -> float: ...
    @overload
    def GetDefaultAspectRatio() -> float: ...
    @overload
    def GetDefaultFOV(self) -> float: ...
    @overload
    def GetDefaultFOV() -> float: ...
    @overload
    def GetDesiredColorScale(self) -> Vector: ...
    @overload
    def GetDesiredColorScale() -> structVector: ...
    @overload
    def GetFOVAngle(self) -> float: ...
    @overload
    def GetFOVAngle() -> float: ...
    @overload
    def GetFadeAmount(self) -> float: ...
    @overload
    def GetFadeAmount() -> float: ...
    @overload
    def GetFadeColor(self) -> UnrealColor: ...
    @overload
    def GetFadeColor() -> structUnrealColor: ...
    @overload
    def GetFadeTime(self) -> float: ...
    @overload
    def GetFadeTime() -> float: ...
    @overload
    def GetFadeTimeRemaining(self) -> float: ...
    @overload
    def GetFadeTimeRemaining() -> float: ...
    @overload
    def GetFreeCamDistance(self) -> float: ...
    @overload
    def GetFreeCamDistance() -> float: ...
    @overload
    def GetFreeCamOffset(self) -> Vector: ...
    @overload
    def GetFreeCamOffset() -> structVector: ...
    @overload
    def GetLockedFOV(self) -> float: ...
    @overload
    def GetLockedFOV() -> float: ...
    @overload
    def GetOffAxisPitchAngle(self) -> float: ...
    @overload
    def GetOffAxisPitchAngle() -> float: ...
    @overload
    def GetOffAxisYawAngle(self) -> float: ...
    @overload
    def GetOffAxisYawAngle() -> float: ...
    @overload
    def GetOriginalColorScale(self) -> Vector: ...
    @overload
    def GetOriginalColorScale() -> structVector: ...
    @overload
    def GetPendingViewTarget(self) -> ViewTarget: ...
    @overload
    def GetPendingViewTarget() -> structViewTarget: ...
    @overload
    def GetViewTarget(self) -> ViewTarget: ...
    @overload
    def GetViewTarget() -> structViewTarget: ...
    @overload
    def GetbConstrainAspectRatio(self) -> int: ...
    @overload
    def GetbConstrainAspectRatio() -> unsignedlong: ...
    @overload
    def GetbDebugClientSideCamera(self) -> int: ...
    @overload
    def GetbDebugClientSideCamera() -> unsignedlong: ...
    @overload
    def GetbEnableColorScaleInterp(self) -> int: ...
    @overload
    def GetbEnableColorScaleInterp() -> unsignedlong: ...
    @overload
    def GetbEnableColorScaling(self) -> int: ...
    @overload
    def GetbEnableColorScaling() -> unsignedlong: ...
    @overload
    def GetbEnableFading(self) -> int: ...
    @overload
    def GetbEnableFading() -> unsignedlong: ...
    @overload
    def GetbFadeAudio(self) -> int: ...
    @overload
    def GetbFadeAudio() -> unsignedlong: ...
    @overload
    def GetbForceDisableTemporalAA(self) -> int: ...
    @overload
    def GetbForceDisableTemporalAA() -> unsignedlong: ...
    @overload
    def GetbLockedFOV(self) -> int: ...
    @overload
    def GetbLockedFOV() -> unsignedlong: ...
    @overload
    def GetbShouldSendClientSideCameraUpdate(self) -> int: ...
    @overload
    def GetbShouldSendClientSideCameraUpdate() -> unsignedlong: ...
    @overload
    def GetbUseClientSideCameraUpdates(self) -> int: ...
    @overload
    def GetbUseClientSideCameraUpdates() -> unsignedlong: ...
    @overload
    def PostBeginPlay(self) -> None: ...
    @overload
    def PostBeginPlay() -> void: ...
    @overload
    def SetBlendTimeToGo(self, newBlendTimeToGo: float) -> None: ...
    @overload
    def SetBlendTimeToGo(float) -> void: ...
    @overload
    def SetCamOverridePostProcessAlpha(self, newCamOverridePostProcessAlpha: float) -> None: ...
    @overload
    def SetCamOverridePostProcessAlpha(float) -> void: ...
    @overload
    def SetColorScale(self, newColorScale: Vector) -> None: ...
    @overload
    def SetColorScale(structVector) -> void: ...
    @overload
    def SetColorScaleInterpDuration(self, newColorScaleInterpDuration: float) -> None: ...
    @overload
    def SetColorScaleInterpDuration(float) -> void: ...
    @overload
    def SetColorScaleInterpStartTime(self, newColorScaleInterpStartTime: float) -> None: ...
    @overload
    def SetColorScaleInterpStartTime(float) -> void: ...
    @overload
    def SetConstrainedAspectRatio(self, newConstrainedAspectRatio: float) -> None: ...
    @overload
    def SetConstrainedAspectRatio(float) -> void: ...
    @overload
    def SetDefaultAspectRatio(self, newDefaultAspectRatio: float) -> None: ...
    @overload
    def SetDefaultAspectRatio(float) -> void: ...
    @overload
    def SetDefaultFOV(self, newDefaultFOV: float) -> None: ...
    @overload
    def SetDefaultFOV(float) -> void: ...
    @overload
    def SetDesiredColorScale(self, newDesiredColorScale: Vector) -> None: ...
    @overload
    def SetDesiredColorScale(structVector) -> void: ...
    @overload
    def SetDesiredColorScale2(self, NewColorScale: Vector, InterpTime: float) -> None: ...
    @overload
    def SetDesiredColorScale2(structVector&, float) -> void: ...
    @overload
    def SetFOV(self, NewFOV: float) -> None: ...
    @overload
    def SetFOV(float) -> void: ...
    @overload
    def SetFadeAmount(self, newFadeAmount: float) -> None: ...
    @overload
    def SetFadeAmount(float) -> void: ...
    @overload
    def SetFadeColor(self, newFadeColor: UnrealColor) -> None: ...
    @overload
    def SetFadeColor(structUnrealColor) -> void: ...
    @overload
    def SetFadeTime(self, newFadeTime: float) -> None: ...
    @overload
    def SetFadeTime(float) -> void: ...
    @overload
    def SetFadeTimeRemaining(self, newFadeTimeRemaining: float) -> None: ...
    @overload
    def SetFadeTimeRemaining(float) -> void: ...
    @overload
    def SetFreeCamDistance(self, newFreeCamDistance: float) -> None: ...
    @overload
    def SetFreeCamDistance(float) -> void: ...
    @overload
    def SetFreeCamOffset(self, newFreeCamOffset: Vector) -> None: ...
    @overload
    def SetFreeCamOffset(structVector) -> void: ...
    @overload
    def SetLockedFOV(self, newLockedFOV: float) -> None: ...
    @overload
    def SetLockedFOV(float) -> void: ...
    @overload
    def SetOffAxisPitchAngle(self, newOffAxisPitchAngle: float) -> None: ...
    @overload
    def SetOffAxisPitchAngle(float) -> void: ...
    @overload
    def SetOffAxisYawAngle(self, newOffAxisYawAngle: float) -> None: ...
    @overload
    def SetOffAxisYawAngle(float) -> void: ...
    @overload
    def SetOriginalColorScale(self, newOriginalColorScale: Vector) -> None: ...
    @overload
    def SetOriginalColorScale(structVector) -> void: ...
    @overload
    def SetPendingViewTarget(self, newPendingViewTarget: ViewTarget) -> None: ...
    @overload
    def SetPendingViewTarget(structViewTarget) -> void: ...
    @overload
    def SetViewTarget(self, newViewTarget: ViewTarget) -> None: ...
    @overload
    def SetViewTarget(structViewTarget) -> void: ...
    @overload
    def SetbConstrainAspectRatio(self, newbConstrainAspectRatio: int) -> None: ...
    @overload
    def SetbConstrainAspectRatio(unsignedlong) -> void: ...
    @overload
    def SetbDebugClientSideCamera(self, newbDebugClientSideCamera: int) -> None: ...
    @overload
    def SetbDebugClientSideCamera(unsignedlong) -> void: ...
    @overload
    def SetbEnableColorScaleInterp(self, newbEnableColorScaleInterp: int) -> None: ...
    @overload
    def SetbEnableColorScaleInterp(unsignedlong) -> void: ...
    @overload
    def SetbEnableColorScaling(self, newbEnableColorScaling: int) -> None: ...
    @overload
    def SetbEnableColorScaling(unsignedlong) -> void: ...
    @overload
    def SetbEnableFading(self, newbEnableFading: int) -> None: ...
    @overload
    def SetbEnableFading(unsignedlong) -> void: ...
    @overload
    def SetbFadeAudio(self, newbFadeAudio: int) -> None: ...
    @overload
    def SetbFadeAudio(unsignedlong) -> void: ...
    @overload
    def SetbForceDisableTemporalAA(self, newbForceDisableTemporalAA: int) -> None: ...
    @overload
    def SetbForceDisableTemporalAA(unsignedlong) -> void: ...
    @overload
    def SetbLockedFOV(self, newbLockedFOV: int) -> None: ...
    @overload
    def SetbLockedFOV(unsignedlong) -> void: ...
    @overload
    def SetbShouldSendClientSideCameraUpdate(self, newbShouldSendClientSideCameraUpdate: int) -> None: ...
    @overload
    def SetbShouldSendClientSideCameraUpdate(unsignedlong) -> void: ...
    @overload
    def SetbUseClientSideCameraUpdates(self, newbUseClientSideCameraUpdates: int) -> None: ...
    @overload
    def SetbUseClientSideCameraUpdates(unsignedlong) -> void: ...
    @overload
    def StopAllCameraAnims(self, bImmediate: int) -> None: ...
    @overload
    def StopAllCameraAnims(unsignedlong) -> void: ...
    @overload
    def UpdateFade(self, DeltaTime: float) -> None: ...
    @overload
    def UpdateFade(float) -> void: ...
    def assign(self, rhs: BaseCameraWrapper) -> BaseCameraWrapper: ...
    @overload
    def eventDestroyed(self) -> None: ...
    @overload
    def eventDestroyed() -> void: ...
    @overload
    def eventUpdateCamera(self, DeltaTime: float) -> None: ...
    @overload
    def eventUpdateCamera(float) -> void: ...

class BattarangPickup(BallLassoPickup):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: BattarangPickup) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def GetCurRotation(self) -> float: ...
    @overload
    def GetCurRotation() -> float: ...
    @overload
    def GetSpinSpeed(self) -> float: ...
    @overload
    def GetSpinSpeed() -> float: ...
    @overload
    def SetCurRotation(self, newCurRotation: float) -> None: ...
    @overload
    def SetCurRotation(float) -> void: ...
    @overload
    def SetSpinSpeed(self, newSpinSpeed: float) -> None: ...
    @overload
    def SetSpinSpeed(float) -> void: ...
    def assign(self, rhs: BattarangPickup) -> BattarangPickup: ...

class BoostModPickup(RumblePickupComponentWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: BoostModPickup) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def GetBoostStrength(self) -> float: ...
    @overload
    def GetBoostStrength() -> float: ...
    @overload
    def GetOldBoostStrength(self) -> float: ...
    @overload
    def GetOldBoostStrength() -> float: ...
    @overload
    def GetbUnlimitedBoost(self) -> int: ...
    @overload
    def GetbUnlimitedBoost() -> unsignedlong: ...
    @overload
    def PickupEnd(self) -> None: ...
    @overload
    def PickupEnd() -> void: ...
    @overload
    def PickupStart(self) -> None: ...
    @overload
    def PickupStart() -> void: ...
    @overload
    def SetBoostStrength(self, newBoostStrength: float) -> None: ...
    @overload
    def SetBoostStrength(float) -> void: ...
    @overload
    def SetOldBoostStrength(self, newOldBoostStrength: float) -> None: ...
    @overload
    def SetOldBoostStrength(float) -> void: ...
    @overload
    def SetbUnlimitedBoost(self, newbUnlimitedBoost: int) -> None: ...
    @overload
    def SetbUnlimitedBoost(unsignedlong) -> void: ...
    def assign(self, rhs: BoostModPickup) -> BoostModPickup: ...

class BoostOverridePickup(TargetedPickup):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: BoostOverridePickup) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def GetOtherCar(self) -> CarWrapper: ...
    @overload
    def GetOtherCar() -> classCarWrapper: ...
    @overload
    def OnTargetChanged(self) -> None: ...
    @overload
    def OnTargetChanged() -> void: ...
    @overload
    def PickupEnd(self) -> None: ...
    @overload
    def PickupEnd() -> void: ...
    @overload
    def PickupStart(self) -> None: ...
    @overload
    def PickupStart() -> void: ...
    @overload
    def SetOtherCar(self, newOtherCar: CarWrapper) -> None: ...
    @overload
    def SetOtherCar(classCarWrapper) -> void: ...
    def assign(self, rhs: BoostOverridePickup) -> BoostOverridePickup: ...

class BoostPickupWrapper(VehiclePickupWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: BoostPickupWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def CanPickup(self, Car: CarWrapper) -> bool: ...
    @overload
    def CanPickup(classCarWrapper) -> bool: ...
    @overload
    def GetBoostAmount(self) -> float: ...
    @overload
    def GetBoostAmount() -> float: ...
    @overload
    def GetBoostType(self) -> int: ...
    @overload
    def GetBoostType() -> unsignedchar: ...
    @overload
    def Pickup2(self, Car: CarWrapper) -> None: ...
    @overload
    def Pickup2(classCarWrapper) -> void: ...
    @overload
    def PlayPickedUpFX(self) -> None: ...
    @overload
    def PlayPickedUpFX() -> void: ...
    @overload
    def SetBoostAmount(self, newBoostAmount: float) -> None: ...
    @overload
    def SetBoostAmount(float) -> void: ...
    @overload
    def SetBoostType(self, newBoostType: int) -> None: ...
    @overload
    def SetBoostType(unsignedchar) -> void: ...
    def assign(self, rhs: BoostPickupWrapper) -> BoostPickupWrapper: ...

class BoostWrapper(CarComponentWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: BoostWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def ApplyForces(self, ActiveTime: float) -> None: ...
    @overload
    def ApplyForces(float) -> void: ...
    @overload
    def CanActivate(self) -> bool: ...
    @overload
    def CanActivate() -> bool: ...
    @overload
    def CanDeactivate(self) -> bool: ...
    @overload
    def CanDeactivate() -> bool: ...
    def ClientFixBoostAmount(self, TimeStamp: float, Amount: float) -> None: ...
    @overload
    def ClientGiveBoost(self, Amount: float) -> None: ...
    @overload
    def ClientGiveBoost(float) -> void: ...
    @overload
    def ConfirmBoostAmount2(self) -> None: ...
    @overload
    def ConfirmBoostAmount2() -> void: ...
    @overload
    def GetBoostConsumptionRate(self) -> float: ...
    @overload
    def GetBoostConsumptionRate() -> float: ...
    @overload
    def GetBoostForce(self) -> float: ...
    @overload
    def GetBoostForce() -> float: ...
    @overload
    def GetBoostModifier(self) -> float: ...
    @overload
    def GetBoostModifier() -> float: ...
    @overload
    def GetCurrentBoostAmount(self) -> float: ...
    @overload
    def GetCurrentBoostAmount() -> float: ...
    @overload
    def GetLastBoostAmount(self) -> float: ...
    @overload
    def GetLastBoostAmount() -> float: ...
    @overload
    def GetLastBoostAmountRequestTime(self) -> float: ...
    @overload
    def GetLastBoostAmountRequestTime() -> float: ...
    @overload
    def GetMaxBoostAmount(self) -> float: ...
    @overload
    def GetMaxBoostAmount() -> float: ...
    @overload
    def GetMinBoostTime(self) -> float: ...
    @overload
    def GetMinBoostTime() -> float: ...
    @overload
    def GetPercentBoostFull(self) -> float: ...
    @overload
    def GetPercentBoostFull() -> float: ...
    @overload
    def GetRechargeDelay(self) -> float: ...
    @overload
    def GetRechargeDelay() -> float: ...
    @overload
    def GetRechargeRate(self) -> float: ...
    @overload
    def GetRechargeRate() -> float: ...
    @overload
    def GetReplicatedBoostAmount(self) -> int: ...
    @overload
    def GetReplicatedBoostAmount() -> unsignedchar: ...
    @overload
    def GetStartBoostAmount(self) -> float: ...
    @overload
    def GetStartBoostAmount() -> float: ...
    @overload
    def GetUnlimitedBoostRefCount(self) -> int: ...
    @overload
    def GetUnlimitedBoostRefCount() -> int: ...
    @overload
    def GetbNoBoost(self) -> int: ...
    @overload
    def GetbNoBoost() -> unsignedlong: ...
    @overload
    def GetbPendingConfirmBoostAmount(self) -> int: ...
    @overload
    def GetbPendingConfirmBoostAmount() -> unsignedlong: ...
    @overload
    def GiveBoost2(self, Amount: float) -> None: ...
    @overload
    def GiveBoost2(float) -> void: ...
    @overload
    def GiveFullBoost(self) -> None: ...
    @overload
    def GiveFullBoost() -> void: ...
    @overload
    def GiveStartingBoost(self) -> None: ...
    @overload
    def GiveStartingBoost() -> void: ...
    @overload
    def IsFull(self) -> bool: ...
    @overload
    def IsFull() -> bool: ...
    @overload
    def ReadReplicatedBoostAmount(self) -> None: ...
    @overload
    def ReadReplicatedBoostAmount() -> void: ...
    @overload
    def RemoveFromCar(self) -> None: ...
    @overload
    def RemoveFromCar() -> void: ...
    @overload
    def SendConfirmBoostAmount(self) -> None: ...
    @overload
    def SendConfirmBoostAmount() -> void: ...
    def ServerConfirmBoostAmount(self, TimeStamp: float, Amount: float) -> None: ...
    @overload
    def SetBoostAmount(self, Amount: float) -> None: ...
    @overload
    def SetBoostAmount(float) -> void: ...
    @overload
    def SetBoostConsumptionRate(self, newBoostConsumptionRate: float) -> None: ...
    @overload
    def SetBoostConsumptionRate(float) -> void: ...
    @overload
    def SetBoostForce(self, newBoostForce: float) -> None: ...
    @overload
    def SetBoostForce(float) -> void: ...
    @overload
    def SetBoostModifier(self, newBoostModifier: float) -> None: ...
    @overload
    def SetBoostModifier(float) -> void: ...
    @overload
    def SetBoostModifier2(self, Modifier: float) -> None: ...
    @overload
    def SetBoostModifier2(float) -> void: ...
    @overload
    def SetCurrentBoostAmount(self, newCurrentBoostAmount: float) -> None: ...
    @overload
    def SetCurrentBoostAmount(float) -> void: ...
    @overload
    def SetLastBoostAmount(self, newLastBoostAmount: float) -> None: ...
    @overload
    def SetLastBoostAmount(float) -> void: ...
    @overload
    def SetLastBoostAmountRequestTime(self, newLastBoostAmountRequestTime: float) -> None: ...
    @overload
    def SetLastBoostAmountRequestTime(float) -> void: ...
    @overload
    def SetMaxBoostAmount(self, newMaxBoostAmount: float) -> None: ...
    @overload
    def SetMaxBoostAmount(float) -> void: ...
    @overload
    def SetMinBoostTime(self, newMinBoostTime: float) -> None: ...
    @overload
    def SetMinBoostTime(float) -> void: ...
    @overload
    def SetNoBoost(self, Enabled: int) -> None: ...
    @overload
    def SetNoBoost(unsignedlong) -> void: ...
    @overload
    def SetRechargeDelay(self, newRechargeDelay: float) -> None: ...
    @overload
    def SetRechargeDelay(float) -> void: ...
    @overload
    def SetRechargeDelay2(self, InRechargeDelay: float) -> None: ...
    @overload
    def SetRechargeDelay2(float) -> void: ...
    @overload
    def SetRechargeRate(self, newRechargeRate: float) -> None: ...
    @overload
    def SetRechargeRate(float) -> void: ...
    @overload
    def SetRechargeRate2(self, InRechargeRate: float) -> None: ...
    @overload
    def SetRechargeRate2(float) -> void: ...
    @overload
    def SetReplicatedBoostAmount(self, newReplicatedBoostAmount: int) -> None: ...
    @overload
    def SetReplicatedBoostAmount(unsignedchar) -> void: ...
    @overload
    def SetStartBoostAmount(self, newStartBoostAmount: float) -> None: ...
    @overload
    def SetStartBoostAmount(float) -> void: ...
    @overload
    def SetUnlimitedBoost2(self, Enabled: int) -> None: ...
    @overload
    def SetUnlimitedBoost2(unsignedlong) -> void: ...
    @overload
    def SetUnlimitedBoostDelayed(self, Enabled: int) -> None: ...
    @overload
    def SetUnlimitedBoostDelayed(unsignedlong) -> void: ...
    @overload
    def SetUnlimitedBoostRefCount(self, newUnlimitedBoostRefCount: int) -> None: ...
    @overload
    def SetUnlimitedBoostRefCount(int) -> void: ...
    @overload
    def SetbNoBoost(self, newbNoBoost: int) -> None: ...
    @overload
    def SetbNoBoost(unsignedlong) -> void: ...
    @overload
    def SetbPendingConfirmBoostAmount(self, newbPendingConfirmBoostAmount: int) -> None: ...
    @overload
    def SetbPendingConfirmBoostAmount(unsignedlong) -> void: ...
    @overload
    def ShouldPredictBoostConsumption(self) -> bool: ...
    @overload
    def ShouldPredictBoostConsumption() -> bool: ...
    def assign(self, rhs: BoostWrapper) -> BoostWrapper: ...
    @overload
    def eventSetReplicatedBoostAmount(self) -> None: ...
    @overload
    def eventSetReplicatedBoostAmount() -> void: ...

class CARBODY:
    CAR_AFTERSHOCK: Any = ...
    CAR_ANIMUSGP: Any = ...
    CAR_ARMADILLO: Any = ...
    CAR_BACKFIRE: Any = ...
    CAR_BATMOBILE: Any = ...
    CAR_BONESHAKER: Any = ...
    CAR_BREAKOUT: Any = ...
    CAR_BREAKOUTTYPES: Any = ...
    CAR_CENTIO: Any = ...
    CAR_DELOREAN: Any = ...
    CAR_DOMINUS: Any = ...
    CAR_DOMINUSGT: Any = ...
    CAR_ENDO: Any = ...
    CAR_ESPER: Any = ...
    CAR_GIZMO: Any = ...
    CAR_GROG: Any = ...
    CAR_HOTSHOT: Any = ...
    CAR_ICECHARGER: Any = ...
    CAR_JOGER619RS: Any = ...
    CAR_MANTIS: Any = ...
    CAR_MARAUDER: Any = ...
    CAR_MASAMUNE: Any = ...
    CAR_MERC: Any = ...
    CAR_OCTANE: Any = ...
    CAR_OCTANEZSR: Any = ...
    CAR_PALADIN: Any = ...
    CAR_PROTEUS: Any = ...
    CAR_RIPPER: Any = ...
    CAR_ROADHOG: Any = ...
    CAR_ROADHOGXL: Any = ...
    CAR_SCARAB: Any = ...
    CAR_SWEETTOOTH: Any = ...
    CAR_TAKUMI: Any = ...
    CAR_TAKUMIRXT: Any = ...
    CAR_TRITON: Any = ...
    CAR_TWINMILL: Any = ...
    CAR_VENOM: Any = ...
    CAR_VULCAN: Any = ...
    CAR_WARTHOG: Any = ...
    CAR_XDEVIL: Any = ...
    CAR_XDEVILMK2: Any = ...
    CAR_ZIPPY: Any = ...
    __entries: Any = ...
    def __init__(self, arg0: int) -> None: ...
    def __and__(*args, **kwargs) -> Any: ...
    def __eq__(other) -> Any: ...
    def __ge__(other) -> Any: ...
    def __getstate__() -> Any: ...
    def __gt__(other) -> Any: ...
    def __hash__() -> Any: ...
    def __int__(self) -> int: ...
    def __le__(other) -> Any: ...
    def __lt__(other) -> Any: ...
    def __ne__(other) -> Any: ...
    def __or__(*args, **kwargs) -> Any: ...
    def __rand__(*args, **kwargs) -> Any: ...
    def __ror__(*args, **kwargs) -> Any: ...
    def __rxor__(*args, **kwargs) -> Any: ...
    def __setstate__(state) -> Any: ...
    def __xor__(*args, **kwargs) -> Any: ...
    @property
    def name(self) -> Any: ...
    @property
    def __doc__(self) -> Any: ...
    @property
    def __members__(self) -> Any: ...

class CVarManagerWrapper:
    @overload
    def __init__(self, mem: int, pluginIdx) -> None: ...
    @overload
    def __init__(self, arg0: CVarManagerWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    def assign(self, rhs: CVarManagerWrapper) -> CVarManagerWrapper: ...
    @overload
    def backupBinds(self, path: str) -> None: ...
    @overload
    def backupBinds(std) -> void: ...
    @overload
    def backupCfg(self, path: str) -> None: ...
    @overload
    def backupCfg(std) -> void: ...
    @overload
    def executeCommand(self, command: str, log: bool = ...) -> None: ...
    @overload
    def executeCommand(std, bool) -> void: ...
    @overload
    def getCvar(self, cvar: str) -> CVarWrapper: ...
    @overload
    def getCvar(std) -> classCVarWrapper: ...
    @overload
    def loadCfg(self, path: str) -> None: ...
    @overload
    def loadCfg(std) -> void: ...
    @overload
    def log(self, text: str) -> None: ...
    @overload
    def log(std) -> void: ...
    def registerCvar(self, cvar: str, defaultValue: str, desc: str = ..., searchAble: bool = ..., hasMin: bool = ..., min: float = ..., hasMax: bool = ..., max: float = ..., saveToCfg: bool = ...) -> CVarWrapper: ...
    def registerNotifier(self, cvar: str, notifier: Callable[[List[str]],None], description: str, permissions: int) -> None: ...

class CVarWrapper:
    @overload
    def __init__(self, mem: int, pluginIdx) -> None: ...
    @overload
    def __init__(self, arg0: CVarWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def addOnValueChanged(self, changeFunc: Callable[[str,pybakke.CVarWrapper],None]) -> None: ...
    @overload
    def addOnValueChanged(classstd) -> void: ...
    def assign(self, rhs: CVarWrapper) -> CVarWrapper: ...
    @overload
    def getBoolValue(self) -> bool: ...
    @overload
    def getBoolValue() -> bool: ...
    @overload
    def getCVarName(self) -> str: ...
    @overload
    def getCVarName() -> std::string: ...
    @overload
    def getDescription(self) -> str: ...
    @overload
    def getDescription() -> std::string: ...
    @overload
    def getFloatValue(self) -> float: ...
    @overload
    def getFloatValue() -> float: ...
    @overload
    def getIntValue(self) -> int: ...
    @overload
    def getIntValue() -> int: ...
    @overload
    def getStringValue(self) -> str: ...
    @overload
    def getStringValue() -> std::string: ...
    @overload
    def notify(self) -> None: ...
    @overload
    def notify() -> void: ...
    @overload
    def setValue(self, value: str) -> None: ...
    @overload
    def setValue(std) -> void: ...
    @overload
    def setValue(self, value: int) -> None: ...
    @overload
    def setValue(int) -> void: ...
    @overload
    def setValue(self, value: float) -> None: ...
    @overload
    def setValue(float) -> void: ...
    @overload
    def setValue(*args, **kwargs) -> Any: ...

class CameraWrapper(CameraXWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: CameraWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def ClipToField(self, CameraLocationZ: float) -> float: ...
    @overload
    def ClipToField(float) -> float: ...
    @overload
    def Demolished2(self, InDemolisher: RBActorWrapper) -> None: ...
    @overload
    def Demolished2(classRBActorWrapper) -> void: ...
    @overload
    def EventCameraTargetChanged(self, Camera: CameraWrapper, Target: ActorWrapper) -> None: ...
    @overload
    def EventCameraTargetChanged(classCameraWrapper, classActorWrapper) -> void: ...
    @overload
    def GetCameraAsActor(self) -> ActorWrapper: ...
    @overload
    def GetCameraAsActor() -> classActorWrapper: ...
    @overload
    def GetCameraPresetSettings(self) -> StructArrayWrapper<ProfileCameraSettings>: ...
    @overload
    def GetCameraPresetSettings() -> classStructArrayWrapper<structProfileCameraSettings>: ...
    @overload
    def GetCameraSettings(self) -> ProfileCameraSettings: ...
    @overload
    def GetCameraSettings() -> structProfileCameraSettings: ...
    @overload
    def GetCameraState(self) -> str: ...
    @overload
    def GetCameraState() -> std::string: ...
    @overload
    def GetClipRate(self) -> float: ...
    @overload
    def GetClipRate() -> float: ...
    @overload
    def GetCurrentSwivel(self) -> Rotator: ...
    @overload
    def GetCurrentSwivel() -> structRotator: ...
    @overload
    def GetDefaultFOVOffset(self) -> float: ...
    @overload
    def GetDefaultFOVOffset() -> float: ...
    @overload
    def GetDefaultViewHeightOffset(self) -> float: ...
    @overload
    def GetDefaultViewHeightOffset() -> float: ...
    @overload
    def GetDemolisher(self) -> RBActorWrapper: ...
    @overload
    def GetDemolisher() -> classRBActorWrapper: ...
    def GetDesiredSwivel(self, LookUp: float, LookRight: float) -> Rotator: ...
    @overload
    def GetFOV(self) -> float: ...
    @overload
    def GetFOV() -> float: ...
    @overload
    def GetHorizontalSplitscreenFOVOffset(self) -> float: ...
    @overload
    def GetHorizontalSplitscreenFOVOffset() -> float: ...
    @overload
    def GetHorizontalSplitscreenHeightOffset(self) -> float: ...
    @overload
    def GetHorizontalSplitscreenHeightOffset() -> float: ...
    @overload
    def GetLocation(self) -> Vector: ...
    @overload
    def GetLocation() -> structVector: ...
    @overload
    def GetPOV(self) -> POV: ...
    @overload
    def GetPOV() -> structPOV: ...
    @overload
    def GetRotation(self) -> Rotator: ...
    @overload
    def GetRotation() -> structRotator: ...
    @overload
    def GetSwivelDieRate(self) -> float: ...
    @overload
    def GetSwivelDieRate() -> float: ...
    @overload
    def GetSwivelFastSpeed(self) -> float: ...
    @overload
    def GetSwivelFastSpeed() -> float: ...
    @overload
    def GetVerticalSplitscreenFOVOffset(self) -> float: ...
    @overload
    def GetVerticalSplitscreenFOVOffset() -> float: ...
    @overload
    def GetbDemolished(self) -> int: ...
    @overload
    def GetbDemolished() -> unsignedlong: ...
    @overload
    def IsCameraShakeOn(self) -> bool: ...
    @overload
    def IsCameraShakeOn() -> bool: ...
    @overload
    def SetCameraSettings(self, settings: ProfileCameraSettings) -> None: ...
    @overload
    def SetCameraSettings(structProfileCameraSettings) -> void: ...
    @overload
    def SetClipRate(self, newClipRate: float) -> None: ...
    @overload
    def SetClipRate(float) -> void: ...
    @overload
    def SetCurrentSwivel(self, newCurrentSwivel: Rotator) -> None: ...
    @overload
    def SetCurrentSwivel(structRotator) -> void: ...
    @overload
    def SetDemolisher(self, newDemolisher: RBActorWrapper) -> None: ...
    @overload
    def SetDemolisher(classRBActorWrapper) -> void: ...
    @overload
    def SetFOV(self, fov: float) -> None: ...
    @overload
    def SetFOV(float) -> void: ...
    @overload
    def SetHorizontalSplitscreenFOVOffset(self, newHorizontalSplitscreenFOVOffset: float) -> None: ...
    @overload
    def SetHorizontalSplitscreenFOVOffset(float) -> void: ...
    @overload
    def SetHorizontalSplitscreenHeightOffset(self, newHorizontalSplitscreenHeightOffset: float) -> None: ...
    @overload
    def SetHorizontalSplitscreenHeightOffset(float) -> void: ...
    @overload
    def SetLocation(self, location: Vector) -> None: ...
    @overload
    def SetLocation(structVector) -> void: ...
    @overload
    def SetLockedFOV(self, lock: bool) -> None: ...
    @overload
    def SetLockedFOV(bool) -> void: ...
    @overload
    def SetPOV(self, pov: POV) -> None: ...
    @overload
    def SetPOV(structPOV) -> void: ...
    @overload
    def SetRotation(self, rotation: Rotator) -> None: ...
    @overload
    def SetRotation(structRotator) -> void: ...
    @overload
    def SetSwivelDieRate(self, newSwivelDieRate: float) -> None: ...
    @overload
    def SetSwivelDieRate(float) -> void: ...
    @overload
    def SetSwivelFastSpeed(self, newSwivelFastSpeed: float) -> None: ...
    @overload
    def SetSwivelFastSpeed(float) -> void: ...
    @overload
    def SetVerticalSplitscreenFOVOffset(self, newVerticalSplitscreenFOVOffset: float) -> None: ...
    @overload
    def SetVerticalSplitscreenFOVOffset(float) -> void: ...
    @overload
    def SetbDemolished(self, newbDemolished: int) -> None: ...
    @overload
    def SetbDemolished(unsignedlong) -> void: ...
    @overload
    def UpdateFOV(self) -> None: ...
    @overload
    def UpdateFOV() -> void: ...
    @overload
    def UpdateSwivel(self, DeltaTime: float) -> None: ...
    @overload
    def UpdateSwivel(float) -> void: ...
    def assign(self, rhs: CameraWrapper) -> CameraWrapper: ...
    def linterp(self, start: Vector, end: Vector, elapsed: float, speed: float) -> Vector: ...

class CameraXWrapper(BaseCameraWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: CameraXWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def CopyFade(self, Other: CameraXWrapper) -> None: ...
    @overload
    def CopyFade(classCameraXWrapper) -> void: ...
    @overload
    def GetClipOffset(self) -> Vector: ...
    @overload
    def GetClipOffset() -> structVector: ...
    @overload
    def GetEndFadeColor(self) -> UnrealColor: ...
    @overload
    def GetEndFadeColor() -> structUnrealColor: ...
    @overload
    def GetOldControllerLocation(self) -> Vector: ...
    @overload
    def GetOldControllerLocation() -> structVector: ...
    @overload
    def GetOldControllerRotation(self) -> Rotator: ...
    @overload
    def GetOldControllerRotation() -> structRotator: ...
    @overload
    def GetPCDeltaLocation(self) -> Vector: ...
    @overload
    def GetPCDeltaLocation() -> structVector: ...
    @overload
    def GetPCDeltaRotation(self) -> Rotator: ...
    @overload
    def GetPCDeltaRotation() -> structRotator: ...
    @overload
    def GetShakeFOVOffset(self) -> float: ...
    @overload
    def GetShakeFOVOffset() -> float: ...
    @overload
    def GetShakeLocationOffset(self) -> Vector: ...
    @overload
    def GetShakeLocationOffset() -> structVector: ...
    @overload
    def GetShakeRotationOffset(self) -> Rotator: ...
    @overload
    def GetShakeRotationOffset() -> structRotator: ...
    @overload
    def GetStartFadeColor(self) -> UnrealColor: ...
    @overload
    def GetStartFadeColor() -> structUnrealColor: ...
    @overload
    def GetbDisableCameraShake(self) -> int: ...
    @overload
    def GetbDisableCameraShake() -> unsignedlong: ...
    @overload
    def GetbSnapNextTransition(self) -> int: ...
    @overload
    def GetbSnapNextTransition() -> unsignedlong: ...
    @overload
    def InstanceCameraStates(self) -> None: ...
    @overload
    def InstanceCameraStates() -> void: ...
    @overload
    def IsTransitioning(self) -> bool: ...
    @overload
    def IsTransitioning() -> bool: ...
    @overload
    def OnLoadingMovieClosesd(self) -> None: ...
    @overload
    def OnLoadingMovieClosesd() -> void: ...
    @overload
    def RemoveRoll(self, InRot: Rotator) -> Rotator: ...
    @overload
    def RemoveRoll(structRotator&) -> structRotator: ...
    @overload
    def SetClipOffset(self, newClipOffset: Vector) -> None: ...
    @overload
    def SetClipOffset(structVector) -> void: ...
    @overload
    def SetEndFadeColor(self, newEndFadeColor: UnrealColor) -> None: ...
    @overload
    def SetEndFadeColor(structUnrealColor) -> void: ...
    @overload
    def SetOldControllerLocation(self, newOldControllerLocation: Vector) -> None: ...
    @overload
    def SetOldControllerLocation(structVector) -> void: ...
    @overload
    def SetOldControllerRotation(self, newOldControllerRotation: Rotator) -> None: ...
    @overload
    def SetOldControllerRotation(structRotator) -> void: ...
    @overload
    def SetPCDeltaLocation(self, newPCDeltaLocation: Vector) -> None: ...
    @overload
    def SetPCDeltaLocation(structVector) -> void: ...
    @overload
    def SetPCDeltaRotation(self, newPCDeltaRotation: Rotator) -> None: ...
    @overload
    def SetPCDeltaRotation(structRotator) -> void: ...
    @overload
    def SetShakeFOVOffset(self, newShakeFOVOffset: float) -> None: ...
    @overload
    def SetShakeFOVOffset(float) -> void: ...
    @overload
    def SetShakeLocationOffset(self, newShakeLocationOffset: Vector) -> None: ...
    @overload
    def SetShakeLocationOffset(structVector) -> void: ...
    @overload
    def SetShakeRotationOffset(self, newShakeRotationOffset: Rotator) -> None: ...
    @overload
    def SetShakeRotationOffset(structRotator) -> void: ...
    @overload
    def SetStartFadeColor(self, newStartFadeColor: UnrealColor) -> None: ...
    @overload
    def SetStartFadeColor(structUnrealColor) -> void: ...
    @overload
    def SetbDisableCameraShake(self, newbDisableCameraShake: int) -> None: ...
    @overload
    def SetbDisableCameraShake(unsignedlong) -> void: ...
    @overload
    def SetbSnapNextTransition(self, newbSnapNextTransition: int) -> None: ...
    @overload
    def SetbSnapNextTransition(unsignedlong) -> void: ...
    @overload
    def SnapTransition(self) -> None: ...
    @overload
    def SnapTransition() -> void: ...
    @overload
    def UpdateCameraState(self) -> None: ...
    @overload
    def UpdateCameraState() -> void: ...
    @overload
    def UpdateFade(self, DeltaTime: float) -> None: ...
    @overload
    def UpdateFade(float) -> void: ...
    def assign(self, rhs: CameraXWrapper) -> CameraXWrapper: ...
    @overload
    def eventOnViewTargetChanged(self) -> None: ...
    @overload
    def eventOnViewTargetChanged() -> void: ...
    @overload
    def eventPostBeginPlay(self) -> None: ...
    @overload
    def eventPostBeginPlay() -> void: ...
    @overload
    def eventUpdateCamera(self, DeltaTime: float) -> None: ...
    @overload
    def eventUpdateCamera(float) -> void: ...

class CanvasWrapper:
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: CanvasWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def DrawBox(self, size: Vector2F) -> None: ...
    @overload
    def DrawBox(structVector2F) -> void: ...
    @overload
    def DrawBox(self, size: Vector2) -> None: ...
    @overload
    def DrawBox(structVector2) -> void: ...
    @overload
    def DrawBox(*args, **kwargs) -> Any: ...
    @overload
    def DrawLine(self, start: Vector2F, end: Vector2F) -> None: ...
    @overload
    def DrawLine(self, start: Vector2F, end: Vector2F, width: float) -> None: ...
    @overload
    def DrawLine(self, start: Vector2, end: Vector2) -> None: ...
    @overload
    def DrawLine(self, start: Vector2, end: Vector2, width: float) -> None: ...
    @overload
    def DrawLine(*args, **kwargs) -> Any: ...
    @overload
    def DrawRect(self, start: Vector2F, end: Vector2F) -> None: ...
    @overload
    def DrawRect(self, start: Vector2, end: Vector2) -> None: ...
    @overload
    def DrawRect(*args, **kwargs) -> Any: ...
    @overload
    def DrawString(self, text: str) -> None: ...
    @overload
    def DrawString(std) -> void: ...
    @overload
    def DrawString(self, text: str, xScale: float, yScale: float) -> None: ...
    @overload
    def DrawString(*args, **kwargs) -> Any: ...
    @overload
    def FillBox(self, size: Vector2F) -> None: ...
    @overload
    def FillBox(structVector2F) -> void: ...
    @overload
    def FillBox(self, size: Vector2) -> None: ...
    @overload
    def FillBox(structVector2) -> void: ...
    @overload
    def FillBox(*args, **kwargs) -> Any: ...
    @overload
    def FillTriangle(self, p1: Vector2F, p2: Vector2F, p3: Vector2F, color: LinearColor) -> None: ...
    @overload
    def FillTriangle(self, p1: Vector2, p2: Vector2, p3: Vector2, color: LinearColor) -> None: ...
    @overload
    def FillTriangle(*args, **kwargs) -> Any: ...
    @overload
    def GetPosition(self) -> Vector2: ...
    @overload
    def GetPosition() -> structVector2: ...
    @overload
    def GetPositionFloat(self) -> Vector2F: ...
    @overload
    def GetPositionFloat() -> structVector2F: ...
    @overload
    def GetSize(self) -> Vector2: ...
    @overload
    def GetSize() -> structVector2: ...
    @overload
    def Project(self, location: Vector) -> Vector2: ...
    @overload
    def Project(structVector) -> structVector2: ...
    def SetColor(self, Red: str, Green: str, Blue: str, Alpha: str) -> None: ...
    @overload
    def SetPosition(self, pos: Vector2F) -> None: ...
    @overload
    def SetPosition(structVector2F) -> void: ...
    @overload
    def SetPosition(self, pos: Vector2) -> None: ...
    @overload
    def SetPosition(structVector2) -> void: ...
    @overload
    def SetPosition(*args, **kwargs) -> Any: ...
    def assign(self, rhs: CanvasWrapper) -> CanvasWrapper: ...

class CarComponentWrapper(ActorWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: CarComponentWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def Activate2(self) -> None: ...
    @overload
    def Activate2() -> void: ...
    @overload
    def ApplyForces(self, ActiveTime: float) -> None: ...
    @overload
    def ApplyForces(float) -> void: ...
    @overload
    def CanActivate(self) -> bool: ...
    @overload
    def CanActivate() -> bool: ...
    @overload
    def CanDeactivate(self) -> bool: ...
    @overload
    def CanDeactivate() -> bool: ...
    @overload
    def ClientUpdateActive(self) -> None: ...
    @overload
    def ClientUpdateActive() -> void: ...
    @overload
    def ConditionalActivate(self) -> bool: ...
    @overload
    def ConditionalActivate() -> bool: ...
    @overload
    def ConditionalDeactivate(self) -> bool: ...
    @overload
    def ConditionalDeactivate() -> bool: ...
    @overload
    def Create2(self, OwnerCar: CarWrapper, InActivator: PriWrapper) -> None: ...
    @overload
    def Create2(classCarWrapper, classPriWrapper) -> void: ...
    @overload
    def Deactivate2(self) -> None: ...
    @overload
    def Deactivate2() -> void: ...
    @overload
    def EventActivationChanged(self, CarComponent: CarComponentWrapper) -> None: ...
    @overload
    def EventActivationChanged(classCarComponentWrapper) -> void: ...
    @overload
    def GetActivator(self) -> PriWrapper: ...
    @overload
    def GetActivator() -> classPriWrapper: ...
    @overload
    def GetActiveTime(self) -> float: ...
    @overload
    def GetActiveTime() -> float: ...
    @overload
    def GetActivityTime(self) -> float: ...
    @overload
    def GetActivityTime() -> float: ...
    @overload
    def GetCar(self) -> CarWrapper: ...
    @overload
    def GetCar() -> classCarWrapper: ...
    @overload
    def GetComponentData(self) -> int: ...
    @overload
    def GetComponentData() -> unsignedchar: ...
    @overload
    def GetFXActor(self) -> FXActorWrapper: ...
    @overload
    def GetFXActor() -> classFXActorWrapper: ...
    @overload
    def GetFXActorArchetype(self) -> FXActorWrapper: ...
    @overload
    def GetFXActorArchetype() -> classFXActorWrapper: ...
    @overload
    def GetInactiveTime(self) -> float: ...
    @overload
    def GetInactiveTime() -> float: ...
    @overload
    def GetReplicatedActive(self) -> int: ...
    @overload
    def GetReplicatedActive() -> unsignedchar: ...
    @overload
    def GetReplicatedActivityTime(self) -> float: ...
    @overload
    def GetReplicatedActivityTime() -> float: ...
    @overload
    def GetVehicle(self) -> VehicleWrapper: ...
    @overload
    def GetVehicle() -> classVehicleWrapper: ...
    @overload
    def GetbActive(self) -> int: ...
    @overload
    def GetbActive() -> unsignedlong: ...
    @overload
    def GetbAutoActivate(self) -> int: ...
    @overload
    def GetbAutoActivate() -> unsignedlong: ...
    @overload
    def GetbCreated(self) -> int: ...
    @overload
    def GetbCreated() -> unsignedlong: ...
    @overload
    def GetbDisabled(self) -> int: ...
    @overload
    def GetbDisabled() -> unsignedlong: ...
    @overload
    def GetbRemovedFromCar(self) -> int: ...
    @overload
    def GetbRemovedFromCar() -> unsignedlong: ...
    @overload
    def GetbSimulateComponent(self) -> int: ...
    @overload
    def GetbSimulateComponent() -> unsignedlong: ...
    @overload
    def HandleVehicleSetup(self, InCar: CarWrapper) -> None: ...
    @overload
    def HandleVehicleSetup(classCarWrapper) -> void: ...
    @overload
    def OnVehicleSetupComplete(self) -> None: ...
    @overload
    def OnVehicleSetupComplete() -> void: ...
    @overload
    def PrePhysicsStep(self, DeltaTime: float) -> None: ...
    @overload
    def PrePhysicsStep(float) -> void: ...
    @overload
    def RegisterCarEvents(self) -> None: ...
    @overload
    def RegisterCarEvents() -> void: ...
    @overload
    def RemoveFromCar(self) -> None: ...
    @overload
    def RemoveFromCar() -> void: ...
    @overload
    def SetActivator(self, newActivator: PriWrapper) -> None: ...
    @overload
    def SetActivator(classPriWrapper) -> void: ...
    @overload
    def SetActive(self, bNewActive: int) -> None: ...
    @overload
    def SetActive(unsignedlong) -> void: ...
    @overload
    def SetActivityTime(self, newActivityTime: float) -> None: ...
    @overload
    def SetActivityTime(float) -> void: ...
    @overload
    def SetCar(self, newCar: CarWrapper) -> None: ...
    @overload
    def SetCar(classCarWrapper) -> void: ...
    @overload
    def SetComponentData(self, newComponentData: int) -> None: ...
    @overload
    def SetComponentData(unsignedchar) -> void: ...
    @overload
    def SetFXActor(self, newFXActor: FXActorWrapper) -> None: ...
    @overload
    def SetFXActor(classFXActorWrapper) -> void: ...
    @overload
    def SetFXActorArchetype(self, newFXActorArchetype: FXActorWrapper) -> None: ...
    @overload
    def SetFXActorArchetype(classFXActorWrapper) -> void: ...
    @overload
    def SetReplicatedActive(self, newReplicatedActive: int) -> None: ...
    @overload
    def SetReplicatedActive(unsignedchar) -> void: ...
    @overload
    def SetReplicatedActivityTime(self, newReplicatedActivityTime: float) -> None: ...
    @overload
    def SetReplicatedActivityTime(float) -> void: ...
    @overload
    def SetVehicle(self, newVehicle: VehicleWrapper) -> None: ...
    @overload
    def SetVehicle(classVehicleWrapper) -> void: ...
    @overload
    def SetbActive(self, newbActive: int) -> None: ...
    @overload
    def SetbActive(unsignedlong) -> void: ...
    @overload
    def SetbAutoActivate(self, newbAutoActivate: int) -> None: ...
    @overload
    def SetbAutoActivate(unsignedlong) -> void: ...
    @overload
    def SetbCreated(self, newbCreated: int) -> None: ...
    @overload
    def SetbCreated(unsignedlong) -> void: ...
    @overload
    def SetbDisabled(self, newbDisabled: int) -> None: ...
    @overload
    def SetbDisabled(unsignedlong) -> void: ...
    @overload
    def SetbRemovedFromCar(self, newbRemovedFromCar: int) -> None: ...
    @overload
    def SetbRemovedFromCar(unsignedlong) -> void: ...
    @overload
    def SetbSimulateComponent(self, newbSimulateComponent: int) -> None: ...
    @overload
    def SetbSimulateComponent(unsignedlong) -> void: ...
    @overload
    def UnregisterCarEvents(self) -> None: ...
    @overload
    def UnregisterCarEvents() -> void: ...
    def assign(self, rhs: CarComponentWrapper) -> CarComponentWrapper: ...
    @overload
    def eventFellOutOfWorld(self) -> None: ...
    @overload
    def eventFellOutOfWorld() -> void: ...

class CarSpeedPickup(RumblePickupComponentWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: CarSpeedPickup) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def GetAddedForce(self) -> Vector: ...
    @overload
    def GetAddedForce() -> structVector: ...
    @overload
    def GetGravityScale(self) -> float: ...
    @overload
    def GetGravityScale() -> float: ...
    @overload
    def GetOrigGravityScale(self) -> float: ...
    @overload
    def GetOrigGravityScale() -> float: ...
    @overload
    def PickupEnd(self) -> None: ...
    @overload
    def PickupEnd() -> void: ...
    @overload
    def PickupStart(self) -> None: ...
    @overload
    def PickupStart() -> void: ...
    @overload
    def SetAddedForce(self, newAddedForce: Vector) -> None: ...
    @overload
    def SetAddedForce(structVector) -> void: ...
    @overload
    def SetGravityScale(self, newGravityScale: float) -> None: ...
    @overload
    def SetGravityScale(float) -> void: ...
    @overload
    def SetOrigGravityScale(self, newOrigGravityScale: float) -> None: ...
    @overload
    def SetOrigGravityScale(float) -> void: ...
    def assign(self, rhs: CarSpeedPickup) -> CarSpeedPickup: ...

class CarWrapper(VehicleWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: CarWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def AddDefaultCarComponents(self) -> None: ...
    @overload
    def AddDefaultCarComponents() -> void: ...
    @overload
    def AnyWheelTouchingGround(self) -> bool: ...
    @overload
    def AnyWheelTouchingGround() -> bool: ...
    @overload
    def ApplyBallImpactForces(self, Ball: BallWrapper, HitLocation: Vector) -> None: ...
    @overload
    def ApplyBallImpactForces(classBallWrapper, structVector&) -> void: ...
    def ApplyCarImpactForces(self, OtherCar: CarWrapper, HitLocation: Vector, HitNormal: Vector) -> int: ...
    @overload
    def CanDemolish(self, HitCar: CarWrapper) -> bool: ...
    @overload
    def CanDemolish(classCarWrapper) -> bool: ...
    @overload
    def ClearAttacker(self) -> None: ...
    @overload
    def ClearAttacker() -> void: ...
    @overload
    def CopyPushFactorCurve(self) -> None: ...
    @overload
    def CopyPushFactorCurve() -> void: ...
    @overload
    def Demolish(self) -> None: ...
    @overload
    def Demolish() -> void: ...
    @overload
    def Demolish2(self, Demolisher: RBActorWrapper) -> None: ...
    @overload
    def Demolish2(classRBActorWrapper) -> void: ...
    @overload
    def DemolishDestroyTimer(self) -> None: ...
    @overload
    def DemolishDestroyTimer() -> void: ...
    @overload
    def Destroy(self) -> None: ...
    @overload
    def Destroy() -> void: ...
    @overload
    def DetachPrimitiveComponent(self, Component: PrimitiveComponentWrapper) -> None: ...
    @overload
    def DetachPrimitiveComponent(classPrimitiveComponentWrapper) -> void: ...
    @overload
    def EnablePodiumMode(self) -> None: ...
    @overload
    def EnablePodiumMode() -> void: ...
    @overload
    def FellOutOfWorld(self) -> None: ...
    @overload
    def FellOutOfWorld() -> void: ...
    @overload
    def ForceBoost(self, force: bool) -> None: ...
    @overload
    def ForceBoost(bool) -> void: ...
    @overload
    def GetAddedBallForceMultiplier(self) -> float: ...
    @overload
    def GetAddedBallForceMultiplier() -> float: ...
    @overload
    def GetAddedCarForceMultiplier(self) -> float: ...
    @overload
    def GetAddedCarForceMultiplier() -> float: ...
    @overload
    def GetAttachedPickup(self) -> RumblePickupComponentWrapper: ...
    @overload
    def GetAttachedPickup() -> classRumblePickupComponentWrapper: ...
    @overload
    def GetAttackerPRI(self) -> PriWrapper: ...
    @overload
    def GetAttackerPRI() -> classPriWrapper: ...
    @overload
    def GetBodyFXActor(self) -> FXActorWrapper: ...
    @overload
    def GetBodyFXActor() -> classFXActorWrapper: ...
    @overload
    def GetDefaultCarComponents(self) -> ArrayWrapper<CarComponentWrapper>: ...
    @overload
    def GetDefaultCarComponents() -> classArrayWrapper<classCarComponentWrapper>: ...
    @overload
    def GetDemolishSpeed(self) -> int: ...
    @overload
    def GetDemolishSpeed() -> unsignedchar: ...
    @overload
    def GetDemolishTarget(self) -> int: ...
    @overload
    def GetDemolishTarget() -> unsignedchar: ...
    @overload
    def GetExitFXArchetype(self) -> FXActorWrapper: ...
    @overload
    def GetExitFXArchetype() -> classFXActorWrapper: ...
    @overload
    def GetFlipComponent(self) -> FlipCarComponentWrapper: ...
    @overload
    def GetFlipComponent() -> classFlipCarComponentWrapper: ...
    @overload
    def GetGameEvent(self) -> GameEventWrapper: ...
    @overload
    def GetGameEvent() -> classGameEventWrapper: ...
    @overload
    def GetInput(self) -> ControllerInput: ...
    @overload
    def GetInput() -> structControllerInput: ...
    @overload
    def GetLastWheelsHitBallTime(self) -> float: ...
    @overload
    def GetLastWheelsHitBallTime() -> float: ...
    @overload
    def GetLoadoutBody(self) -> int: ...
    @overload
    def GetLoadoutBody() -> int: ...
    @overload
    def GetLoadoutTeamIndex(self) -> int: ...
    @overload
    def GetLoadoutTeamIndex() -> int: ...
    @overload
    def GetMaxDriveBackwardsSpeed(self) -> float: ...
    @overload
    def GetMaxDriveBackwardsSpeed() -> float: ...
    @overload
    def GetMaxDriveForwardSpeed(self) -> float: ...
    @overload
    def GetMaxDriveForwardSpeed() -> float: ...
    @overload
    def GetMaxTimeForDodge(self) -> float: ...
    @overload
    def GetMaxTimeForDodge() -> float: ...
    @overload
    def GetMouseAccel(self) -> Vector: ...
    @overload
    def GetMouseAccel() -> structVector: ...
    @overload
    def GetMouseAirAccel(self) -> Vector: ...
    @overload
    def GetMouseAirAccel() -> structVector: ...
    @overload
    def GetOwnerName(self) -> str: ...
    @overload
    def GetOwnerName() -> std::string: ...
    @overload
    def GetPreviewTeamIndex(self) -> int: ...
    @overload
    def GetPreviewTeamIndex() -> int: ...
    @overload
    def GetReplayFocusLocation(self) -> Vector: ...
    @overload
    def GetReplayFocusLocation() -> structVector: ...
    @overload
    def GetReplayFocusOffset(self) -> Vector: ...
    @overload
    def GetReplayFocusOffset() -> structVector: ...
    @overload
    def GetReplicatedCarScale(self) -> float: ...
    @overload
    def GetReplicatedCarScale() -> float: ...
    @overload
    def GetbCollidesWithVehicles(self) -> int: ...
    @overload
    def GetbCollidesWithVehicles() -> unsignedlong: ...
    @overload
    def GetbDemolishOnGoalZone(self) -> int: ...
    @overload
    def GetbDemolishOnGoalZone() -> unsignedlong: ...
    @overload
    def GetbDemolishOnOpposingGround(self) -> int: ...
    @overload
    def GetbDemolishOnOpposingGround() -> unsignedlong: ...
    @overload
    def GetbLoadoutSet(self) -> int: ...
    @overload
    def GetbLoadoutSet() -> unsignedlong: ...
    @overload
    def GetbOverrideBoostOn(self) -> int: ...
    @overload
    def GetbOverrideBoostOn() -> unsignedlong: ...
    @overload
    def GetbOverrideHandbrakeOn(self) -> int: ...
    @overload
    def GetbOverrideHandbrakeOn() -> unsignedlong: ...
    @overload
    def GetbWasInGoalZone(self) -> int: ...
    @overload
    def GetbWasInGoalZone() -> unsignedlong: ...
    @overload
    def GetbWasOnOpposingGround(self) -> int: ...
    @overload
    def GetbWasOnOpposingGround() -> unsignedlong: ...
    @overload
    def GiveCarComponent(self, ComponentArchetype: CarComponentWrapper, Activator: PriWrapper) -> CarComponentWrapper: ...
    @overload
    def GiveCarComponent(classCarComponentWrapper, classPriWrapper) -> classCarComponentWrapper: ...
    @overload
    def HandleGameEventChanged(self, MyPRI: PriWrapper) -> None: ...
    @overload
    def HandleGameEventChanged(classPriWrapper) -> void: ...
    @overload
    def HandleLoadoutSelected(self, MyPRI: PriWrapper) -> None: ...
    @overload
    def HandleLoadoutSelected(classPriWrapper) -> void: ...
    @overload
    def HandleTeamChanged(self, MyPRI: PriXWrapper) -> None: ...
    @overload
    def HandleTeamChanged(classPriXWrapper) -> void: ...
    @overload
    def HandleWheelBallHit(self, Wheel: WheelWrapper) -> None: ...
    @overload
    def HandleWheelBallHit(classWheelWrapper) -> void: ...
    @overload
    def HasTeam(self) -> bool: ...
    @overload
    def HasTeam() -> bool: ...
    @overload
    def InitTeamPaint(self) -> None: ...
    @overload
    def InitTeamPaint() -> void: ...
    @overload
    def IsBoostCheap(self) -> bool: ...
    @overload
    def IsBoostCheap() -> bool: ...
    @overload
    def IsBumperHit(self, OtherCar: CarWrapper) -> bool: ...
    @overload
    def IsBumperHit(classCarWrapper) -> bool: ...
    @overload
    def IsDodging(self) -> bool: ...
    @overload
    def IsDodging() -> bool: ...
    @overload
    def NotifyNewAttacker(self, Attacker: PriWrapper) -> None: ...
    @overload
    def NotifyNewAttacker(classPriWrapper) -> void: ...
    @overload
    def OnClubColorsChanged(self) -> None: ...
    @overload
    def OnClubColorsChanged() -> void: ...
    @overload
    def OnControllerChanged(self) -> None: ...
    @overload
    def OnControllerChanged() -> void: ...
    def OnHitBall(self, Ball: BallWrapper, HitLocation: Vector, HitNormal: Vector) -> None: ...
    @overload
    def OnJumpPressed(self) -> None: ...
    @overload
    def OnJumpPressed() -> void: ...
    @overload
    def OnJumpReleased(self) -> None: ...
    @overload
    def OnJumpReleased() -> void: ...
    @overload
    def OnPRIChanged(self) -> None: ...
    @overload
    def OnPRIChanged() -> void: ...
    @overload
    def OnPickupChanged(self, InPickup: RumblePickupComponentWrapper) -> None: ...
    @overload
    def OnPickupChanged(classRumblePickupComponentWrapper) -> void: ...
    @overload
    def RespawnInPlace(self) -> None: ...
    @overload
    def RespawnInPlace() -> void: ...
    @overload
    def SetAddedBallForceMultiplier(self, newAddedBallForceMultiplier: float) -> None: ...
    @overload
    def SetAddedBallForceMultiplier(float) -> void: ...
    @overload
    def SetAddedCarForceMultiplier(self, newAddedCarForceMultiplier: float) -> None: ...
    @overload
    def SetAddedCarForceMultiplier(float) -> void: ...
    @overload
    def SetAttachedPickup(self, newAttachedPickup: RumblePickupComponentWrapper) -> None: ...
    @overload
    def SetAttachedPickup(classRumblePickupComponentWrapper) -> void: ...
    @overload
    def SetAttachedPickup2(self, InPickup: RumblePickupComponentWrapper) -> None: ...
    @overload
    def SetAttachedPickup2(classRumblePickupComponentWrapper) -> void: ...
    @overload
    def SetAttackerPRI(self, newAttackerPRI: PriWrapper) -> None: ...
    @overload
    def SetAttackerPRI(classPriWrapper) -> void: ...
    @overload
    def SetBodyFXActor(self, newBodyFXActor: FXActorWrapper) -> None: ...
    @overload
    def SetBodyFXActor(classFXActorWrapper) -> void: ...
    @overload
    def SetBoostCheap(self, b: bool) -> None: ...
    @overload
    def SetBoostCheap(bool) -> void: ...
    @overload
    def SetCarRotation(self, rotation: Rotator) -> None: ...
    @overload
    def SetCarRotation(structRotator) -> void: ...
    @overload
    def SetCarScale(self, NewScale: float) -> None: ...
    @overload
    def SetCarScale(float) -> void: ...
    @overload
    def SetDemolishSpeed(self, newDemolishSpeed: int) -> None: ...
    @overload
    def SetDemolishSpeed(unsignedchar) -> void: ...
    @overload
    def SetDemolishTarget(self, newDemolishTarget: int) -> None: ...
    @overload
    def SetDemolishTarget(unsignedchar) -> void: ...
    @overload
    def SetExitFXArchetype(self, newExitFXArchetype: FXActorWrapper) -> None: ...
    @overload
    def SetExitFXArchetype(classFXActorWrapper) -> void: ...
    @overload
    def SetGameEvent(self, newGameEvent: GameEventWrapper) -> None: ...
    @overload
    def SetGameEvent(classGameEventWrapper) -> void: ...
    @overload
    def SetInput(self, input: ControllerInput) -> None: ...
    @overload
    def SetInput(structControllerInput) -> void: ...
    @overload
    def SetLastWheelsHitBallTime(self, newLastWheelsHitBallTime: float) -> None: ...
    @overload
    def SetLastWheelsHitBallTime(float) -> void: ...
    @overload
    def SetMaxTimeForDodge(self, newMaxTimeForDodge: float) -> None: ...
    @overload
    def SetMaxTimeForDodge(float) -> void: ...
    @overload
    def SetMouseAccel(self, newMouseAccel: Vector) -> None: ...
    @overload
    def SetMouseAccel(structVector) -> void: ...
    @overload
    def SetMouseAirAccel(self, newMouseAirAccel: Vector) -> None: ...
    @overload
    def SetMouseAirAccel(structVector) -> void: ...
    @overload
    def SetReplayFocusOffset(self, newReplayFocusOffset: Vector) -> None: ...
    @overload
    def SetReplayFocusOffset(structVector) -> void: ...
    @overload
    def SetReplicatedCarScale(self, newReplicatedCarScale: float) -> None: ...
    @overload
    def SetReplicatedCarScale(float) -> void: ...
    @overload
    def SetbCollidesWithVehicles(self, newbCollidesWithVehicles: int) -> None: ...
    @overload
    def SetbCollidesWithVehicles(unsignedlong) -> void: ...
    @overload
    def SetbDemolishOnGoalZone(self, newbDemolishOnGoalZone: int) -> None: ...
    @overload
    def SetbDemolishOnGoalZone(unsignedlong) -> void: ...
    @overload
    def SetbDemolishOnOpposingGround(self, newbDemolishOnOpposingGround: int) -> None: ...
    @overload
    def SetbDemolishOnOpposingGround(unsignedlong) -> void: ...
    @overload
    def SetbLoadoutSet(self, newbLoadoutSet: int) -> None: ...
    @overload
    def SetbLoadoutSet(unsignedlong) -> void: ...
    @overload
    def SetbOverrideBoostOn(self, newbOverrideBoostOn: int) -> None: ...
    @overload
    def SetbOverrideBoostOn(unsignedlong) -> void: ...
    @overload
    def SetbOverrideHandbrakeOn(self, newbOverrideHandbrakeOn: int) -> None: ...
    @overload
    def SetbOverrideHandbrakeOn(unsignedlong) -> void: ...
    @overload
    def SetbWasInGoalZone(self, newbWasInGoalZone: int) -> None: ...
    @overload
    def SetbWasInGoalZone(unsignedlong) -> void: ...
    @overload
    def SetbWasOnOpposingGround(self, newbWasOnOpposingGround: int) -> None: ...
    @overload
    def SetbWasOnOpposingGround(unsignedlong) -> void: ...
    def ShouldDemolish(self, HitCar: CarWrapper, HitLocation: Vector, HitNormal: Vector, Result: int) -> bool: ...
    def Teleport(self, SpawnLocation: Vector, SpawnRotation: Rotator, bStopVelocity: int, bUpdateRotation: int, ExtraForce: float) -> bool: ...
    @overload
    def Unfreeze(self) -> None: ...
    @overload
    def Unfreeze() -> void: ...
    @overload
    def UpdateBallIndicator(self) -> None: ...
    @overload
    def UpdateBallIndicator() -> void: ...
    @overload
    def UpdateTeamLoadout(self) -> bool: ...
    @overload
    def UpdateTeamLoadout() -> bool: ...
    def assign(self, rhs: CarWrapper) -> CarWrapper: ...
    @overload
    def eventOnGroundChanged(self) -> None: ...
    @overload
    def eventOnGroundChanged() -> void: ...
    @overload
    def eventOnSuperSonicChanged(self) -> None: ...
    @overload
    def eventOnSuperSonicChanged() -> void: ...
    @overload
    def eventSetVehicleInput(self, NewInput: ControllerInput) -> None: ...
    @overload
    def eventSetVehicleInput(structControllerInput&) -> void: ...

class ControllerInput:
    def __init__(self) -> None: ...
    @property
    def ActivateBoost(self) -> Any: ...
    @property
    def DodgeForward(self) -> Any: ...
    @DodgeForward.setter
    def DodgeForward(self, val: Any) -> None: ...
    @property
    def DodgeStrafe(self) -> Any: ...
    @DodgeStrafe.setter
    def DodgeStrafe(self, val: Any) -> None: ...
    @property
    def Handbrake(self) -> Any: ...
    @property
    def HoldingBoost(self) -> Any: ...
    @property
    def Jump(self) -> Any: ...
    @property
    def Jumped(self) -> Any: ...
    @property
    def Pitch(self) -> Any: ...
    @Pitch.setter
    def Pitch(self, val: Any) -> None: ...
    @property
    def Roll(self) -> Any: ...
    @Roll.setter
    def Roll(self, val: Any) -> None: ...
    @property
    def Steer(self) -> Any: ...
    @Steer.setter
    def Steer(self, val: Any) -> None: ...
    @property
    def Throttle(self) -> Any: ...
    @Throttle.setter
    def Throttle(self, val: Any) -> None: ...
    @property
    def Yaw(self) -> Any: ...
    @Yaw.setter
    def Yaw(self, val: Any) -> None: ...

class CustomRotator:
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, defaultValue: float) -> None: ...
    @overload
    def __init__(self, pitch: float, yaw: float, roll: float) -> None: ...
    @overload
    def __init__(self, pitch: FiniteElement_float_t, yaw: FiniteElement_float_t, roll: FiniteElement_float_t) -> None: ...
    @overload
    def __init__(self, rot: Rotator) -> None: ...
    @overload
    def __init__(self, arg0: CustomRotator) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def ToRotator(self) -> Rotator: ...
    @overload
    def ToRotator() -> structRotator: ...
    @overload
    def assign(self, other: CustomRotator) -> CustomRotator: ...
    @overload
    def assign(self, other: Rotator) -> CustomRotator: ...
    @overload
    def assign(*args, **kwargs) -> Any: ...
    @overload
    def diffTo(self, other: CustomRotator) -> CustomRotator: ...
    @overload
    def diffTo(classCustomRotator&) -> classCustomRotator: ...
    def __add__(self, other: CustomRotator) -> CustomRotator: ...
    def __div__(self, other: CustomRotator) -> CustomRotator: ...
    def __iadd__(self, other: CustomRotator) -> CustomRotator: ...
    def __idiv__(self, other: CustomRotator) -> CustomRotator: ...
    def __imul__(self, other: CustomRotator) -> CustomRotator: ...
    def __isub__(self, other: CustomRotator) -> CustomRotator: ...
    def __mul__(self, other: CustomRotator) -> CustomRotator: ...
    def __sub__(self, other: CustomRotator) -> CustomRotator: ...
    @property
    def Pitch(self) -> Any: ...
    @Pitch.setter
    def Pitch(self, val: Any) -> None: ...
    @property
    def Roll(self) -> Any: ...
    @Roll.setter
    def Roll(self, val: Any) -> None: ...
    @property
    def Yaw(self) -> Any: ...
    @Yaw.setter
    def Yaw(self, val: Any) -> None: ...

class DemolishPickup(RumblePickupComponentWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: DemolishPickup) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def GetDemolishSpeed(self) -> int: ...
    @overload
    def GetDemolishSpeed() -> unsignedchar: ...
    @overload
    def GetDemolishTarget(self) -> int: ...
    @overload
    def GetDemolishTarget() -> unsignedchar: ...
    @overload
    def GetOldSpeed(self) -> int: ...
    @overload
    def GetOldSpeed() -> unsignedchar: ...
    @overload
    def GetOldTarget(self) -> int: ...
    @overload
    def GetOldTarget() -> unsignedchar: ...
    @overload
    def PickupEnd(self) -> None: ...
    @overload
    def PickupEnd() -> void: ...
    @overload
    def PickupStart(self) -> None: ...
    @overload
    def PickupStart() -> void: ...
    @overload
    def SetDemolishSpeed(self, newDemolishSpeed: int) -> None: ...
    @overload
    def SetDemolishSpeed(unsignedchar) -> void: ...
    @overload
    def SetDemolishTarget(self, newDemolishTarget: int) -> None: ...
    @overload
    def SetDemolishTarget(unsignedchar) -> void: ...
    @overload
    def SetOldSpeed(self, newOldSpeed: int) -> None: ...
    @overload
    def SetOldSpeed(unsignedchar) -> void: ...
    @overload
    def SetOldTarget(self, newOldTarget: int) -> None: ...
    @overload
    def SetOldTarget(unsignedchar) -> void: ...
    def assign(self, rhs: DemolishPickup) -> DemolishPickup: ...

class DodgeComponentWrapper(CarComponentWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: DodgeComponentWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def ApplyDodgeImpulse(self) -> None: ...
    @overload
    def ApplyDodgeImpulse() -> void: ...
    @overload
    def ApplyForces(self, ActiveTime: float) -> None: ...
    @overload
    def ApplyForces(float) -> void: ...
    @overload
    def ApplyTorqueForces(self, ActiveTime: float) -> None: ...
    @overload
    def ApplyTorqueForces(float) -> void: ...
    @overload
    def CanActivate(self) -> bool: ...
    @overload
    def CanActivate() -> bool: ...
    @overload
    def GetBackwardDodgeImpulse(self) -> float: ...
    @overload
    def GetBackwardDodgeImpulse() -> float: ...
    @overload
    def GetBackwardDodgeImpulseMaxSpeedScale(self) -> float: ...
    @overload
    def GetBackwardDodgeImpulseMaxSpeedScale() -> float: ...
    @overload
    def GetDodgeDirection(self) -> Vector: ...
    @overload
    def GetDodgeDirection() -> structVector: ...
    @overload
    def GetDodgeImpulse2(self, DodgeDir: Vector) -> Vector: ...
    @overload
    def GetDodgeImpulse2(structVector&) -> structVector: ...
    @overload
    def GetDodgeImpulseScale(self) -> float: ...
    @overload
    def GetDodgeImpulseScale() -> float: ...
    @overload
    def GetDodgeInputThreshold(self) -> float: ...
    @overload
    def GetDodgeInputThreshold() -> float: ...
    @overload
    def GetDodgeTorque(self) -> Vector: ...
    @overload
    def GetDodgeTorque() -> structVector: ...
    @overload
    def GetDodgeTorqueScale(self) -> float: ...
    @overload
    def GetDodgeTorqueScale() -> float: ...
    @overload
    def GetDodgeTorqueTime(self) -> float: ...
    @overload
    def GetDodgeTorqueTime() -> float: ...
    @overload
    def GetDodgeZDamping(self) -> float: ...
    @overload
    def GetDodgeZDamping() -> float: ...
    @overload
    def GetDodgeZDampingDelay(self) -> float: ...
    @overload
    def GetDodgeZDampingDelay() -> float: ...
    @overload
    def GetDodgeZDampingUpTime(self) -> float: ...
    @overload
    def GetDodgeZDampingUpTime() -> float: ...
    @overload
    def GetForwardDodgeImpulse(self) -> float: ...
    @overload
    def GetForwardDodgeImpulse() -> float: ...
    @overload
    def GetForwardDodgeImpulseMaxSpeedScale(self) -> float: ...
    @overload
    def GetForwardDodgeImpulseMaxSpeedScale() -> float: ...
    @overload
    def GetForwardDodgeTorque(self) -> float: ...
    @overload
    def GetForwardDodgeTorque() -> float: ...
    @overload
    def GetMinDodgeTorqueTime(self) -> float: ...
    @overload
    def GetMinDodgeTorqueTime() -> float: ...
    @overload
    def GetSideDodgeImpulse(self) -> float: ...
    @overload
    def GetSideDodgeImpulse() -> float: ...
    @overload
    def GetSideDodgeImpulseMaxSpeedScale(self) -> float: ...
    @overload
    def GetSideDodgeImpulseMaxSpeedScale() -> float: ...
    @overload
    def GetSideDodgeTorque(self) -> float: ...
    @overload
    def GetSideDodgeTorque() -> float: ...
    @overload
    def OnCreated(self) -> None: ...
    @overload
    def OnCreated() -> void: ...
    @overload
    def SetBackwardDodgeImpulse(self, newBackwardDodgeImpulse: float) -> None: ...
    @overload
    def SetBackwardDodgeImpulse(float) -> void: ...
    @overload
    def SetBackwardDodgeImpulseMaxSpeedScale(self, newBackwardDodgeImpulseMaxSpeedScale: float) -> None: ...
    @overload
    def SetBackwardDodgeImpulseMaxSpeedScale(float) -> void: ...
    @overload
    def SetDodgeDirection(self, newDodgeDirection: Vector) -> None: ...
    @overload
    def SetDodgeDirection(structVector) -> void: ...
    @overload
    def SetDodgeImpulseScale(self, newDodgeImpulseScale: float) -> None: ...
    @overload
    def SetDodgeImpulseScale(float) -> void: ...
    @overload
    def SetDodgeInputThreshold(self, newDodgeInputThreshold: float) -> None: ...
    @overload
    def SetDodgeInputThreshold(float) -> void: ...
    @overload
    def SetDodgeSettings(self) -> None: ...
    @overload
    def SetDodgeSettings() -> void: ...
    @overload
    def SetDodgeTorque(self, newDodgeTorque: Vector) -> None: ...
    @overload
    def SetDodgeTorque(structVector) -> void: ...
    @overload
    def SetDodgeTorqueScale(self, newDodgeTorqueScale: float) -> None: ...
    @overload
    def SetDodgeTorqueScale(float) -> void: ...
    @overload
    def SetDodgeTorqueTime(self, newDodgeTorqueTime: float) -> None: ...
    @overload
    def SetDodgeTorqueTime(float) -> void: ...
    @overload
    def SetDodgeZDamping(self, newDodgeZDamping: float) -> None: ...
    @overload
    def SetDodgeZDamping(float) -> void: ...
    @overload
    def SetDodgeZDampingDelay(self, newDodgeZDampingDelay: float) -> None: ...
    @overload
    def SetDodgeZDampingDelay(float) -> void: ...
    @overload
    def SetDodgeZDampingUpTime(self, newDodgeZDampingUpTime: float) -> None: ...
    @overload
    def SetDodgeZDampingUpTime(float) -> void: ...
    @overload
    def SetForwardDodgeImpulse(self, newForwardDodgeImpulse: float) -> None: ...
    @overload
    def SetForwardDodgeImpulse(float) -> void: ...
    @overload
    def SetForwardDodgeImpulseMaxSpeedScale(self, newForwardDodgeImpulseMaxSpeedScale: float) -> None: ...
    @overload
    def SetForwardDodgeImpulseMaxSpeedScale(float) -> void: ...
    @overload
    def SetForwardDodgeTorque(self, newForwardDodgeTorque: float) -> None: ...
    @overload
    def SetForwardDodgeTorque(float) -> void: ...
    @overload
    def SetMinDodgeTorqueTime(self, newMinDodgeTorqueTime: float) -> None: ...
    @overload
    def SetMinDodgeTorqueTime(float) -> void: ...
    @overload
    def SetSideDodgeImpulse(self, newSideDodgeImpulse: float) -> None: ...
    @overload
    def SetSideDodgeImpulse(float) -> void: ...
    @overload
    def SetSideDodgeImpulseMaxSpeedScale(self, newSideDodgeImpulseMaxSpeedScale: float) -> None: ...
    @overload
    def SetSideDodgeImpulseMaxSpeedScale(float) -> void: ...
    @overload
    def SetSideDodgeTorque(self, newSideDodgeTorque: float) -> None: ...
    @overload
    def SetSideDodgeTorque(float) -> void: ...
    def assign(self, rhs: DodgeComponentWrapper) -> DodgeComponentWrapper: ...

class DoubleJumpComponentWrapper(CarComponentWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: DoubleJumpComponentWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def ApplyForces(self, ActiveTime: float) -> None: ...
    @overload
    def ApplyForces(float) -> void: ...
    @overload
    def GetImpulseScale(self) -> float: ...
    @overload
    def GetImpulseScale() -> float: ...
    @overload
    def OnCreated(self) -> None: ...
    @overload
    def OnCreated() -> void: ...
    @overload
    def SetImpulseScale(self, newImpulseScale: float) -> None: ...
    @overload
    def SetImpulseScale(float) -> void: ...
    @overload
    def SetJumpImpulse(self, newJumpImpulse: float) -> None: ...
    @overload
    def SetJumpImpulse(float) -> void: ...
    def assign(self, rhs: DoubleJumpComponentWrapper) -> DoubleJumpComponentWrapper: ...

class EngineTAWrapper(ObjectWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: EngineTAWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def DebugClientCorrections2(self) -> None: ...
    @overload
    def DebugClientCorrections2() -> void: ...
    @overload
    def DebugDedicatedServer(self, ForHowLong: float) -> None: ...
    @overload
    def DebugDedicatedServer(float) -> void: ...
    @overload
    def EventPreAsyncTick(self, DeltaTime: float) -> None: ...
    @overload
    def EventPreAsyncTick(float) -> void: ...
    @overload
    def GetBulletFixedDeltaTime(self) -> float: ...
    @overload
    def GetBulletFixedDeltaTime() -> float: ...
    @overload
    def GetDebugClientCorrectionCount(self) -> int: ...
    @overload
    def GetDebugClientCorrectionCount() -> int: ...
    @overload
    def GetDebugClientCorrectionStartTime(self) -> float: ...
    @overload
    def GetDebugClientCorrectionStartTime() -> float: ...
    @overload
    def GetDirtyPhysicsFrame(self) -> int: ...
    @overload
    def GetDirtyPhysicsFrame() -> int: ...
    @overload
    def GetForceCorrectionFrames(self) -> int: ...
    @overload
    def GetForceCorrectionFrames() -> int: ...
    @overload
    def GetLastBugReportTime(self) -> float: ...
    @overload
    def GetLastBugReportTime() -> float: ...
    @overload
    def GetLastPhysicsDeltaTimeScale(self) -> float: ...
    @overload
    def GetLastPhysicsDeltaTimeScale() -> float: ...
    @overload
    def GetMaxClientReplayFrames(self) -> int: ...
    @overload
    def GetMaxClientReplayFrames() -> int: ...
    @overload
    def GetMaxPhysicsSubsteps(self) -> int: ...
    @overload
    def GetMaxPhysicsSubsteps() -> int: ...
    @overload
    def GetMaxUploadedClientFrames(self) -> int: ...
    @overload
    def GetMaxUploadedClientFrames() -> int: ...
    @overload
    def GetPhysicsFrame(self) -> int: ...
    @overload
    def GetPhysicsFrame() -> int: ...
    @overload
    def GetPhysicsFramerate(self) -> float: ...
    @overload
    def GetPhysicsFramerate() -> float: ...
    @overload
    def GetPhysicsTime(self) -> float: ...
    @overload
    def GetPhysicsTime() -> float: ...
    @overload
    def GetRenderAlpha(self) -> float: ...
    @overload
    def GetRenderAlpha() -> float: ...
    @overload
    def GetReplicatedPhysicsFrame(self) -> int: ...
    @overload
    def GetReplicatedPhysicsFrame() -> int: ...
    @overload
    def GetShellArchetypePath(self) -> UnrealStringWrapper: ...
    @overload
    def GetShellArchetypePath() -> classUnrealStringWrapper: ...
    @overload
    def GetStatGraphs(self) -> StatGraphSystemWrapper: ...
    @overload
    def GetStatGraphs() -> classStatGraphSystemWrapper: ...
    @overload
    def GetTickNotifyIndex(self) -> int: ...
    @overload
    def GetTickNotifyIndex() -> int: ...
    @overload
    def GetbClientPhysicsUpdate(self) -> int: ...
    @overload
    def GetbClientPhysicsUpdate() -> unsignedlong: ...
    @overload
    def GetbDebugClientCorrections(self) -> int: ...
    @overload
    def GetbDebugClientCorrections() -> unsignedlong: ...
    @overload
    def GetbDisableClientCorrections(self) -> int: ...
    @overload
    def GetbDisableClientCorrections() -> unsignedlong: ...
    @overload
    def GetbEnableClientPrediction(self) -> int: ...
    @overload
    def GetbEnableClientPrediction() -> unsignedlong: ...
    @overload
    def GetbForceClientCorrection(self) -> int: ...
    @overload
    def GetbForceClientCorrection() -> unsignedlong: ...
    @overload
    def RunPhysicsStep(self, BulletSceneIndex: int, DeltaTime: float) -> None: ...
    @overload
    def RunPhysicsStep(int, float) -> void: ...
    @overload
    def SetDebugClientCorrectionCount(self, newDebugClientCorrectionCount: int) -> None: ...
    @overload
    def SetDebugClientCorrectionCount(int) -> void: ...
    @overload
    def SetDebugClientCorrectionStartTime(self, newDebugClientCorrectionStartTime: float) -> None: ...
    @overload
    def SetDebugClientCorrectionStartTime(float) -> void: ...
    @overload
    def SetDirtyPhysicsFrame(self, newDirtyPhysicsFrame: int) -> None: ...
    @overload
    def SetDirtyPhysicsFrame(int) -> void: ...
    @overload
    def SetForceCorrectionFrames(self, newForceCorrectionFrames: int) -> None: ...
    @overload
    def SetForceCorrectionFrames(int) -> void: ...
    @overload
    def SetLastBugReportTime(self, newLastBugReportTime: float) -> None: ...
    @overload
    def SetLastBugReportTime(float) -> void: ...
    @overload
    def SetLastPhysicsDeltaTimeScale(self, newLastPhysicsDeltaTimeScale: float) -> None: ...
    @overload
    def SetLastPhysicsDeltaTimeScale(float) -> void: ...
    @overload
    def SetMaxClientReplayFrames(self, newMaxClientReplayFrames: int) -> None: ...
    @overload
    def SetMaxClientReplayFrames(int) -> void: ...
    @overload
    def SetMaxPhysicsSubsteps(self, newMaxPhysicsSubsteps: int) -> None: ...
    @overload
    def SetMaxPhysicsSubsteps(int) -> void: ...
    @overload
    def SetMaxUploadedClientFrames(self, newMaxUploadedClientFrames: int) -> None: ...
    @overload
    def SetMaxUploadedClientFrames(int) -> void: ...
    @overload
    def SetPhysicsFrame(self, newPhysicsFrame: int) -> None: ...
    @overload
    def SetPhysicsFrame(int) -> void: ...
    @overload
    def SetPhysicsFramerate(self, newPhysicsFramerate: float) -> None: ...
    @overload
    def SetPhysicsFramerate(float) -> void: ...
    @overload
    def SetRenderAlpha(self, newRenderAlpha: float) -> None: ...
    @overload
    def SetRenderAlpha(float) -> void: ...
    @overload
    def SetReplicatedPhysicsFrame(self, newReplicatedPhysicsFrame: int) -> None: ...
    @overload
    def SetReplicatedPhysicsFrame(int) -> void: ...
    @overload
    def SetStatGraphs(self, newStatGraphs: StatGraphSystemWrapper) -> None: ...
    @overload
    def SetStatGraphs(classStatGraphSystemWrapper) -> void: ...
    @overload
    def SetTickNotifyIndex(self, newTickNotifyIndex: int) -> None: ...
    @overload
    def SetTickNotifyIndex(int) -> void: ...
    @overload
    def SetbClientPhysicsUpdate(self, newbClientPhysicsUpdate: int) -> None: ...
    @overload
    def SetbClientPhysicsUpdate(unsignedlong) -> void: ...
    @overload
    def SetbDebugClientCorrections(self, newbDebugClientCorrections: int) -> None: ...
    @overload
    def SetbDebugClientCorrections(unsignedlong) -> void: ...
    @overload
    def SetbDisableClientCorrections(self, newbDisableClientCorrections: int) -> None: ...
    @overload
    def SetbDisableClientCorrections(unsignedlong) -> void: ...
    @overload
    def SetbEnableClientPrediction(self, newbEnableClientPrediction: int) -> None: ...
    @overload
    def SetbEnableClientPrediction(unsignedlong) -> void: ...
    @overload
    def SetbForceClientCorrection(self, newbForceClientCorrection: int) -> None: ...
    @overload
    def SetbForceClientCorrection(unsignedlong) -> void: ...
    @overload
    def UpdateReplicatedPhysicsFrame(self, ServerFrame: int) -> None: ...
    @overload
    def UpdateReplicatedPhysicsFrame(int) -> void: ...
    def assign(self, rhs: EngineTAWrapper) -> EngineTAWrapper: ...
    @overload
    def eventInit(self) -> None: ...
    @overload
    def eventInit() -> void: ...
    @overload
    def eventRecordAppStart(self) -> None: ...
    @overload
    def eventRecordAppStart() -> void: ...

class FXActorWrapper(ActorWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: FXActorWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def Activate2(self) -> None: ...
    @overload
    def Activate2() -> void: ...
    @overload
    def BindTo(self, ParentFXActor: FXActorWrapper) -> None: ...
    @overload
    def BindTo(classFXActorWrapper) -> void: ...
    @overload
    def Deactivate2(self) -> None: ...
    @overload
    def Deactivate2() -> void: ...
    @overload
    def GetAttachmentActor(self) -> ActorWrapper: ...
    @overload
    def GetAttachmentActor() -> classActorWrapper: ...
    @overload
    def GetDestroyTime(self) -> float: ...
    @overload
    def GetDestroyTime() -> float: ...
    @overload
    def GetDestroyWaitTime(self) -> float: ...
    @overload
    def GetDestroyWaitTime() -> float: ...
    @overload
    def GetEditID(self) -> int: ...
    @overload
    def GetEditID() -> int: ...
    @overload
    def GetParent(self) -> FXActorWrapper: ...
    @overload
    def GetParent() -> classFXActorWrapper: ...
    @overload
    def GetbActive(self) -> int: ...
    @overload
    def GetbActive() -> unsignedlong: ...
    @overload
    def GetbAllowShadowCasting(self) -> int: ...
    @overload
    def GetbAllowShadowCasting() -> unsignedlong: ...
    @overload
    def GetbAutoActivate(self) -> int: ...
    @overload
    def GetbAutoActivate() -> unsignedlong: ...
    @overload
    def GetbDeactivateWhenOwnerDestroyed(self) -> int: ...
    @overload
    def GetbDeactivateWhenOwnerDestroyed() -> unsignedlong: ...
    @overload
    def GetbHadOwner(self) -> int: ...
    @overload
    def GetbHadOwner() -> unsignedlong: ...
    @overload
    def GetbRenderInactive(self) -> int: ...
    @overload
    def GetbRenderInactive() -> unsignedlong: ...
    @overload
    def Inherit(self, Other: FXActorWrapper) -> None: ...
    @overload
    def Inherit(classFXActorWrapper) -> void: ...
    @overload
    def IsLocallyControlled(self) -> bool: ...
    @overload
    def IsLocallyControlled() -> bool: ...
    @overload
    def PostBeginPlay(self) -> None: ...
    @overload
    def PostBeginPlay() -> void: ...
    @overload
    def ResetParticles(self) -> None: ...
    @overload
    def ResetParticles() -> void: ...
    @overload
    def SetAttachmentActor(self, newAttachmentActor: ActorWrapper) -> None: ...
    @overload
    def SetAttachmentActor(classActorWrapper) -> void: ...
    @overload
    def SetAttachmentActor2(self, AttachToActor: ActorWrapper) -> None: ...
    @overload
    def SetAttachmentActor2(classActorWrapper) -> void: ...
    @overload
    def SetDestroyTime(self, newDestroyTime: float) -> None: ...
    @overload
    def SetDestroyTime(float) -> void: ...
    @overload
    def SetDestroyWaitTime(self, newDestroyWaitTime: float) -> None: ...
    @overload
    def SetDestroyWaitTime(float) -> void: ...
    @overload
    def SetEditID(self, newEditID: int) -> None: ...
    @overload
    def SetEditID(int) -> void: ...
    @overload
    def SetParent(self, newParent: FXActorWrapper) -> None: ...
    @overload
    def SetParent(classFXActorWrapper) -> void: ...
    @overload
    def SetbActive(self, newbActive: int) -> None: ...
    @overload
    def SetbActive(unsignedlong) -> void: ...
    @overload
    def SetbAllowShadowCasting(self, newbAllowShadowCasting: int) -> None: ...
    @overload
    def SetbAllowShadowCasting(unsignedlong) -> void: ...
    @overload
    def SetbAutoActivate(self, newbAutoActivate: int) -> None: ...
    @overload
    def SetbAutoActivate(unsignedlong) -> void: ...
    @overload
    def SetbDeactivateWhenOwnerDestroyed(self, newbDeactivateWhenOwnerDestroyed: int) -> None: ...
    @overload
    def SetbDeactivateWhenOwnerDestroyed(unsignedlong) -> void: ...
    @overload
    def SetbHadOwner(self, newbHadOwner: int) -> None: ...
    @overload
    def SetbHadOwner(unsignedlong) -> void: ...
    @overload
    def SetbRenderInactive(self, newbRenderInactive: int) -> None: ...
    @overload
    def SetbRenderInactive(unsignedlong) -> void: ...
    @overload
    def StopAllEffects(self) -> None: ...
    @overload
    def StopAllEffects() -> void: ...
    @overload
    def UpdateFXStates(self) -> None: ...
    @overload
    def UpdateFXStates() -> void: ...
    def assign(self, rhs: FXActorWrapper) -> FXActorWrapper: ...
    @overload
    def eventDeactivateAndDestroy(self) -> None: ...
    @overload
    def eventDeactivateAndDestroy() -> void: ...
    @overload
    def eventDestroyed(self) -> None: ...
    @overload
    def eventDestroyed() -> void: ...
    @overload
    def eventDumpDebugInfo(self) -> None: ...
    @overload
    def eventDumpDebugInfo() -> void: ...

class FiniteElement_float_t:
    @overload
    def __init__(self, value: float, min: float, max: float) -> None: ...
    @overload
    def __init__(self, arg0: FiniteElement_float_t) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def _setValue(self, value: float) -> None: ...
    @overload
    def _setValue(float) -> void: ...
    @overload
    def _sizeOfField(self) -> float: ...
    @overload
    def _sizeOfField() -> float: ...
    @overload
    def assign(self, other: float) -> FiniteElement_float_t: ...
    @overload
    def assign(self, other: FiniteElement_float_t) -> FiniteElement_float_t: ...
    @overload
    def assign(self, other: FiniteElement_float_t) -> FiniteElement_float_t: ...
    @overload
    def assign(*args, **kwargs) -> Any: ...
    @overload
    def diffTo(self, end: FiniteElement_float_t) -> float: ...
    @overload
    def diffTo(classFiniteElement<float>) -> float: ...
    @overload
    def diffTo(self, end: float) -> float: ...
    @overload
    def diffTo(float) -> float: ...
    @overload
    def diffTo(*args, **kwargs) -> Any: ...
    @property
    def _max(self) -> Any: ...
    @_max.setter
    def _max(self, val: Any) -> None: ...
    @property
    def _min(self) -> Any: ...
    @_min.setter
    def _min(self, val: Any) -> None: ...
    @property
    def _value(self) -> Any: ...
    @_value.setter
    def _value(self, val: Any) -> None: ...

class FlipCarComponentWrapper(CarComponentWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: FlipCarComponentWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def ApplyForces(self, ActiveTime: float) -> None: ...
    @overload
    def ApplyForces(float) -> void: ...
    @overload
    def CanActivate(self) -> bool: ...
    @overload
    def CanActivate() -> bool: ...
    @overload
    def GetFlipCarImpulse(self) -> float: ...
    @overload
    def GetFlipCarImpulse() -> float: ...
    @overload
    def GetFlipCarTime(self) -> float: ...
    @overload
    def GetFlipCarTime() -> float: ...
    @overload
    def GetFlipCarTorque(self) -> float: ...
    @overload
    def GetFlipCarTorque() -> float: ...
    @overload
    def GetbFlipRight(self) -> int: ...
    @overload
    def GetbFlipRight() -> unsignedlong: ...
    @overload
    def InitFlip(self) -> None: ...
    @overload
    def InitFlip() -> void: ...
    @overload
    def OnCreated(self) -> None: ...
    @overload
    def OnCreated() -> void: ...
    @overload
    def SetFlipCarImpulse(self, newFlipCarImpulse: float) -> None: ...
    @overload
    def SetFlipCarImpulse(float) -> void: ...
    @overload
    def SetFlipCarTime(self, newFlipCarTime: float) -> None: ...
    @overload
    def SetFlipCarTime(float) -> void: ...
    @overload
    def SetFlipCarTorque(self, newFlipCarTorque: float) -> None: ...
    @overload
    def SetFlipCarTorque(float) -> void: ...
    @overload
    def SetbFlipRight(self, newbFlipRight: int) -> None: ...
    @overload
    def SetbFlipRight(unsignedlong) -> void: ...
    def assign(self, rhs: FlipCarComponentWrapper) -> FlipCarComponentWrapper: ...

class GameEditorSaveDataWrapper(SaveDataWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: GameEditorSaveDataWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def GetDownloadedFolderPath(self) -> UnrealStringWrapper: ...
    @overload
    def GetDownloadedFolderPath() -> classUnrealStringWrapper: ...
    @overload
    def GetFavoritesFolderPath(self) -> UnrealStringWrapper: ...
    @overload
    def GetFavoritesFolderPath() -> classUnrealStringWrapper: ...
    @overload
    def GetLoadedSaveName(self) -> UnrealStringWrapper: ...
    @overload
    def GetLoadedSaveName() -> classUnrealStringWrapper: ...
    @overload
    def GetMyTrainingFolderPath(self) -> UnrealStringWrapper: ...
    @overload
    def GetMyTrainingFolderPath() -> classUnrealStringWrapper: ...
    @overload
    def GetPlayerTeamNumber(self) -> int: ...
    @overload
    def GetPlayerTeamNumber() -> int: ...
    @overload
    def GetShotsCompleted(self) -> int: ...
    @overload
    def GetShotsCompleted() -> int: ...
    @overload
    def GetTrainingData(self) -> TrainingEditorSaveDataWrapper: ...
    @overload
    def GetTrainingData() -> classTrainingEditorSaveDataWrapper: ...
    def GetTrainingSaveType(self, bOwned: int, bFavorited: int) -> int: ...
    @overload
    def GetbUnowned(self) -> int: ...
    @overload
    def GetbUnowned() -> unsignedlong: ...
    @overload
    def Init(self) -> None: ...
    @overload
    def Init() -> void: ...
    @overload
    def SetPlayerTeamNumber(self, newPlayerTeamNumber: int) -> None: ...
    @overload
    def SetPlayerTeamNumber(int) -> void: ...
    @overload
    def SetShotsCompleted(self, newShotsCompleted: int) -> None: ...
    @overload
    def SetShotsCompleted(int) -> void: ...
    @overload
    def SetTrainingData(self, newTrainingData: TrainingEditorSaveDataWrapper) -> None: ...
    @overload
    def SetTrainingData(classTrainingEditorSaveDataWrapper) -> void: ...
    @overload
    def SetbUnowned(self, newbUnowned: int) -> None: ...
    @overload
    def SetbUnowned(unsignedlong) -> void: ...
    def assign(self, rhs: GameEditorSaveDataWrapper) -> GameEditorSaveDataWrapper: ...

class GameEditorWrapper(ServerWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: GameEditorWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def CanAddHistory(self) -> bool: ...
    @overload
    def CanAddHistory() -> bool: ...
    @overload
    def CanChangeTeam(self) -> bool: ...
    @overload
    def CanChangeTeam() -> bool: ...
    @overload
    def CanQueSaveReplay(self) -> bool: ...
    @overload
    def CanQueSaveReplay() -> bool: ...
    @overload
    def ChooseTeam(self, TeamIndex: int, Player: PlayerControllerWrapper) -> bool: ...
    @overload
    def ChooseTeam(int, classPlayerControllerWrapper) -> bool: ...
    @overload
    def ClampUndoHistory(self) -> None: ...
    @overload
    def ClampUndoHistory() -> void: ...
    @overload
    def ClearAllHistory(self) -> None: ...
    @overload
    def ClearAllHistory() -> void: ...
    @overload
    def ClearRedoHistory(self) -> None: ...
    @overload
    def ClearRedoHistory() -> void: ...
    @overload
    def CommitRedoRound(self) -> None: ...
    @overload
    def CommitRedoRound() -> void: ...
    @overload
    def CycleActor(self, PC: PlayerControllerWrapper) -> None: ...
    @overload
    def CycleActor(classPlayerControllerWrapper) -> void: ...
    @overload
    def DecreaseTime(self) -> None: ...
    @overload
    def DecreaseTime() -> void: ...
    @overload
    def DeleteAllExistingActorsBasedOffSpawnList(self) -> None: ...
    @overload
    def DeleteAllExistingActorsBasedOffSpawnList() -> void: ...
    @overload
    def DestroyActor(self, A: ActorWrapper, HistoryType: int) -> bool: ...
    @overload
    def DestroyActor(classActorWrapper, unsignedchar) -> bool: ...
    @overload
    def EnableTriggers(self, bEnable: int) -> None: ...
    @overload
    def EnableTriggers(unsignedlong) -> void: ...
    @overload
    def FireBalls(self) -> None: ...
    @overload
    def FireBalls() -> void: ...
    @overload
    def GetActiveRoundNumber(self) -> int: ...
    @overload
    def GetActiveRoundNumber() -> int: ...
    @overload
    def GetFXActor(self) -> FXActorWrapper: ...
    @overload
    def GetFXActor() -> classFXActorWrapper: ...
    @overload
    def GetFXActorArchetype(self) -> FXActorWrapper: ...
    @overload
    def GetFXActorArchetype() -> classFXActorWrapper: ...
    @overload
    def GetHistoryPosition(self) -> int: ...
    @overload
    def GetHistoryPosition() -> int: ...
    @overload
    def GetMaxRounds(self) -> int: ...
    @overload
    def GetMaxRounds() -> int: ...
    @overload
    def GetMaxUndoHistory(self) -> int: ...
    @overload
    def GetMaxUndoHistory() -> int: ...
    @overload
    def GetOtherHistoryType(self, HistoryType: int) -> int: ...
    @overload
    def GetOtherHistoryType(unsignedchar) -> unsignedchar: ...
    @overload
    def GetPlayerTeamNumber(self) -> int: ...
    @overload
    def GetPlayerTeamNumber() -> int: ...
    @overload
    def GrabActor2(self, PC: PlayerControllerWrapper) -> None: ...
    @overload
    def GrabActor2(classPlayerControllerWrapper) -> void: ...
    @overload
    def HandleVehicleSetup(self, Car: CarWrapper) -> None: ...
    @overload
    def HandleVehicleSetup(classCarWrapper) -> void: ...
    @overload
    def HideCarSpawnPoints(self, bHide: int) -> None: ...
    @overload
    def HideCarSpawnPoints(unsignedlong) -> void: ...
    @overload
    def IncreaseTime(self) -> None: ...
    @overload
    def IncreaseTime() -> void: ...
    @overload
    def IncrementSelectedSpawnArchetypeIndex(self, Direction: int, Index: int) -> None: ...
    @overload
    def IncrementSelectedSpawnArchetypeIndex(int, int*) -> void: ...
    @overload
    def InitFX(self) -> None: ...
    @overload
    def InitFX() -> void: ...
    @overload
    def Interact(self) -> None: ...
    @overload
    def Interact() -> void: ...
    @overload
    def IsInEditorMode(self) -> bool: ...
    @overload
    def IsInEditorMode() -> bool: ...
    @overload
    def NextRound(self) -> None: ...
    @overload
    def NextRound() -> void: ...
    @overload
    def OnPlayerRestarted(self, PlayerCar: CarWrapper) -> None: ...
    @overload
    def OnPlayerRestarted(classCarWrapper) -> void: ...
    @overload
    def OnSpawnedArchetype(self, SpawnedActor: ActorWrapper, HistoryType: int) -> None: ...
    @overload
    def OnSpawnedArchetype(classActorWrapper, unsignedchar) -> void: ...
    @overload
    def OnVehicleSetup(self, Car: CarWrapper) -> None: ...
    @overload
    def OnVehicleSetup(classCarWrapper) -> void: ...
    @overload
    def PrevRound(self) -> None: ...
    @overload
    def PrevRound() -> void: ...
    @overload
    def Redo2(self, PC: PlayerControllerWrapper) -> None: ...
    @overload
    def Redo2(classPlayerControllerWrapper) -> void: ...
    @overload
    def ReleaseActor2(self, PC: PlayerControllerWrapper) -> None: ...
    @overload
    def ReleaseActor2(classPlayerControllerWrapper) -> void: ...
    @overload
    def ReleaseGrabbedActor(self, PC: PlayerControllerWrapper) -> None: ...
    @overload
    def ReleaseGrabbedActor(classPlayerControllerWrapper) -> void: ...
    @overload
    def ReleaseRotateActor(self, PC: PlayerControllerWrapper) -> None: ...
    @overload
    def ReleaseRotateActor(classPlayerControllerWrapper) -> void: ...
    @overload
    def RemoveAllPointsFromScore(self, TeamIndex: int) -> None: ...
    @overload
    def RemoveAllPointsFromScore(int) -> void: ...
    def RemovePointsFromScore(self, PointsToRemove: int, TeamIndex: int) -> None: ...
    @overload
    def ResetBallsToDefaultPosition(self) -> None: ...
    @overload
    def ResetBallsToDefaultPosition() -> void: ...
    @overload
    def ResetRound(self) -> None: ...
    @overload
    def ResetRound() -> void: ...
    @overload
    def ResetSpawnLocations(self) -> None: ...
    @overload
    def ResetSpawnLocations() -> void: ...
    @overload
    def RotateActor(self, PC: PlayerControllerWrapper, bSnapOrientation: int) -> None: ...
    @overload
    def RotateActor(classPlayerControllerWrapper, unsignedlong) -> void: ...
    @overload
    def RoundContainsASwitch(self) -> bool: ...
    @overload
    def RoundContainsASwitch() -> bool: ...
    @overload
    def Save2(self) -> None: ...
    @overload
    def Save2() -> void: ...
    @overload
    def SetActiveRoundNumber(self, newActiveRoundNumber: int) -> None: ...
    @overload
    def SetActiveRoundNumber(int) -> void: ...
    @overload
    def SetFXActor(self, newFXActor: FXActorWrapper) -> None: ...
    @overload
    def SetFXActor(classFXActorWrapper) -> void: ...
    @overload
    def SetFXActorArchetype(self, newFXActorArchetype: FXActorWrapper) -> None: ...
    @overload
    def SetFXActorArchetype(classFXActorWrapper) -> void: ...
    @overload
    def SetHistoryPosition(self, newHistoryPosition: int) -> None: ...
    @overload
    def SetHistoryPosition(int) -> void: ...
    @overload
    def SetMaxRounds(self, newMaxRounds: int) -> None: ...
    @overload
    def SetMaxRounds(int) -> void: ...
    @overload
    def SetMaxUndoHistory(self, newMaxUndoHistory: int) -> None: ...
    @overload
    def SetMaxUndoHistory(int) -> void: ...
    @overload
    def ShouldResetBalls(self) -> bool: ...
    @overload
    def ShouldResetBalls() -> bool: ...
    @overload
    def ShouldUpdateCrosshair(self) -> bool: ...
    @overload
    def ShouldUpdateCrosshair() -> bool: ...
    @overload
    def SpawnArchetype(self, Controller: PlayerControllerWrapper, ArchetypeIndex: int) -> None: ...
    @overload
    def SpawnArchetype(classPlayerControllerWrapper, int) -> void: ...
    @overload
    def StartEditing(self) -> None: ...
    @overload
    def StartEditing() -> void: ...
    @overload
    def StopEditing(self, PC: PlayerControllerWrapper) -> None: ...
    @overload
    def StopEditing(classPlayerControllerWrapper) -> void: ...
    @overload
    def ToggleEditorRound(self) -> None: ...
    @overload
    def ToggleEditorRound() -> void: ...
    @overload
    def ToggleGrabActor(self, PC: PlayerControllerWrapper) -> None: ...
    @overload
    def ToggleGrabActor(classPlayerControllerWrapper) -> void: ...
    @overload
    def ToggleReleaseActor(self, PC: PlayerControllerWrapper) -> None: ...
    @overload
    def ToggleReleaseActor(classPlayerControllerWrapper) -> void: ...
    @overload
    def ToggleRotateActor(self, PC: PlayerControllerWrapper) -> None: ...
    @overload
    def ToggleRotateActor(classPlayerControllerWrapper) -> void: ...
    @overload
    def Undo2(self, PC: PlayerControllerWrapper) -> None: ...
    @overload
    def Undo2(classPlayerControllerWrapper) -> void: ...
    def assign(self, rhs: GameEditorWrapper) -> GameEditorWrapper: ...
    @overload
    def eventPostBeginPlay(self) -> None: ...
    @overload
    def eventPostBeginPlay() -> void: ...

class GameEventWrapper(ActorWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: GameEventWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def AddCar(self, Car: CarWrapper) -> None: ...
    @overload
    def AddCar(classCarWrapper) -> void: ...
    @overload
    def AddForfeitInitiator(self, PlayerID: SteamID) -> None: ...
    @overload
    def AddForfeitInitiator(structSteamID&) -> void: ...
    @overload
    def AddLocalPlayer(self, Player: PlayerControllerWrapper) -> None: ...
    @overload
    def AddLocalPlayer(classPlayerControllerWrapper) -> void: ...
    @overload
    def AddPRI(self, PRI: PriWrapper) -> None: ...
    @overload
    def AddPRI(classPriWrapper) -> void: ...
    @overload
    def AddPlayerChatMessage(self, PlayerID: SteamID, ChatChannel: int, Team: TeamInfoWrapper, Message: str) -> None: ...
    @overload
    def AddPlayerChatMessage(structSteamID&, unsignedchar, classTeamInfoWrapper, std) -> void: ...
    @overload
    def AllPlayersSelectedTeam(self) -> bool: ...
    @overload
    def AllPlayersSelectedTeam() -> bool: ...
    @overload
    def AllowReadyUp2(self) -> None: ...
    @overload
    def AllowReadyUp2() -> void: ...
    @overload
    def AllowShutdown(self) -> bool: ...
    @overload
    def AllowShutdown() -> bool: ...
    @overload
    def AllowSplitScreenPlayer(self) -> bool: ...
    @overload
    def AllowSplitScreenPlayer() -> bool: ...
    @overload
    def AutoReadyPlayers(self) -> None: ...
    @overload
    def AutoReadyPlayers() -> void: ...
    @overload
    def BanPlayerID(self, PlayerID: SteamID) -> None: ...
    @overload
    def BanPlayerID(structSteamID&) -> void: ...
    @overload
    def BroadcastCountdownMessage(self, Seconds: int) -> None: ...
    @overload
    def BroadcastCountdownMessage(int) -> void: ...
    @overload
    def BroadcastGoMessage(self) -> None: ...
    @overload
    def BroadcastGoMessage() -> void: ...
    @overload
    def CanQueSaveReplay(self) -> bool: ...
    @overload
    def CanQueSaveReplay() -> bool: ...
    @overload
    def CanUseBallCam(self) -> bool: ...
    @overload
    def CanUseBallCam() -> bool: ...
    @overload
    def CheckChatBanned(self, PC: PlayerControllerWrapper) -> None: ...
    @overload
    def CheckChatBanned(classPlayerControllerWrapper) -> void: ...
    @overload
    def CheckInitiatedForfeit(self, PRI: PriWrapper) -> None: ...
    @overload
    def CheckInitiatedForfeit(classPriWrapper) -> void: ...
    @overload
    def CheckPlayersReady2(self) -> None: ...
    @overload
    def CheckPlayersReady2() -> void: ...
    @overload
    def ClearGameScoreFromCustomSettings(self) -> None: ...
    @overload
    def ClearGameScoreFromCustomSettings() -> void: ...
    @overload
    def ClearRespawnList(self) -> None: ...
    @overload
    def ClearRespawnList() -> void: ...
    @overload
    def ConditionalStartMatch(self) -> None: ...
    @overload
    def ConditionalStartMatch() -> void: ...
    @overload
    def ConditionalStartSpectatorMatch(self) -> None: ...
    @overload
    def ConditionalStartSpectatorMatch() -> void: ...
    @overload
    def CreateMatchType(self, Options: str) -> None: ...
    @overload
    def CreateMatchType(std) -> void: ...
    @overload
    def EventPlayerResetTraining(self, GameEvent: GameEventWrapper) -> None: ...
    @overload
    def EventPlayerResetTraining(classGameEventWrapper) -> void: ...
    @overload
    def FindBotReplacement(self, PRI: PriWrapper) -> bool: ...
    @overload
    def FindBotReplacement(classPriWrapper) -> bool: ...
    @overload
    def FindPCForUniqueID(self, PlayerID: SteamID) -> PlayerControllerWrapper: ...
    @overload
    def FindPCForUniqueID(structSteamID&) -> classPlayerControllerWrapper: ...
    @overload
    def FindPlayerPRI(self, UniqueId: SteamID) -> PriWrapper: ...
    @overload
    def FindPlayerPRI(structSteamID&) -> classPriWrapper: ...
    @overload
    def ForceMatchStart(self) -> None: ...
    @overload
    def ForceMatchStart() -> void: ...
    @overload
    def GetActivator(self) -> PlayerControllerWrapper: ...
    @overload
    def GetActivator() -> classPlayerControllerWrapper: ...
    @overload
    def GetActivatorCar(self) -> CarWrapper: ...
    @overload
    def GetActivatorCar() -> classCarWrapper: ...
    @overload
    def GetBannedPlayers(self) -> StructArrayWrapper<SteamID>: ...
    @overload
    def GetBannedPlayers() -> classStructArrayWrapper<structSteamID>: ...
    @overload
    def GetBotBoostThreshold_vsAI(self) -> float: ...
    @overload
    def GetBotBoostThreshold_vsAI() -> float: ...
    @overload
    def GetBotSkill(self) -> float: ...
    @overload
    def GetBotSkill() -> float: ...
    @overload
    def GetCarArchetype(self) -> CarWrapper: ...
    @overload
    def GetCarArchetype() -> classCarWrapper: ...
    @overload
    def GetCars(self) -> ArrayWrapper_CarWrapper_t: ...
    @overload
    def GetCars() -> classArrayWrapper<classCarWrapper>: ...
    @overload
    def GetCountdownTime(self) -> int: ...
    @overload
    def GetCountdownTime() -> int: ...
    @overload
    def GetFinishTime(self) -> int: ...
    @overload
    def GetFinishTime() -> int: ...
    @overload
    def GetForfeitInitiatorIDs(self) -> StructArrayWrapper<SteamID>: ...
    @overload
    def GetForfeitInitiatorIDs() -> classStructArrayWrapper<structSteamID>: ...
    @overload
    def GetGameOwner(self) -> PriWrapper: ...
    @overload
    def GetGameOwner() -> classPriWrapper: ...
    @overload
    def GetGameStateTimeRemaining(self) -> int: ...
    @overload
    def GetGameStateTimeRemaining() -> int: ...
    @overload
    def GetLocalPlayers(self) -> ArrayWrapper_PlayerControllerWrapper_t: ...
    @overload
    def GetLocalPlayers() -> classArrayWrapper<classPlayerControllerWrapper>: ...
    @overload
    def GetLocalPrimaryPlayer(self) -> PlayerControllerWrapper: ...
    @overload
    def GetLocalPrimaryPlayer() -> classPlayerControllerWrapper: ...
    @overload
    def GetMatchTimeDilation(self) -> float: ...
    @overload
    def GetMatchTimeDilation() -> float: ...
    @overload
    def GetMaxHumans(self) -> int: ...
    @overload
    def GetMaxHumans() -> int: ...
    @overload
    def GetMaxPlayers(self) -> int: ...
    @overload
    def GetMaxPlayers() -> int: ...
    @overload
    def GetMinPlayers(self) -> int: ...
    @overload
    def GetMinPlayers() -> int: ...
    @overload
    def GetNumHumans(self) -> int: ...
    @overload
    def GetNumHumans() -> int: ...
    @overload
    def GetPRIs(self) -> ArrayWrapper_PriWrapper_t: ...
    @overload
    def GetPRIs() -> classArrayWrapper<classPriWrapper>: ...
    @overload
    def GetPlaylist(self) -> GameSettingPlaylistWrapper: ...
    @overload
    def GetPlaylist() -> classGameSettingPlaylistWrapper: ...
    @overload
    def GetRealDeltaTime(self, ElapsedTime: float) -> float: ...
    @overload
    def GetRealDeltaTime(float) -> float: ...
    @overload
    def GetReplicatedGameStateTimeRemaining(self) -> int: ...
    @overload
    def GetReplicatedGameStateTimeRemaining() -> int: ...
    @overload
    def GetReplicatedRoundCountDownNumber(self) -> int: ...
    @overload
    def GetReplicatedRoundCountDownNumber() -> int: ...
    @overload
    def GetReplicatedStateIndex(self) -> int: ...
    @overload
    def GetReplicatedStateIndex() -> unsignedchar: ...
    @overload
    def GetRespawnTime(self) -> int: ...
    @overload
    def GetRespawnTime() -> int: ...
    @overload
    def GetRespawnTime2(self) -> int: ...
    @overload
    def GetRespawnTime2() -> int: ...
    @overload
    def GetRichPresenceString(self) -> UnrealStringWrapper: ...
    @overload
    def GetRichPresenceString() -> classUnrealStringWrapper: ...
    @overload
    def GetSpawnPoints(self) -> ArrayWrapper_ActorWrapper_t: ...
    @overload
    def GetSpawnPoints() -> classArrayWrapper<classActorWrapper>: ...
    @overload
    def GetStartPointIndex(self) -> int: ...
    @overload
    def GetStartPointIndex() -> int: ...
    @overload
    def GetbAllowQueueSaveReplay(self) -> int: ...
    @overload
    def GetbAllowQueueSaveReplay() -> unsignedlong: ...
    @overload
    def GetbAllowReadyUp(self) -> int: ...
    @overload
    def GetbAllowReadyUp() -> unsignedlong: ...
    @overload
    def GetbAwardAchievements(self) -> int: ...
    @overload
    def GetbAwardAchievements() -> unsignedlong: ...
    @overload
    def GetbCanVoteToForfeit(self) -> int: ...
    @overload
    def GetbCanVoteToForfeit() -> unsignedlong: ...
    @overload
    def GetbCountdownMessagesDisabled(self) -> int: ...
    @overload
    def GetbCountdownMessagesDisabled() -> unsignedlong: ...
    @overload
    def GetbDisableAimAssist(self) -> int: ...
    @overload
    def GetbDisableAimAssist() -> unsignedlong: ...
    @overload
    def GetbFillWithAI(self) -> int: ...
    @overload
    def GetbFillWithAI() -> unsignedlong: ...
    @overload
    def GetbHasLeaveMatchPenalty(self) -> int: ...
    @overload
    def GetbHasLeaveMatchPenalty() -> unsignedlong: ...
    @overload
    def GetbMultiplayer(self) -> int: ...
    @overload
    def GetbMultiplayer() -> unsignedlong: ...
    @overload
    def GetbRandomizedBotLoadouts(self) -> int: ...
    @overload
    def GetbRandomizedBotLoadouts() -> unsignedlong: ...
    @overload
    def GetbRestartingMatch(self) -> int: ...
    @overload
    def GetbRestartingMatch() -> unsignedlong: ...
    @overload
    def HandleFinished(self, GameEvent: GameEventWrapper) -> None: ...
    @overload
    def HandleFinished(classGameEventWrapper) -> void: ...
    @overload
    def HandleNextGame(self) -> bool: ...
    @overload
    def HandleNextGame() -> bool: ...
    @overload
    def HandlePlayerRemoved(self, GameEvent: GameEventWrapper, PRI: PriWrapper) -> None: ...
    @overload
    def HandlePlayerRemoved(classGameEventWrapper, classPriWrapper) -> void: ...
    @overload
    def HasPlayerNamed(self, PlayerName: str) -> bool: ...
    @overload
    def HasPlayerNamed(std) -> bool: ...
    @overload
    def Init2(self, InActivator: PlayerControllerWrapper) -> None: ...
    @overload
    def Init2(classPlayerControllerWrapper) -> void: ...
    @overload
    def InitBotSkill(self) -> None: ...
    @overload
    def InitBotSkill() -> void: ...
    @overload
    def InitCountDown(self) -> None: ...
    @overload
    def InitCountDown() -> void: ...
    @overload
    def InitMutators(self) -> None: ...
    @overload
    def InitMutators() -> void: ...
    @overload
    def IsFinished(self) -> bool: ...
    @overload
    def IsFinished() -> bool: ...
    @overload
    def IsOnlineMultiplayer(self) -> bool: ...
    @overload
    def IsOnlineMultiplayer() -> bool: ...
    @overload
    def IsPlayingLan(self) -> bool: ...
    @overload
    def IsPlayingLan() -> bool: ...
    @overload
    def IsPlayingOffline(self) -> bool: ...
    @overload
    def IsPlayingOffline() -> bool: ...
    @overload
    def IsPlayingPrivate(self) -> bool: ...
    @overload
    def IsPlayingPrivate() -> bool: ...
    @overload
    def IsPlayingPublic(self) -> bool: ...
    @overload
    def IsPlayingPublic() -> bool: ...
    @overload
    def IsPlayingTraining(self) -> bool: ...
    @overload
    def IsPlayingTraining() -> bool: ...
    @overload
    def MoveToGround(self, Mover: ActorWrapper, HeightCheck: float) -> bool: ...
    @overload
    def MoveToGround(classActorWrapper, float) -> bool: ...
    @overload
    def OnAllPlayersReady(self) -> None: ...
    @overload
    def OnAllPlayersReady() -> void: ...
    @overload
    def OnCanVoteForfeitChanged(self) -> None: ...
    @overload
    def OnCanVoteForfeitChanged() -> void: ...
    @overload
    def OnCarSpawned(self, NewCar: CarWrapper) -> None: ...
    @overload
    def OnCarSpawned(classCarWrapper) -> void: ...
    @overload
    def OnFinished(self) -> None: ...
    @overload
    def OnFinished() -> void: ...
    @overload
    def OnGameStateChanged(self) -> None: ...
    @overload
    def OnGameStateChanged() -> void: ...
    @overload
    def OnGameStateTimeLapsed(self) -> None: ...
    @overload
    def OnGameStateTimeLapsed() -> void: ...
    @overload
    def OnGameStateTimeUpdated(self) -> None: ...
    @overload
    def OnGameStateTimeUpdated() -> void: ...
    @overload
    def OnMatchSettingsChanged(self) -> None: ...
    @overload
    def OnMatchSettingsChanged() -> void: ...
    @overload
    def OnPenaltyChanged(self) -> None: ...
    @overload
    def OnPenaltyChanged() -> void: ...
    @overload
    def OnPlayerRestarted(self, PlayerCar: CarWrapper) -> None: ...
    @overload
    def OnPlayerRestarted(classCarWrapper) -> void: ...
    @overload
    def PlayerResetTraining(self) -> None: ...
    @overload
    def PlayerResetTraining() -> void: ...
    @overload
    def RandomizeBots(self) -> None: ...
    @overload
    def RandomizeBots() -> void: ...
    @overload
    def RandomizeSpawnPoints(self) -> None: ...
    @overload
    def RandomizeSpawnPoints() -> void: ...
    @overload
    def RemoveCar(self, Car: CarWrapper) -> None: ...
    @overload
    def RemoveCar(classCarWrapper) -> void: ...
    @overload
    def RemoveLocalPlayer(self, Player: PlayerControllerWrapper) -> None: ...
    @overload
    def RemoveLocalPlayer(classPlayerControllerWrapper) -> void: ...
    @overload
    def RemovePRI(self, PRI: PriWrapper) -> None: ...
    @overload
    def RemovePRI(classPriWrapper) -> void: ...
    @overload
    def ReplaceBotsWithAwaitingPlayers(self) -> None: ...
    @overload
    def ReplaceBotsWithAwaitingPlayers() -> void: ...
    @overload
    def RestartPlayers(self) -> None: ...
    @overload
    def RestartPlayers() -> void: ...
    @overload
    def SaveLocalPlayerStats(self) -> None: ...
    @overload
    def SaveLocalPlayerStats() -> void: ...
    @overload
    def SendCountdownMessage(self, Seconds: int, Player: PlayerControllerWrapper) -> None: ...
    @overload
    def SendCountdownMessage(int, classPlayerControllerWrapper) -> void: ...
    @overload
    def SendGoMessage(self, Player: PlayerControllerWrapper) -> None: ...
    @overload
    def SendGoMessage(classPlayerControllerWrapper) -> void: ...
    @overload
    def SetActivator(self, newActivator: PlayerControllerWrapper) -> None: ...
    @overload
    def SetActivator(classPlayerControllerWrapper) -> void: ...
    @overload
    def SetActivatorCar(self, newActivatorCar: CarWrapper) -> None: ...
    @overload
    def SetActivatorCar(classCarWrapper) -> void: ...
    @overload
    def SetAllDriving(self, bDriving: int) -> None: ...
    @overload
    def SetAllDriving(unsignedlong) -> void: ...
    @overload
    def SetAllowReadyUp2(self, bAllow: int) -> None: ...
    @overload
    def SetAllowReadyUp2(unsignedlong) -> void: ...
    @overload
    def SetBotBoostThreshold_vsAI(self, newBotBoostThreshold_vsAI: float) -> None: ...
    @overload
    def SetBotBoostThreshold_vsAI(float) -> void: ...
    @overload
    def SetBotSkill(self, newBotSkill: float) -> None: ...
    @overload
    def SetBotSkill(float) -> void: ...
    @overload
    def SetBotSkill2(self, NewSkill: float) -> None: ...
    @overload
    def SetBotSkill2(float) -> void: ...
    @overload
    def SetCarArchetype(self, newCarArchetype: CarWrapper) -> None: ...
    @overload
    def SetCarArchetype(classCarWrapper) -> void: ...
    @overload
    def SetCountdownTime(self, newCountdownTime: int) -> None: ...
    @overload
    def SetCountdownTime(int) -> void: ...
    @overload
    def SetFinishTime(self, newFinishTime: int) -> None: ...
    @overload
    def SetFinishTime(int) -> void: ...
    @overload
    def SetGameOwner(self, newGameOwner: PriWrapper) -> None: ...
    @overload
    def SetGameOwner(classPriWrapper) -> void: ...
    @overload
    def SetGameOwner2(self, NewOwner: PriWrapper) -> None: ...
    @overload
    def SetGameOwner2(classPriWrapper) -> void: ...
    @overload
    def SetGameStateTime2(self, StateTime: int) -> None: ...
    @overload
    def SetGameStateTime2(int) -> void: ...
    @overload
    def SetGameStateTimeRemaining(self, newGameStateTimeRemaining: int) -> None: ...
    @overload
    def SetGameStateTimeRemaining(int) -> void: ...
    @overload
    def SetGameStateTimeRemaining2(self, StateTime: int, bFromReplication: int) -> None: ...
    @overload
    def SetGameStateTimeRemaining2(int, unsignedlong) -> void: ...
    @overload
    def SetMatchTimeDilation(self, newMatchTimeDilation: float) -> None: ...
    @overload
    def SetMatchTimeDilation(float) -> void: ...
    @overload
    def SetMaxPlayers(self, newMaxPlayers: int) -> None: ...
    @overload
    def SetMaxPlayers(int) -> void: ...
    @overload
    def SetMaxPlayers2(self, InMaxPlayers: int) -> None: ...
    @overload
    def SetMaxPlayers2(int) -> void: ...
    @overload
    def SetMinPlayers(self, newMinPlayers: int) -> None: ...
    @overload
    def SetMinPlayers(int) -> void: ...
    @overload
    def SetReplicatedGameStateTimeRemaining(self, newReplicatedGameStateTimeRemaining: int) -> None: ...
    @overload
    def SetReplicatedGameStateTimeRemaining(int) -> void: ...
    @overload
    def SetReplicatedRoundCountDownNumber(self, newReplicatedRoundCountDownNumber: int) -> None: ...
    @overload
    def SetReplicatedRoundCountDownNumber(int) -> void: ...
    @overload
    def SetReplicatedStateIndex(self, newReplicatedStateIndex: int) -> None: ...
    @overload
    def SetReplicatedStateIndex(unsignedchar) -> void: ...
    @overload
    def SetRespawnTime(self, newRespawnTime: int) -> None: ...
    @overload
    def SetRespawnTime(int) -> void: ...
    @overload
    def SetRestartingMatch(self, bRestart: int) -> None: ...
    @overload
    def SetRestartingMatch(unsignedlong) -> void: ...
    @overload
    def SetStartPointIndex(self, newStartPointIndex: int) -> None: ...
    @overload
    def SetStartPointIndex(int) -> void: ...
    @overload
    def SetTimeDilation(self, NewTimeDilation: float) -> None: ...
    @overload
    def SetTimeDilation(float) -> void: ...
    @overload
    def SetbAllowQueueSaveReplay(self, newbAllowQueueSaveReplay: int) -> None: ...
    @overload
    def SetbAllowQueueSaveReplay(unsignedlong) -> void: ...
    @overload
    def SetbAllowReadyUp(self, newbAllowReadyUp: int) -> None: ...
    @overload
    def SetbAllowReadyUp(unsignedlong) -> void: ...
    @overload
    def SetbAwardAchievements(self, newbAwardAchievements: int) -> None: ...
    @overload
    def SetbAwardAchievements(unsignedlong) -> void: ...
    @overload
    def SetbCanVoteToForfeit(self, newbCanVoteToForfeit: int) -> None: ...
    @overload
    def SetbCanVoteToForfeit(unsignedlong) -> void: ...
    @overload
    def SetbCountdownMessagesDisabled(self, newbCountdownMessagesDisabled: int) -> None: ...
    @overload
    def SetbCountdownMessagesDisabled(unsignedlong) -> void: ...
    @overload
    def SetbDisableAimAssist(self, newbDisableAimAssist: int) -> None: ...
    @overload
    def SetbDisableAimAssist(unsignedlong) -> void: ...
    @overload
    def SetbFillWithAI(self, newbFillWithAI: int) -> None: ...
    @overload
    def SetbFillWithAI(unsignedlong) -> void: ...
    @overload
    def SetbHasLeaveMatchPenalty(self, newbHasLeaveMatchPenalty: int) -> None: ...
    @overload
    def SetbHasLeaveMatchPenalty(unsignedlong) -> void: ...
    @overload
    def SetbMultiplayer(self, newbMultiplayer: int) -> None: ...
    @overload
    def SetbMultiplayer(unsignedlong) -> void: ...
    @overload
    def SetbRandomizedBotLoadouts(self, newbRandomizedBotLoadouts: int) -> None: ...
    @overload
    def SetbRandomizedBotLoadouts(unsignedlong) -> void: ...
    @overload
    def SetbRestartingMatch(self, newbRestartingMatch: int) -> None: ...
    @overload
    def SetbRestartingMatch(unsignedlong) -> void: ...
    @overload
    def ShouldAllowVoteToForfeit(self) -> bool: ...
    @overload
    def ShouldAllowVoteToForfeit() -> bool: ...
    @overload
    def ShouldAutoReadyUp(self, PRI: PriWrapper) -> bool: ...
    @overload
    def ShouldAutoReadyUp(classPriWrapper) -> bool: ...
    @overload
    def ShouldBeFullScreen(self) -> bool: ...
    @overload
    def ShouldBeFullScreen() -> bool: ...
    @overload
    def ShouldHaveLeaveMatchPenalty(self) -> bool: ...
    @overload
    def ShouldHaveLeaveMatchPenalty() -> bool: ...
    @overload
    def ShouldShowBallIndicator(self) -> bool: ...
    @overload
    def ShouldShowBallIndicator() -> bool: ...
    @overload
    def SpotIsEncroached(self, Spot: Vector) -> bool: ...
    @overload
    def SpotIsEncroached(structVector&) -> bool: ...
    @overload
    def StartCountDown(self) -> None: ...
    @overload
    def StartCountDown() -> void: ...
    @overload
    def StartCountdownTimer(self) -> None: ...
    @overload
    def StartCountdownTimer() -> void: ...
    @overload
    def StartInitialCountDown(self) -> None: ...
    @overload
    def StartInitialCountDown() -> void: ...
    @overload
    def SuppressModalDialogs(self) -> bool: ...
    @overload
    def SuppressModalDialogs() -> bool: ...
    @overload
    def TeleportCar(self, PlayerCar: CarWrapper) -> None: ...
    @overload
    def TeleportCar(classCarWrapper) -> void: ...
    @overload
    def TickRespawnTime(self, DeltaTime: float) -> None: ...
    @overload
    def TickRespawnTime(float) -> void: ...
    @overload
    def TimerUpdateBotCount(self) -> None: ...
    @overload
    def TimerUpdateBotCount() -> void: ...
    @overload
    def UpdateBotCount(self) -> None: ...
    @overload
    def UpdateBotCount() -> void: ...
    @overload
    def UpdateCanVoteToForfeit(self) -> None: ...
    @overload
    def UpdateCanVoteToForfeit() -> void: ...
    @overload
    def UpdateGameOwner(self) -> None: ...
    @overload
    def UpdateGameOwner() -> void: ...
    @overload
    def UpdateGameStateTime(self) -> None: ...
    @overload
    def UpdateGameStateTime() -> void: ...
    @overload
    def UpdateLeaveMatchPenalty(self) -> None: ...
    @overload
    def UpdateLeaveMatchPenalty() -> void: ...
    @overload
    def __GameEvent_TA__CheckForBannedPlayers(self, PRI: PriWrapper) -> SteamID: ...
    @overload
    def __GameEvent_TA__CheckForBannedPlayers(classPriWrapper) -> structSteamID: ...
    @overload
    def __GameEvent_TA__CheckPlayersReady(self, P: PriWrapper) -> bool: ...
    @overload
    def __GameEvent_TA__CheckPlayersReady(classPriWrapper) -> bool: ...
    @overload
    def __GameEvent_TA__SetAllowReadyUp(self, P: PriWrapper) -> None: ...
    @overload
    def __GameEvent_TA__SetAllowReadyUp(classPriWrapper) -> void: ...
    @overload
    def __Pylon__ChangeNotifyFunc(self) -> None: ...
    @overload
    def __Pylon__ChangeNotifyFunc() -> void: ...
    def assign(self, rhs: GameEventWrapper) -> GameEventWrapper: ...
    @overload
    def eventInitGame(self, Options: str) -> None: ...
    @overload
    def eventInitGame(std) -> void: ...

class GameSettingPlaylistWrapper(ObjectWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: GameSettingPlaylistWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def GetDescription(self) -> UnrealStringWrapper: ...
    @overload
    def GetDescription() -> classUnrealStringWrapper: ...
    @overload
    def GetPlayerCount(self) -> int: ...
    @overload
    def GetPlayerCount() -> int: ...
    @overload
    def GetPlaylistId(self) -> int: ...
    @overload
    def GetPlaylistId() -> int: ...
    @overload
    def GetServerCommand(self) -> UnrealStringWrapper: ...
    @overload
    def GetServerCommand() -> classUnrealStringWrapper: ...
    @overload
    def GetTitle(self) -> UnrealStringWrapper: ...
    @overload
    def GetTitle() -> classUnrealStringWrapper: ...
    @overload
    def GetbAllowClubs(self) -> int: ...
    @overload
    def GetbAllowClubs() -> unsignedlong: ...
    @overload
    def GetbAllowForfeit(self) -> int: ...
    @overload
    def GetbAllowForfeit() -> unsignedlong: ...
    @overload
    def GetbApplyQuitPenalty(self) -> int: ...
    @overload
    def GetbApplyQuitPenalty() -> unsignedlong: ...
    @overload
    def GetbDisableRankedReconnect(self) -> int: ...
    @overload
    def GetbDisableRankedReconnect() -> unsignedlong: ...
    @overload
    def GetbIgnoreAssignTeams(self) -> int: ...
    @overload
    def GetbIgnoreAssignTeams() -> unsignedlong: ...
    @overload
    def GetbKickOnMigrate(self) -> int: ...
    @overload
    def GetbKickOnMigrate() -> unsignedlong: ...
    @overload
    def GetbNew(self) -> int: ...
    @overload
    def GetbNew() -> unsignedlong: ...
    @overload
    def GetbPlayersVSBots(self) -> int: ...
    @overload
    def GetbPlayersVSBots() -> unsignedlong: ...
    @overload
    def GetbRanked(self) -> int: ...
    @overload
    def GetbRanked() -> unsignedlong: ...
    @overload
    def GetbSolo(self) -> int: ...
    @overload
    def GetbSolo() -> unsignedlong: ...
    @overload
    def GetbStandard(self) -> int: ...
    @overload
    def GetbStandard() -> unsignedlong: ...
    @overload
    def IsLanMatch(self) -> bool: ...
    @overload
    def IsLanMatch() -> bool: ...
    @overload
    def IsPrivateMatch(self) -> bool: ...
    @overload
    def IsPrivateMatch() -> bool: ...
    @overload
    def IsValid2(self) -> bool: ...
    @overload
    def IsValid2() -> bool: ...
    @overload
    def IsValidID(self, InPlaylistID: int) -> bool: ...
    @overload
    def IsValidID(int) -> bool: ...
    @overload
    def SetPlayerCount(self, newPlayerCount: int) -> None: ...
    @overload
    def SetPlayerCount(int) -> void: ...
    @overload
    def SetPlaylistId(self, newPlaylistId: int) -> None: ...
    @overload
    def SetPlaylistId(int) -> void: ...
    @overload
    def SetbAllowClubs(self, newbAllowClubs: int) -> None: ...
    @overload
    def SetbAllowClubs(unsignedlong) -> void: ...
    @overload
    def SetbAllowForfeit(self, newbAllowForfeit: int) -> None: ...
    @overload
    def SetbAllowForfeit(unsignedlong) -> void: ...
    @overload
    def SetbApplyQuitPenalty(self, newbApplyQuitPenalty: int) -> None: ...
    @overload
    def SetbApplyQuitPenalty(unsignedlong) -> void: ...
    @overload
    def SetbDisableRankedReconnect(self, newbDisableRankedReconnect: int) -> None: ...
    @overload
    def SetbDisableRankedReconnect(unsignedlong) -> void: ...
    @overload
    def SetbIgnoreAssignTeams(self, newbIgnoreAssignTeams: int) -> None: ...
    @overload
    def SetbIgnoreAssignTeams(unsignedlong) -> void: ...
    @overload
    def SetbKickOnMigrate(self, newbKickOnMigrate: int) -> None: ...
    @overload
    def SetbKickOnMigrate(unsignedlong) -> void: ...
    @overload
    def SetbNew(self, newbNew: int) -> None: ...
    @overload
    def SetbNew(unsignedlong) -> void: ...
    @overload
    def SetbPlayersVSBots(self, newbPlayersVSBots: int) -> None: ...
    @overload
    def SetbPlayersVSBots(unsignedlong) -> void: ...
    @overload
    def SetbRanked(self, newbRanked: int) -> None: ...
    @overload
    def SetbRanked(unsignedlong) -> void: ...
    @overload
    def SetbSolo(self, newbSolo: int) -> None: ...
    @overload
    def SetbSolo(unsignedlong) -> void: ...
    @overload
    def SetbStandard(self, newbStandard: int) -> None: ...
    @overload
    def SetbStandard(unsignedlong) -> void: ...
    @overload
    def ShouldUpdateSkills(self) -> bool: ...
    @overload
    def ShouldUpdateSkills() -> bool: ...
    def assign(self, rhs: GameSettingPlaylistWrapper) -> GameSettingPlaylistWrapper: ...

class GameWrapper:
    @overload
    def __init__(self, mem: int, pluginType: int, idx) -> None: ...
    @overload
    def __init__(self, arg0: GameWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def Execute(self, theLambda: Callable[[pybakke.GameWrapper],None]) -> None: ...
    @overload
    def Execute(classstd) -> void: ...
    @overload
    def ExecuteUnrealCommand(self, command: str) -> None: ...
    @overload
    def ExecuteUnrealCommand(std) -> void: ...
    @overload
    def GetCamera(self) -> CameraWrapper: ...
    @overload
    def GetCamera() -> classCameraWrapper: ...
    @overload
    def GetEngine(self) -> EngineTAWrapper: ...
    @overload
    def GetEngine() -> classEngineTAWrapper: ...
    @overload
    def GetFNameByIndex(self, index: int) -> str: ...
    @overload
    def GetFNameByIndex(int) -> std::string: ...
    @overload
    def GetFNameIndexByString(self, name: str) -> int: ...
    @overload
    def GetFNameIndexByString(std) -> int: ...
    @overload
    def GetGameEventAsReplay(self) -> ReplayServerWrapper: ...
    @overload
    def GetGameEventAsReplay() -> classReplayServerWrapper: ...
    @overload
    def GetGameEventAsServer(self) -> ServerWrapper: ...
    @overload
    def GetGameEventAsServer() -> classServerWrapper: ...
    @overload
    def GetLocalCar(self) -> CarWrapper: ...
    @overload
    def GetLocalCar() -> classCarWrapper: ...
    @overload
    def GetMMRWrapper(self) -> MMRWrapper: ...
    @overload
    def GetMMRWrapper() -> classMMRWrapper: ...
    @overload
    def GetOnlineGame(self) -> ServerWrapper: ...
    @overload
    def GetOnlineGame() -> classServerWrapper: ...
    @overload
    def GetRandomMap(self) -> str: ...
    @overload
    def GetRandomMap() -> std::string: ...
    @overload
    def GetSteamID(self) -> int: ...
    @overload
    def GetSteamID() -> unsignedlonglong: ...
    @overload
    def HookEvent(self, eventName: str, callback: Callable[[str],None]) -> None: ...
    @overload
    def HookEvent(std, classstd) -> void: ...
    @overload
    def HookEventPost(self, eventName: str, callback: Callable[[str],None]) -> None: ...
    @overload
    def HookEventPost(std, classstd) -> void: ...
    @overload
    def HookEventWithCaller(self, eventName: str, callback: Callable[[pybakke.ServerWrapper,capsule,str],None]) -> None: ...
    @overload
    def HookEventWithCaller(std, classstd) -> void: ...
    @overload
    def HookEventWithCaller(self, eventName: str, callback: Callable[[pybakke.ActorWrapper,capsule,str],None]) -> None: ...
    @overload
    def HookEventWithCaller(std, classstd) -> void: ...
    @overload
    def HookEventWithCaller(self, eventName: str, callback: Callable[[pybakke.CarWrapper,capsule,str],None]) -> None: ...
    @overload
    def HookEventWithCaller(std, classstd) -> void: ...
    @overload
    def HookEventWithCaller(self, eventName: str, callback: Callable[[pybakke.CarComponentWrapper,capsule,str],None]) -> None: ...
    @overload
    def HookEventWithCaller(std, classstd) -> void: ...
    @overload
    def HookEventWithCaller(self, eventName: str, callback: Callable[[PlayerControllerWrapper,capsule,str],None]) -> None: ...
    @overload
    def HookEventWithCaller(std, classstd) -> void: ...
    @overload
    def HookEventWithCaller(self, eventName: str, callback: Callable[[pybakke.BallWrapper,capsule,str],None]) -> None: ...
    @overload
    def HookEventWithCaller(std, classstd) -> void: ...
    @overload
    def HookEventWithCaller(*args, **kwargs) -> Any: ...
    @overload
    def HookEventWithCallerPost(self, eventName: str, callback: Callable[[pybakke.ActorWrapper,capsule,str],None]) -> None: ...
    @overload
    def HookEventWithCallerPost(std, classstd) -> void: ...
    @overload
    def HookEventWithCallerPost(self, eventName: str, callback: Callable[[pybakke.ServerWrapper,capsule,str],None]) -> None: ...
    @overload
    def HookEventWithCallerPost(std, classstd) -> void: ...
    @overload
    def HookEventWithCallerPost(self, eventName: str, callback: Callable[[pybakke.CarWrapper,capsule,str],None]) -> None: ...
    @overload
    def HookEventWithCallerPost(std, classstd) -> void: ...
    @overload
    def HookEventWithCallerPost(self, eventName: str, callback: Callable[[pybakke.CarComponentWrapper,capsule,str],None]) -> None: ...
    @overload
    def HookEventWithCallerPost(std, classstd) -> void: ...
    @overload
    def HookEventWithCallerPost(self, eventName: str, callback: Callable[[PlayerControllerWrapper,capsule,str],None]) -> None: ...
    @overload
    def HookEventWithCallerPost(std, classstd) -> void: ...
    @overload
    def HookEventWithCallerPost(self, eventName: str, callback: Callable[[pybakke.BallWrapper,capsule,str],None]) -> None: ...
    @overload
    def HookEventWithCallerPost(std, classstd) -> void: ...
    @overload
    def HookEventWithCallerPost(*args, **kwargs) -> Any: ...
    @overload
    def IsInCustomTraining(self) -> bool: ...
    @overload
    def IsInCustomTraining() -> bool: ...
    @overload
    def IsInFreeplay(self) -> bool: ...
    @overload
    def IsInFreeplay() -> bool: ...
    @overload
    def IsInGame(self) -> bool: ...
    @overload
    def IsInGame() -> bool: ...
    @overload
    def IsInOnlineGame(self) -> bool: ...
    @overload
    def IsInOnlineGame() -> bool: ...
    @overload
    def IsInReplay(self) -> bool: ...
    @overload
    def IsInReplay() -> bool: ...
    @overload
    def IsKeyPressed(self, keyName: int) -> bool: ...
    @overload
    def IsKeyPressed(int) -> bool: ...
    @overload
    def IsSpectatingInOnlineGame(self) -> bool: ...
    @overload
    def IsSpectatingInOnlineGame() -> bool: ...
    def LoadToastTexture(self, name: str, path: str) -> None: ...
    def LogToChatbox(self, text: str, sender: str = ...) -> None: ...
    @overload
    def OverrideParams(self, src: capsule, memsize: int) -> None: ...
    @overload
    def OverrideParams(void*, unsignedlong) -> void: ...
    @overload
    def RegisterBot(self, car: CARBODY, tickfunc: Callable[[float,pybakke.ControllerInput,pybakke.CarWrapper,pybakke.ServerWrapper],None], botName: str, overridePlayer: bool) -> None: ...
    @overload
    def RegisterBot(enumCARBODY, classstd, std, bool) -> void: ...
    @overload
    def RegisterDrawable(self, callback: Callable[[pybakke.CanvasWrapper],None]) -> None: ...
    @overload
    def RegisterDrawable(classstd) -> void: ...
    @overload
    def SetTimeout(self, theLambda: Callable[[pybakke.GameWrapper],None], time: float) -> None: ...
    @overload
    def SetTimeout(classstd, float) -> void: ...
    def Toast(self, title: str, text: str, texture: str = ..., timeout: float = ..., toastType: int = ..., width: float = ..., height: float = ...) -> None: ...
    @overload
    def UnhookEvent(self, eventName: str) -> None: ...
    @overload
    def UnhookEvent(std) -> void: ...
    @overload
    def UnregisterDrawables(self) -> None: ...
    @overload
    def UnregisterDrawables() -> void: ...
    def assign(self, rhs: GameWrapper) -> GameWrapper: ...

class GoalWrapper(ObjectWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: GoalWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def GetAutoCamFocusExtent(self) -> Vector: ...
    @overload
    def GetAutoCamFocusExtent() -> structVector: ...
    @overload
    def GetDirection(self) -> Vector: ...
    @overload
    def GetDirection() -> structVector: ...
    @overload
    def GetGoalDirection(self) -> ActorWrapper: ...
    @overload
    def GetGoalDirection() -> classActorWrapper: ...
    @overload
    def GetGoalFocusExtentCenter(self) -> Vector: ...
    @overload
    def GetGoalFocusExtentCenter() -> structVector: ...
    @overload
    def GetGoalFocusLocationOffset(self) -> Vector: ...
    @overload
    def GetGoalFocusLocationOffset() -> structVector: ...
    @overload
    def GetGoalIndicatorArchetype(self) -> UnrealStringWrapper: ...
    @overload
    def GetGoalIndicatorArchetype() -> classUnrealStringWrapper: ...
    @overload
    def GetGoalOrientation(self) -> ActorWrapper: ...
    @overload
    def GetGoalOrientation() -> classActorWrapper: ...
    @overload
    def GetGoalScoredDotDirection(self) -> Vector: ...
    @overload
    def GetGoalScoredDotDirection() -> structVector: ...
    @overload
    def GetLocalExtent(self) -> Vector: ...
    @overload
    def GetLocalExtent() -> structVector: ...
    @overload
    def GetLocation(self) -> Vector: ...
    @overload
    def GetLocation() -> structVector: ...
    @overload
    def GetMaxGoalScorerAttachRadius(self) -> float: ...
    @overload
    def GetMaxGoalScorerAttachRadius() -> float: ...
    @overload
    def GetMinAttachGoalToScorerDot(self) -> float: ...
    @overload
    def GetMinAttachGoalToScorerDot() -> float: ...
    @overload
    def GetOverrideGoalIndicatorOrientations(self) -> ArrayWrapper<ActorWrapper>: ...
    @overload
    def GetOverrideGoalIndicatorOrientations() -> classArrayWrapper<classActorWrapper>: ...
    @overload
    def GetPointsToAward(self) -> int: ...
    @overload
    def GetPointsToAward() -> int: ...
    @overload
    def GetRight(self) -> Vector: ...
    @overload
    def GetRight() -> structVector: ...
    @overload
    def GetRotation(self) -> Rotator: ...
    @overload
    def GetRotation() -> structRotator: ...
    @overload
    def GetScoreFX(self) -> FXActorWrapper: ...
    @overload
    def GetScoreFX() -> classFXActorWrapper: ...
    @overload
    def GetTeamNum(self) -> int: ...
    @overload
    def GetTeamNum() -> unsignedchar: ...
    @overload
    def GetUp(self) -> Vector: ...
    @overload
    def GetUp() -> structVector: ...
    @overload
    def GetWorldCenter(self) -> Vector: ...
    @overload
    def GetWorldCenter() -> structVector: ...
    @overload
    def GetWorldExtent(self) -> Vector: ...
    @overload
    def GetWorldExtent() -> structVector: ...
    @overload
    def GetWorldFrontCenter(self) -> Vector: ...
    @overload
    def GetWorldFrontCenter() -> structVector: ...
    @overload
    def GetbNoGoalIndicator(self) -> int: ...
    @overload
    def GetbNoGoalIndicator() -> unsignedlong: ...
    @overload
    def GetbOnlyGoalsFromDirection(self) -> int: ...
    @overload
    def GetbOnlyGoalsFromDirection() -> unsignedlong: ...
    @overload
    def GetbShowFocusExtent(self) -> int: ...
    @overload
    def GetbShowFocusExtent() -> unsignedlong: ...
    @overload
    def Init(self) -> None: ...
    @overload
    def Init() -> void: ...
    @overload
    def SetAutoCamFocusExtent(self, newAutoCamFocusExtent: Vector) -> None: ...
    @overload
    def SetAutoCamFocusExtent(structVector) -> void: ...
    @overload
    def SetDirection(self, newDirection: Vector) -> None: ...
    @overload
    def SetDirection(structVector) -> void: ...
    @overload
    def SetGoalDirection(self, newGoalDirection: ActorWrapper) -> None: ...
    @overload
    def SetGoalDirection(classActorWrapper) -> void: ...
    @overload
    def SetGoalFocusLocationOffset(self, newGoalFocusLocationOffset: Vector) -> None: ...
    @overload
    def SetGoalFocusLocationOffset(structVector) -> void: ...
    @overload
    def SetGoalOrientation(self, newGoalOrientation: ActorWrapper) -> None: ...
    @overload
    def SetGoalOrientation(classActorWrapper) -> void: ...
    @overload
    def SetGoalScoredDotDirection(self, newGoalScoredDotDirection: Vector) -> None: ...
    @overload
    def SetGoalScoredDotDirection(structVector) -> void: ...
    @overload
    def SetLocalExtent(self, newLocalExtent: Vector) -> None: ...
    @overload
    def SetLocalExtent(structVector) -> void: ...
    @overload
    def SetLocation(self, newLocation: Vector) -> None: ...
    @overload
    def SetLocation(structVector) -> void: ...
    @overload
    def SetMaxGoalScorerAttachRadius(self, newMaxGoalScorerAttachRadius: float) -> None: ...
    @overload
    def SetMaxGoalScorerAttachRadius(float) -> void: ...
    @overload
    def SetMinAttachGoalToScorerDot(self, newMinAttachGoalToScorerDot: float) -> None: ...
    @overload
    def SetMinAttachGoalToScorerDot(float) -> void: ...
    @overload
    def SetPointsToAward(self, newPointsToAward: int) -> None: ...
    @overload
    def SetPointsToAward(int) -> void: ...
    @overload
    def SetRight(self, newRight: Vector) -> None: ...
    @overload
    def SetRight(structVector) -> void: ...
    @overload
    def SetRotation(self, newRotation: Rotator) -> None: ...
    @overload
    def SetRotation(structRotator) -> void: ...
    @overload
    def SetScoreFX(self, newScoreFX: FXActorWrapper) -> None: ...
    @overload
    def SetScoreFX(classFXActorWrapper) -> void: ...
    @overload
    def SetTeamNum(self, newTeamNum: int) -> None: ...
    @overload
    def SetTeamNum(unsignedchar) -> void: ...
    @overload
    def SetUp(self, newUp: Vector) -> None: ...
    @overload
    def SetUp(structVector) -> void: ...
    @overload
    def SetWorldCenter(self, newWorldCenter: Vector) -> None: ...
    @overload
    def SetWorldCenter(structVector) -> void: ...
    @overload
    def SetWorldExtent(self, newWorldExtent: Vector) -> None: ...
    @overload
    def SetWorldExtent(structVector) -> void: ...
    @overload
    def SetWorldFrontCenter(self, newWorldFrontCenter: Vector) -> None: ...
    @overload
    def SetWorldFrontCenter(structVector) -> void: ...
    @overload
    def SetbNoGoalIndicator(self, newbNoGoalIndicator: int) -> None: ...
    @overload
    def SetbNoGoalIndicator(unsignedlong) -> void: ...
    @overload
    def SetbOnlyGoalsFromDirection(self, newbOnlyGoalsFromDirection: int) -> None: ...
    @overload
    def SetbOnlyGoalsFromDirection(unsignedlong) -> void: ...
    @overload
    def SetbShowFocusExtent(self, newbShowFocusExtent: int) -> None: ...
    @overload
    def SetbShowFocusExtent(unsignedlong) -> void: ...
    def assign(self, rhs: GoalWrapper) -> GoalWrapper: ...
    @overload
    def eventBeginPlay(self) -> None: ...
    @overload
    def eventBeginPlay() -> void: ...

class GrapplingHookPickup(TargetedPickup):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: GrapplingHookPickup) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def ApplyForces(self, ActiveTime: float) -> None: ...
    @overload
    def ApplyForces(float) -> void: ...
    @overload
    def DoAttach(self) -> None: ...
    @overload
    def DoAttach() -> void: ...
    @overload
    def GetAfterAttachDuration(self) -> float: ...
    @overload
    def GetAfterAttachDuration() -> float: ...
    @overload
    def GetAttachTime(self) -> float: ...
    @overload
    def GetAttachTime() -> float: ...
    @overload
    def GetBall(self) -> BallWrapper: ...
    @overload
    def GetBall() -> classBallWrapper: ...
    @overload
    def GetBlockedRequiredMoveDistance(self) -> float: ...
    @overload
    def GetBlockedRequiredMoveDistance() -> float: ...
    @overload
    def GetBlockedRequiredMoveTime(self) -> float: ...
    @overload
    def GetBlockedRequiredMoveTime() -> float: ...
    @overload
    def GetBlockedStartPos(self) -> Vector: ...
    @overload
    def GetBlockedStartPos() -> structVector: ...
    @overload
    def GetBlockedStartTime(self) -> float: ...
    @overload
    def GetBlockedStartTime() -> float: ...
    @overload
    def GetCurrentRopeLength(self) -> float: ...
    @overload
    def GetCurrentRopeLength() -> float: ...
    @overload
    def GetForce(self) -> float: ...
    @overload
    def GetForce() -> float: ...
    @overload
    def GetHitDistanceOffset(self) -> float: ...
    @overload
    def GetHitDistanceOffset() -> float: ...
    @overload
    def GetHookMeshOffset(self) -> Vector: ...
    @overload
    def GetHookMeshOffset() -> structVector: ...
    @overload
    def GetHookMeshScale(self) -> Vector: ...
    @overload
    def GetHookMeshScale() -> structVector: ...
    @overload
    def GetHookRotationOffset(self) -> Rotator: ...
    @overload
    def GetHookRotationOffset() -> structRotator: ...
    @overload
    def GetImpulse(self) -> float: ...
    @overload
    def GetImpulse() -> float: ...
    @overload
    def GetMaxRopeLength(self) -> float: ...
    @overload
    def GetMaxRopeLength() -> float: ...
    @overload
    def GetPredictedBallLocation(self, InBall: BallWrapper) -> Vector: ...
    @overload
    def GetPredictedBallLocation(classBallWrapper) -> structVector: ...
    @overload
    def GetPredictionSpeed(self) -> float: ...
    @overload
    def GetPredictionSpeed() -> float: ...
    @overload
    def GetRopeMeshInitialSize(self) -> float: ...
    @overload
    def GetRopeMeshInitialSize() -> float: ...
    @overload
    def GetRopeMeshScale(self) -> Vector: ...
    @overload
    def GetRopeMeshScale() -> structVector: ...
    @overload
    def GetRopeOrigin(self) -> Vector: ...
    @overload
    def GetRopeOrigin() -> structVector: ...
    @overload
    def GetRopeRotationOffset(self) -> Rotator: ...
    @overload
    def GetRopeRotationOffset() -> structRotator: ...
    @overload
    def GetRopeToTime(self) -> float: ...
    @overload
    def GetRopeToTime() -> float: ...
    @overload
    def GetTargetedLocation(self) -> Vector: ...
    @overload
    def GetTargetedLocation() -> structVector: ...
    @overload
    def GetbAttachedToBall(self) -> int: ...
    @overload
    def GetbAttachedToBall() -> unsignedlong: ...
    @overload
    def GetbBlocked(self) -> int: ...
    @overload
    def GetbBlocked() -> unsignedlong: ...
    @overload
    def GetbDeactivateOnTouch(self) -> int: ...
    @overload
    def GetbDeactivateOnTouch() -> unsignedlong: ...
    @overload
    def GetbInstant(self) -> int: ...
    @overload
    def GetbInstant() -> unsignedlong: ...
    @overload
    def HandleBallExploded(self, InBall: BallWrapper) -> None: ...
    @overload
    def HandleBallExploded(classBallWrapper) -> void: ...
    @overload
    def PickupEnd(self) -> None: ...
    @overload
    def PickupEnd() -> void: ...
    @overload
    def PickupStart(self) -> None: ...
    @overload
    def PickupStart() -> void: ...
    @overload
    def PickupTick(self, DeltaTime: float) -> None: ...
    @overload
    def PickupTick(float) -> void: ...
    def ScaleMeshToLocation(self, NewLocation: Vector, TargetLocation: Vector) -> None: ...
    @overload
    def SetAfterAttachDuration(self, newAfterAttachDuration: float) -> None: ...
    @overload
    def SetAfterAttachDuration(float) -> void: ...
    @overload
    def SetAttachTime(self, newAttachTime: float) -> None: ...
    @overload
    def SetAttachTime(float) -> void: ...
    @overload
    def SetBall(self, newBall: BallWrapper) -> None: ...
    @overload
    def SetBall(classBallWrapper) -> void: ...
    @overload
    def SetBlockedRequiredMoveDistance(self, newBlockedRequiredMoveDistance: float) -> None: ...
    @overload
    def SetBlockedRequiredMoveDistance(float) -> void: ...
    @overload
    def SetBlockedRequiredMoveTime(self, newBlockedRequiredMoveTime: float) -> None: ...
    @overload
    def SetBlockedRequiredMoveTime(float) -> void: ...
    @overload
    def SetBlockedStartPos(self, newBlockedStartPos: Vector) -> None: ...
    @overload
    def SetBlockedStartPos(structVector) -> void: ...
    @overload
    def SetBlockedStartTime(self, newBlockedStartTime: float) -> None: ...
    @overload
    def SetBlockedStartTime(float) -> void: ...
    @overload
    def SetCurrentRopeLength(self, newCurrentRopeLength: float) -> None: ...
    @overload
    def SetCurrentRopeLength(float) -> void: ...
    @overload
    def SetForce(self, newForce: float) -> None: ...
    @overload
    def SetForce(float) -> void: ...
    @overload
    def SetHitDistanceOffset(self, newHitDistanceOffset: float) -> None: ...
    @overload
    def SetHitDistanceOffset(float) -> void: ...
    @overload
    def SetHookMeshOffset(self, newHookMeshOffset: Vector) -> None: ...
    @overload
    def SetHookMeshOffset(structVector) -> void: ...
    @overload
    def SetHookMeshScale(self, newHookMeshScale: Vector) -> None: ...
    @overload
    def SetHookMeshScale(structVector) -> void: ...
    @overload
    def SetHookRotationOffset(self, newHookRotationOffset: Rotator) -> None: ...
    @overload
    def SetHookRotationOffset(structRotator) -> void: ...
    @overload
    def SetImpulse(self, newImpulse: float) -> None: ...
    @overload
    def SetImpulse(float) -> void: ...
    @overload
    def SetMaxRopeLength(self, newMaxRopeLength: float) -> None: ...
    @overload
    def SetMaxRopeLength(float) -> void: ...
    @overload
    def SetPredictionSpeed(self, newPredictionSpeed: float) -> None: ...
    @overload
    def SetPredictionSpeed(float) -> void: ...
    @overload
    def SetRopeMeshInitialSize(self, newRopeMeshInitialSize: float) -> None: ...
    @overload
    def SetRopeMeshInitialSize(float) -> void: ...
    @overload
    def SetRopeMeshScale(self, newRopeMeshScale: Vector) -> None: ...
    @overload
    def SetRopeMeshScale(structVector) -> void: ...
    @overload
    def SetRopeOrigin(self, newRopeOrigin: Vector) -> None: ...
    @overload
    def SetRopeOrigin(structVector) -> void: ...
    @overload
    def SetRopeRotationOffset(self, newRopeRotationOffset: Rotator) -> None: ...
    @overload
    def SetRopeRotationOffset(structRotator) -> void: ...
    @overload
    def SetRopeToTime(self, newRopeToTime: float) -> None: ...
    @overload
    def SetRopeToTime(float) -> void: ...
    @overload
    def SetbAttachedToBall(self, newbAttachedToBall: int) -> None: ...
    @overload
    def SetbAttachedToBall(unsignedlong) -> void: ...
    @overload
    def SetbBlocked(self, newbBlocked: int) -> None: ...
    @overload
    def SetbBlocked(unsignedlong) -> void: ...
    @overload
    def SetbDeactivateOnTouch(self, newbDeactivateOnTouch: int) -> None: ...
    @overload
    def SetbDeactivateOnTouch(unsignedlong) -> void: ...
    @overload
    def SetbInstant(self, newbInstant: int) -> None: ...
    @overload
    def SetbInstant(unsignedlong) -> void: ...
    @overload
    def UpdateVisual(self, DeltaTime: float) -> None: ...
    @overload
    def UpdateVisual(float) -> void: ...
    def assign(self, rhs: GrapplingHookPickup) -> GrapplingHookPickup: ...

class GravityPickup(RumblePickupComponentWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: GravityPickup) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def ApplyForces(self, ActiveTime: float) -> None: ...
    @overload
    def ApplyForces(float) -> void: ...
    @overload
    def GetBallGravity(self) -> float: ...
    @overload
    def GetBallGravity() -> float: ...
    @overload
    def GetLastRecordedBallHitTime(self) -> float: ...
    @overload
    def GetLastRecordedBallHitTime() -> float: ...
    @overload
    def GetOffset(self) -> Vector: ...
    @overload
    def GetOffset() -> structVector: ...
    @overload
    def GetPrevBall(self) -> BallWrapper: ...
    @overload
    def GetPrevBall() -> classBallWrapper: ...
    @overload
    def GetRange(self) -> float: ...
    @overload
    def GetRange() -> float: ...
    @overload
    def GetRecordBallHitRate(self) -> float: ...
    @overload
    def GetRecordBallHitRate() -> float: ...
    @overload
    def GetbDeactivateOnTouch(self) -> int: ...
    @overload
    def GetbDeactivateOnTouch() -> unsignedlong: ...
    @overload
    def PickupEnd(self) -> None: ...
    @overload
    def PickupEnd() -> void: ...
    @overload
    def PickupStart(self) -> None: ...
    @overload
    def PickupStart() -> void: ...
    @overload
    def SetBallGravity(self, newBallGravity: float) -> None: ...
    @overload
    def SetBallGravity(float) -> void: ...
    @overload
    def SetLastRecordedBallHitTime(self, newLastRecordedBallHitTime: float) -> None: ...
    @overload
    def SetLastRecordedBallHitTime(float) -> void: ...
    @overload
    def SetOffset(self, newOffset: Vector) -> None: ...
    @overload
    def SetOffset(structVector) -> void: ...
    @overload
    def SetPrevBall(self, newPrevBall: BallWrapper) -> None: ...
    @overload
    def SetPrevBall(classBallWrapper) -> void: ...
    @overload
    def SetRange(self, newRange: float) -> None: ...
    @overload
    def SetRange(float) -> void: ...
    @overload
    def SetRecordBallHitRate(self, newRecordBallHitRate: float) -> None: ...
    @overload
    def SetRecordBallHitRate(float) -> void: ...
    @overload
    def SetbDeactivateOnTouch(self, newbDeactivateOnTouch: int) -> None: ...
    @overload
    def SetbDeactivateOnTouch(unsignedlong) -> void: ...
    @overload
    def UpdateVisual(self) -> None: ...
    @overload
    def UpdateVisual() -> void: ...
    def assign(self, rhs: GravityPickup) -> GravityPickup: ...

class HandbrakeOverridePickup(TargetedPickup):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: HandbrakeOverridePickup) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def GetOtherCar(self) -> CarWrapper: ...
    @overload
    def GetOtherCar() -> classCarWrapper: ...
    @overload
    def PickupEnd(self) -> None: ...
    @overload
    def PickupEnd() -> void: ...
    @overload
    def PickupStart(self) -> None: ...
    @overload
    def PickupStart() -> void: ...
    @overload
    def SetOtherCar(self, newOtherCar: CarWrapper) -> None: ...
    @overload
    def SetOtherCar(classCarWrapper) -> void: ...
    def assign(self, rhs: HandbrakeOverridePickup) -> HandbrakeOverridePickup: ...

class HitForcePickup(RumblePickupComponentWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: HitForcePickup) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def GetBallHitForce(self) -> float: ...
    @overload
    def GetBallHitForce() -> float: ...
    @overload
    def GetCarHitForce(self) -> float: ...
    @overload
    def GetCarHitForce() -> float: ...
    @overload
    def GetLastFXTime(self) -> float: ...
    @overload
    def GetLastFXTime() -> float: ...
    @overload
    def GetMinFXTime(self) -> float: ...
    @overload
    def GetMinFXTime() -> float: ...
    @overload
    def GetOrigBallHitForce(self) -> float: ...
    @overload
    def GetOrigBallHitForce() -> float: ...
    @overload
    def GetOrigCarHitForce(self) -> float: ...
    @overload
    def GetOrigCarHitForce() -> float: ...
    @overload
    def GetbBallForce(self) -> int: ...
    @overload
    def GetbBallForce() -> unsignedlong: ...
    @overload
    def GetbCarForce(self) -> int: ...
    @overload
    def GetbCarForce() -> unsignedlong: ...
    @overload
    def GetbDemolishCars(self) -> int: ...
    @overload
    def GetbDemolishCars() -> unsignedlong: ...
    @overload
    def PickupEnd(self) -> None: ...
    @overload
    def PickupEnd() -> void: ...
    @overload
    def PickupStart(self) -> None: ...
    @overload
    def PickupStart() -> void: ...
    @overload
    def SetBallHitForce(self, newBallHitForce: float) -> None: ...
    @overload
    def SetBallHitForce(float) -> void: ...
    @overload
    def SetCarHitForce(self, newCarHitForce: float) -> None: ...
    @overload
    def SetCarHitForce(float) -> void: ...
    @overload
    def SetLastFXTime(self, newLastFXTime: float) -> None: ...
    @overload
    def SetLastFXTime(float) -> void: ...
    @overload
    def SetMinFXTime(self, newMinFXTime: float) -> None: ...
    @overload
    def SetMinFXTime(float) -> void: ...
    @overload
    def SetOrigBallHitForce(self, newOrigBallHitForce: float) -> None: ...
    @overload
    def SetOrigBallHitForce(float) -> void: ...
    @overload
    def SetOrigCarHitForce(self, newOrigCarHitForce: float) -> None: ...
    @overload
    def SetOrigCarHitForce(float) -> void: ...
    @overload
    def SetbBallForce(self, newbBallForce: int) -> None: ...
    @overload
    def SetbBallForce(unsignedlong) -> void: ...
    @overload
    def SetbCarForce(self, newbCarForce: int) -> None: ...
    @overload
    def SetbCarForce(unsignedlong) -> void: ...
    @overload
    def SetbDemolishCars(self, newbDemolishCars: int) -> None: ...
    @overload
    def SetbDemolishCars(unsignedlong) -> void: ...
    def assign(self, rhs: HitForcePickup) -> HitForcePickup: ...

class InputBufferGraphWrapper(StatGraphWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: InputBufferGraphWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def CreateBufferHistory(self, Title: str) -> SampleHistoryWrapper: ...
    @overload
    def CreateBufferHistory(std) -> classSampleHistoryWrapper: ...
    @overload
    def GetBuffer(self) -> SampleHistoryWrapper: ...
    @overload
    def GetBuffer() -> classSampleHistoryWrapper: ...
    @overload
    def GetBufferTarget(self) -> SampleHistoryWrapper: ...
    @overload
    def GetBufferTarget() -> classSampleHistoryWrapper: ...
    @overload
    def GetMaxPhysicsRate(self) -> float: ...
    @overload
    def GetMaxPhysicsRate() -> float: ...
    @overload
    def GetMinPhysicsRate(self) -> float: ...
    @overload
    def GetMinPhysicsRate() -> float: ...
    @overload
    def GetOverUnderFrames(self) -> SampleHistoryWrapper: ...
    @overload
    def GetOverUnderFrames() -> classSampleHistoryWrapper: ...
    @overload
    def GetPhysicsRate(self) -> SampleHistoryWrapper: ...
    @overload
    def GetPhysicsRate() -> classSampleHistoryWrapper: ...
    @overload
    def SetBuffer(self, newBuffer: SampleHistoryWrapper) -> None: ...
    @overload
    def SetBuffer(classSampleHistoryWrapper) -> void: ...
    @overload
    def SetBufferTarget(self, newBufferTarget: SampleHistoryWrapper) -> None: ...
    @overload
    def SetBufferTarget(classSampleHistoryWrapper) -> void: ...
    @overload
    def SetMaxPhysicsRate(self, newMaxPhysicsRate: float) -> None: ...
    @overload
    def SetMaxPhysicsRate(float) -> void: ...
    @overload
    def SetMinPhysicsRate(self, newMinPhysicsRate: float) -> None: ...
    @overload
    def SetMinPhysicsRate(float) -> void: ...
    @overload
    def SetOverUnderFrames(self, newOverUnderFrames: SampleHistoryWrapper) -> None: ...
    @overload
    def SetOverUnderFrames(classSampleHistoryWrapper) -> void: ...
    @overload
    def SetPhysicsRate(self, newPhysicsRate: SampleHistoryWrapper) -> None: ...
    @overload
    def SetPhysicsRate(classSampleHistoryWrapper) -> void: ...
    def assign(self, rhs: InputBufferGraphWrapper) -> InputBufferGraphWrapper: ...
    @overload
    def eventConstruct(self) -> None: ...
    @overload
    def eventConstruct() -> void: ...

class JumpComponentWrapper(CarComponentWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: JumpComponentWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def ApplyForces(self, ActiveTime: float) -> None: ...
    @overload
    def ApplyForces(float) -> void: ...
    @overload
    def CacheJumpData(self) -> None: ...
    @overload
    def CacheJumpData() -> void: ...
    @overload
    def GetJumpAccel(self) -> float: ...
    @overload
    def GetJumpAccel() -> float: ...
    @overload
    def GetJumpForce(self) -> float: ...
    @overload
    def GetJumpForce() -> float: ...
    @overload
    def GetJumpForceTime(self) -> float: ...
    @overload
    def GetJumpForceTime() -> float: ...
    @overload
    def GetJumpImpulse(self) -> float: ...
    @overload
    def GetJumpImpulse() -> float: ...
    @overload
    def GetJumpImpulseSpeed(self) -> float: ...
    @overload
    def GetJumpImpulseSpeed() -> float: ...
    @overload
    def GetMaxJumpHeight(self) -> float: ...
    @overload
    def GetMaxJumpHeight() -> float: ...
    @overload
    def GetMaxJumpHeightTime(self) -> float: ...
    @overload
    def GetMaxJumpHeightTime() -> float: ...
    @overload
    def GetMinJumpTime(self) -> float: ...
    @overload
    def GetMinJumpTime() -> float: ...
    @overload
    def GetPodiumJumpForceTime(self) -> float: ...
    @overload
    def GetPodiumJumpForceTime() -> float: ...
    @overload
    def GetbDeactivate(self) -> int: ...
    @overload
    def GetbDeactivate() -> unsignedlong: ...
    @overload
    def OnCreated(self) -> None: ...
    @overload
    def OnCreated() -> void: ...
    @overload
    def SetJumpAccel(self, newJumpAccel: float) -> None: ...
    @overload
    def SetJumpAccel(float) -> void: ...
    @overload
    def SetJumpForce(self, newJumpForce: float) -> None: ...
    @overload
    def SetJumpForce(float) -> void: ...
    @overload
    def SetJumpForceTime(self, newJumpForceTime: float) -> None: ...
    @overload
    def SetJumpForceTime(float) -> void: ...
    @overload
    def SetJumpImpulse(self, newJumpImpulse: float) -> None: ...
    @overload
    def SetJumpImpulse(float) -> void: ...
    @overload
    def SetJumpImpulseSpeed(self, newJumpImpulseSpeed: float) -> None: ...
    @overload
    def SetJumpImpulseSpeed(float) -> void: ...
    @overload
    def SetMaxJumpHeight(self, newMaxJumpHeight: float) -> None: ...
    @overload
    def SetMaxJumpHeight(float) -> void: ...
    @overload
    def SetMaxJumpHeightTime(self, newMaxJumpHeightTime: float) -> None: ...
    @overload
    def SetMaxJumpHeightTime(float) -> void: ...
    @overload
    def SetMinJumpTime(self, newMinJumpTime: float) -> None: ...
    @overload
    def SetMinJumpTime(float) -> void: ...
    @overload
    def SetPodiumJumpForceTime(self, newPodiumJumpForceTime: float) -> None: ...
    @overload
    def SetPodiumJumpForceTime(float) -> void: ...
    @overload
    def SetbDeactivate(self, newbDeactivate: int) -> None: ...
    @overload
    def SetbDeactivate(unsignedlong) -> void: ...
    def assign(self, rhs: JumpComponentWrapper) -> JumpComponentWrapper: ...

class LinearColor:
    def __init__(self) -> None: ...
    @property
    def A(self) -> Any: ...
    @A.setter
    def A(self, val: Any) -> None: ...
    @property
    def B(self) -> Any: ...
    @B.setter
    def B(self, val: Any) -> None: ...
    @property
    def G(self) -> Any: ...
    @G.setter
    def G(self, val: Any) -> None: ...
    @property
    def R(self) -> Any: ...
    @R.setter
    def R(self, val: Any) -> None: ...

class MMRWrapper(ObjectWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: MMRWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def CalculateMMR(self, sr: SkillRating, disregardPlacements: bool) -> float: ...
    @overload
    def CalculateMMR(structSkillRating, bool) -> float: ...
    @overload
    def GetCurrentPlaylist(self) -> int: ...
    @overload
    def GetCurrentPlaylist() -> int: ...
    @overload
    def GetPlayerMMR(self, playerID: SteamID, playlistID: int) -> float: ...
    @overload
    def GetPlayerMMR(structSteamID, int) -> float: ...
    @overload
    def GetPlayerSkillRating(self, playerID: SteamID, playlistID: int) -> SkillRating: ...
    @overload
    def GetPlayerSkillRating(structSteamID, int) -> structSkillRating: ...
    @overload
    def IsRanked(self, playlistID: int) -> bool: ...
    @overload
    def IsRanked(int) -> bool: ...
    @overload
    def IsSynced(self, playerID: SteamID, playlistID: int) -> bool: ...
    @overload
    def IsSynced(structSteamID, int) -> bool: ...
    @overload
    def IsSyncing(self, playerID: SteamID) -> bool: ...
    @overload
    def IsSyncing(structSteamID) -> bool: ...
    def assign(self, rhs: MMRWrapper) -> MMRWrapper: ...

class NetStatGraphWrapper(StatGraphWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: NetStatGraphWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def CreateBytesSummary(self, Title: str) -> SampleHistoryWrapper: ...
    @overload
    def CreateBytesSummary(std) -> classSampleHistoryWrapper: ...
    @overload
    def CreateLossSummary(self, Title: str) -> SampleHistoryWrapper: ...
    @overload
    def CreateLossSummary(std) -> classSampleHistoryWrapper: ...
    @overload
    def CreatePktSummary(self, Title: str) -> SampleHistoryWrapper: ...
    @overload
    def CreatePktSummary(std) -> classSampleHistoryWrapper: ...
    @overload
    def GetBytesIn(self) -> SampleHistoryWrapper: ...
    @overload
    def GetBytesIn() -> classSampleHistoryWrapper: ...
    @overload
    def GetBytesOut(self) -> SampleHistoryWrapper: ...
    @overload
    def GetBytesOut() -> classSampleHistoryWrapper: ...
    @overload
    def GetExpectedInPacketRate(self) -> float: ...
    @overload
    def GetExpectedInPacketRate() -> float: ...
    @overload
    def GetExpectedOutPacketRate(self) -> float: ...
    @overload
    def GetExpectedOutPacketRate() -> float: ...
    @overload
    def GetLatency(self) -> SampleHistoryWrapper: ...
    @overload
    def GetLatency() -> classSampleHistoryWrapper: ...
    @overload
    def GetLostPacketsIn(self) -> SampleHistoryWrapper: ...
    @overload
    def GetLostPacketsIn() -> classSampleHistoryWrapper: ...
    @overload
    def GetLostPacketsOut(self) -> SampleHistoryWrapper: ...
    @overload
    def GetLostPacketsOut() -> classSampleHistoryWrapper: ...
    @overload
    def GetMaxBytesRate(self) -> float: ...
    @overload
    def GetMaxBytesRate() -> float: ...
    @overload
    def GetPacketsIn(self) -> SampleHistoryWrapper: ...
    @overload
    def GetPacketsIn() -> classSampleHistoryWrapper: ...
    @overload
    def GetPacketsOut(self) -> SampleHistoryWrapper: ...
    @overload
    def GetPacketsOut() -> classSampleHistoryWrapper: ...
    @overload
    def SetBytesIn(self, newBytesIn: SampleHistoryWrapper) -> None: ...
    @overload
    def SetBytesIn(classSampleHistoryWrapper) -> void: ...
    @overload
    def SetBytesOut(self, newBytesOut: SampleHistoryWrapper) -> None: ...
    @overload
    def SetBytesOut(classSampleHistoryWrapper) -> void: ...
    @overload
    def SetExpectedInPacketRate(self, newExpectedInPacketRate: float) -> None: ...
    @overload
    def SetExpectedInPacketRate(float) -> void: ...
    @overload
    def SetExpectedOutPacketRate(self, newExpectedOutPacketRate: float) -> None: ...
    @overload
    def SetExpectedOutPacketRate(float) -> void: ...
    @overload
    def SetLatency(self, newLatency: SampleHistoryWrapper) -> None: ...
    @overload
    def SetLatency(classSampleHistoryWrapper) -> void: ...
    @overload
    def SetLostPacketsIn(self, newLostPacketsIn: SampleHistoryWrapper) -> None: ...
    @overload
    def SetLostPacketsIn(classSampleHistoryWrapper) -> void: ...
    @overload
    def SetLostPacketsOut(self, newLostPacketsOut: SampleHistoryWrapper) -> None: ...
    @overload
    def SetLostPacketsOut(classSampleHistoryWrapper) -> void: ...
    @overload
    def SetMaxBytesRate(self, newMaxBytesRate: float) -> None: ...
    @overload
    def SetMaxBytesRate(float) -> void: ...
    @overload
    def SetPacketsIn(self, newPacketsIn: SampleHistoryWrapper) -> None: ...
    @overload
    def SetPacketsIn(classSampleHistoryWrapper) -> void: ...
    @overload
    def SetPacketsOut(self, newPacketsOut: SampleHistoryWrapper) -> None: ...
    @overload
    def SetPacketsOut(classSampleHistoryWrapper) -> void: ...
    def assign(self, rhs: NetStatGraphWrapper) -> NetStatGraphWrapper: ...
    @overload
    def eventConstruct(self) -> None: ...
    @overload
    def eventConstruct() -> void: ...
    @overload
    def eventUpdateGraphRanges(self) -> None: ...
    @overload
    def eventUpdateGraphRanges() -> void: ...

class ObjectWrapper:
    def __init__(self, mem: int) -> None: ...
    @property
    def memory_address(self) -> Any: ...
    @memory_address.setter
    def memory_address(self, val: Any) -> None: ...

class POV:
    def __init__(self) -> None: ...
    @property
    def FOV(self) -> Any: ...
    @FOV.setter
    def FOV(self, val: Any) -> None: ...
    @property
    def location(self) -> Any: ...
    @location.setter
    def location(self, val: Any) -> None: ...
    @property
    def rotation(self) -> Any: ...
    @rotation.setter
    def rotation(self, val: Any) -> None: ...

class PerfStatGraphWrapper(StatGraphWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: PerfStatGraphWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def CreateFpsHistory(self, Title: str) -> SampleHistoryWrapper: ...
    @overload
    def CreateFpsHistory(std) -> classSampleHistoryWrapper: ...
    @overload
    def CreateFrameTimeHistory(self, Title: str) -> SampleHistoryWrapper: ...
    @overload
    def CreateFrameTimeHistory(std) -> classSampleHistoryWrapper: ...
    @overload
    def GetFPS(self) -> SampleHistoryWrapper: ...
    @overload
    def GetFPS() -> classSampleHistoryWrapper: ...
    @overload
    def GetFrameTime(self) -> SampleHistoryWrapper: ...
    @overload
    def GetFrameTime() -> classSampleHistoryWrapper: ...
    @overload
    def GetFrameTimeHistories(self) -> ArrayWrapper_SampleHistoryWrapper_t: ...
    @overload
    def GetFrameTimeHistories() -> classArrayWrapper<classSampleHistoryWrapper>: ...
    @overload
    def GetGPUFrameTime(self) -> SampleHistoryWrapper: ...
    @overload
    def GetGPUFrameTime() -> classSampleHistoryWrapper: ...
    @overload
    def GetGameThreadTime(self) -> SampleHistoryWrapper: ...
    @overload
    def GetGameThreadTime() -> classSampleHistoryWrapper: ...
    @overload
    def GetMaxFPS(self) -> float: ...
    @overload
    def GetMaxFPS() -> float: ...
    @overload
    def GetRenderThreadTime(self) -> SampleHistoryWrapper: ...
    @overload
    def GetRenderThreadTime() -> classSampleHistoryWrapper: ...
    @overload
    def GetTargetFPS(self) -> float: ...
    @overload
    def GetTargetFPS() -> float: ...
    @overload
    def SetFPS(self, newFPS: SampleHistoryWrapper) -> None: ...
    @overload
    def SetFPS(classSampleHistoryWrapper) -> void: ...
    @overload
    def SetFrameTime(self, newFrameTime: SampleHistoryWrapper) -> None: ...
    @overload
    def SetFrameTime(classSampleHistoryWrapper) -> void: ...
    @overload
    def SetGPUFrameTime(self, newGPUFrameTime: SampleHistoryWrapper) -> None: ...
    @overload
    def SetGPUFrameTime(classSampleHistoryWrapper) -> void: ...
    @overload
    def SetGameThreadTime(self, newGameThreadTime: SampleHistoryWrapper) -> None: ...
    @overload
    def SetGameThreadTime(classSampleHistoryWrapper) -> void: ...
    @overload
    def SetMaxFPS(self, newMaxFPS: float) -> None: ...
    @overload
    def SetMaxFPS(float) -> void: ...
    @overload
    def SetRenderThreadTime(self, newRenderThreadTime: SampleHistoryWrapper) -> None: ...
    @overload
    def SetRenderThreadTime(classSampleHistoryWrapper) -> void: ...
    @overload
    def SetTargetFPS(self, newTargetFPS: float) -> None: ...
    @overload
    def SetTargetFPS(float) -> void: ...
    def assign(self, rhs: PerfStatGraphWrapper) -> PerfStatGraphWrapper: ...
    @overload
    def eventConstruct(self) -> None: ...
    @overload
    def eventConstruct() -> void: ...
    @overload
    def eventUpdateGraphRanges(self) -> None: ...
    @overload
    def eventUpdateGraphRanges() -> void: ...

class PhysicalMaterialPropertyWrapper(ObjectWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: PhysicalMaterialPropertyWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def GetTireFrictionScale(self) -> float: ...
    @overload
    def GetTireFrictionScale() -> float: ...
    @overload
    def GetbConsiderForGround(self) -> int: ...
    @overload
    def GetbConsiderForGround() -> unsignedlong: ...
    @overload
    def GetbStickyWheels(self) -> int: ...
    @overload
    def GetbStickyWheels() -> unsignedlong: ...
    @overload
    def SetTireFrictionScale(self, newTireFrictionScale: float) -> None: ...
    @overload
    def SetTireFrictionScale(float) -> void: ...
    @overload
    def SetbConsiderForGround(self, newbConsiderForGround: int) -> None: ...
    @overload
    def SetbConsiderForGround(unsignedlong) -> void: ...
    @overload
    def SetbStickyWheels(self, newbStickyWheels: int) -> None: ...
    @overload
    def SetbStickyWheels(unsignedlong) -> void: ...
    def assign(self, rhs: PhysicalMaterialPropertyWrapper) -> PhysicalMaterialPropertyWrapper: ...

class PlayerControllerWrapper(ActorWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: PlayerControllerWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def AllowTextMessage(self, msg: str) -> bool: ...
    @overload
    def AllowTextMessage(std) -> bool: ...
    @overload
    def BackupEditorPawnOrientation(self) -> None: ...
    @overload
    def BackupEditorPawnOrientation() -> void: ...
    @overload
    def BannedKick(self) -> None: ...
    @overload
    def BannedKick() -> void: ...
    def CalculateMouseAxis(self, Center: float, CurrentLocation: float, Deadzone: float, MaxDist: float) -> float: ...
    @overload
    def CanChatWith(self, Other: PlayerControllerWrapper, bPreset: int) -> bool: ...
    @overload
    def CanChatWith(classPlayerControllerWrapper, unsignedlong) -> bool: ...
    @overload
    def CanSendMessage(self, bQuickChatMessage: int) -> bool: ...
    @overload
    def CanSendMessage(unsignedlong) -> bool: ...
    @overload
    def ChangeTeam(self, TeamNum: int) -> None: ...
    @overload
    def ChangeTeam(int) -> void: ...
    @overload
    def ChatMessage_TA(self, InPRI: PlayerReplicationInfoWrapper, Message: str, ChatChannel: int, bPreset: int) -> None: ...
    @overload
    def ChatMessage_TA(classPlayerReplicationInfoWrapper, std, unsignedchar, unsignedlong) -> void: ...
    @overload
    def ClampMoveActorGrabOffset(self) -> None: ...
    @overload
    def ClampMoveActorGrabOffset() -> void: ...
    @overload
    def ClientArbitratedMatchEnded(self) -> None: ...
    @overload
    def ClientArbitratedMatchEnded() -> void: ...
    @overload
    def ClientNotifyChatBanned(self, ChatBanExpiration: int) -> None: ...
    @overload
    def ClientNotifyChatBanned(unsignedlonglong) -> void: ...
    @overload
    def ClientNotifyChatDisabled(self, Time: float) -> None: ...
    @overload
    def ClientNotifyChatDisabled(float) -> void: ...
    @overload
    def ClientSetOnlineStatus(self) -> None: ...
    @overload
    def ClientSetOnlineStatus() -> void: ...
    @overload
    def ClientSplitscreenJoinResponse(self, PlayerID: SteamID, bAllow: int, Error: str) -> None: ...
    @overload
    def ClientSplitscreenJoinResponse(structSteamID&, unsignedlong, std) -> void: ...
    @overload
    def ClientUseItem(self, UseLocation: Vector, UseRotation: Rotator) -> None: ...
    @overload
    def ClientUseItem(structVector&, structRotator&) -> void: ...
    @overload
    def DebugAI(self) -> None: ...
    @overload
    def DebugAI() -> void: ...
    @overload
    def DuplicateShot(self) -> None: ...
    @overload
    def DuplicateShot() -> void: ...
    @overload
    def EditorCycleActor(self) -> None: ...
    @overload
    def EditorCycleActor() -> void: ...
    @overload
    def EditorDecreasePower(self) -> None: ...
    @overload
    def EditorDecreasePower() -> void: ...
    @overload
    def EditorDecreasePowerToggle2(self, bToggle: int) -> None: ...
    @overload
    def EditorDecreasePowerToggle2(unsignedlong) -> void: ...
    @overload
    def EditorDecreasePowerToggleInterim(self) -> None: ...
    @overload
    def EditorDecreasePowerToggleInterim() -> void: ...
    @overload
    def EditorDecreaseRoundTime(self) -> None: ...
    @overload
    def EditorDecreaseRoundTime() -> void: ...
    @overload
    def EditorIncreasePower(self) -> None: ...
    @overload
    def EditorIncreasePower() -> void: ...
    @overload
    def EditorIncreasePowerToggle2(self, bToggle: int) -> None: ...
    @overload
    def EditorIncreasePowerToggle2(unsignedlong) -> void: ...
    @overload
    def EditorIncreasePowerToggleInterim(self) -> None: ...
    @overload
    def EditorIncreasePowerToggleInterim() -> void: ...
    @overload
    def EditorIncreaseRoundTime(self) -> None: ...
    @overload
    def EditorIncreaseRoundTime() -> void: ...
    @overload
    def EditorNextRound(self) -> None: ...
    @overload
    def EditorNextRound() -> void: ...
    @overload
    def EditorPrevRound(self) -> None: ...
    @overload
    def EditorPrevRound() -> void: ...
    @overload
    def EditorRedo(self) -> None: ...
    @overload
    def EditorRedo() -> void: ...
    @overload
    def EditorReleaseActor(self) -> None: ...
    @overload
    def EditorReleaseActor() -> void: ...
    @overload
    def EditorUndo(self) -> None: ...
    @overload
    def EditorUndo() -> void: ...
    @overload
    def EventChatMessage(self, PC: PlayerControllerWrapper, Message: str, bPreset: int) -> None: ...
    @overload
    def EventChatMessage(classPlayerControllerWrapper, std, unsignedlong) -> void: ...
    @overload
    def EventLaunchAccountPicker(self, ControllerId: int) -> None: ...
    @overload
    def EventLaunchAccountPicker(int) -> void: ...
    @overload
    def EventLaunchControllerApplet(self) -> None: ...
    @overload
    def EventLaunchControllerApplet() -> void: ...
    @overload
    def EventMuteChanged(self, PC: PlayerControllerWrapper, PlayerID: SteamID, bMuted: int) -> None: ...
    @overload
    def EventMuteChanged(classPlayerControllerWrapper, structSteamID&, unsignedlong) -> void: ...
    @overload
    def EventResetPlayer(self, PC: PlayerControllerWrapper, bFullReset: int) -> None: ...
    @overload
    def EventResetPlayer(classPlayerControllerWrapper, unsignedlong) -> void: ...
    @overload
    def EventSelectBallCamTarget(self, PC: PlayerControllerWrapper, Direction: int) -> None: ...
    @overload
    def EventSelectBallCamTarget(classPlayerControllerWrapper, int) -> void: ...
    @overload
    def EventTrainingEditorActorModified(self) -> None: ...
    @overload
    def EventTrainingEditorActorModified() -> void: ...
    @overload
    def FollowPlayer(self, InPlayer: PriWrapper) -> None: ...
    @overload
    def FollowPlayer(classPriWrapper) -> void: ...
    @overload
    def GameplayMutePlayer(self, PlayerNetId: SteamID) -> None: ...
    @overload
    def GameplayMutePlayer(structSteamID&) -> void: ...
    @overload
    def GameplayUnmutePlayer(self, PlayerNetId: SteamID) -> None: ...
    @overload
    def GameplayUnmutePlayer(structSteamID&) -> void: ...
    @overload
    def GetBallVelocityIncrementAmount(self) -> float: ...
    @overload
    def GetBallVelocityIncrementAmount() -> float: ...
    @overload
    def GetBallVelocityIncrementFireCount(self) -> int: ...
    @overload
    def GetBallVelocityIncrementFireCount() -> int: ...
    @overload
    def GetBallVelocityIncrementFireCountMax(self) -> float: ...
    @overload
    def GetBallVelocityIncrementFireCountMax() -> float: ...
    @overload
    def GetBallVelocityIncrementSpeedDefault(self) -> float: ...
    @overload
    def GetBallVelocityIncrementSpeedDefault() -> float: ...
    @overload
    def GetBallVelocityIncrementSpeedMax(self) -> float: ...
    @overload
    def GetBallVelocityIncrementSpeedMax() -> float: ...
    @overload
    def GetCar(self) -> CarWrapper: ...
    @overload
    def GetCar() -> classCarWrapper: ...
    @overload
    def GetChatFilter(self) -> int: ...
    @overload
    def GetChatFilter() -> unsignedchar: ...
    @overload
    def GetConfiguredClientInputRate(self) -> int: ...
    @overload
    def GetConfiguredClientInputRate() -> int: ...
    @overload
    def GetCrosshairTraceDistance(self) -> float: ...
    @overload
    def GetCrosshairTraceDistance() -> float: ...
    @overload
    def GetDebugInputs(self) -> ControllerInput: ...
    @overload
    def GetDebugInputs() -> structControllerInput: ...
    @overload
    def GetDesiredCameraSide(self) -> float: ...
    @overload
    def GetDesiredCameraSide() -> float: ...
    @overload
    def GetEditorCameraArchetype(self) -> BaseCameraWrapper: ...
    @overload
    def GetEditorCameraArchetype() -> classBaseCameraWrapper: ...
    @overload
    def GetEngineShare(self) -> EngineTAWrapper: ...
    @overload
    def GetEngineShare() -> classEngineTAWrapper: ...
    @overload
    def GetFollowTarget(self) -> PriWrapper: ...
    @overload
    def GetFollowTarget() -> classPriWrapper: ...
    @overload
    def GetGameEvent(self) -> GameEventWrapper: ...
    @overload
    def GetGameEvent() -> classGameEventWrapper: ...
    @overload
    def GetLastInputPitch(self) -> float: ...
    @overload
    def GetLastInputPitch() -> float: ...
    @overload
    def GetLastInputPitchDown(self) -> float: ...
    @overload
    def GetLastInputPitchDown() -> float: ...
    @overload
    def GetLastInputPitchUp(self) -> float: ...
    @overload
    def GetLastInputPitchUp() -> float: ...
    @overload
    def GetLastInputYaw(self) -> float: ...
    @overload
    def GetLastInputYaw() -> float: ...
    @overload
    def GetLastInputYawLeft(self) -> float: ...
    @overload
    def GetLastInputYawLeft() -> float: ...
    @overload
    def GetLastInputYawRight(self) -> float: ...
    @overload
    def GetLastInputYawRight() -> float: ...
    @overload
    def GetLastInputs(self) -> ControllerInput: ...
    @overload
    def GetLastInputs() -> structControllerInput: ...
    @overload
    def GetLoginURL(self) -> UnrealStringWrapper: ...
    @overload
    def GetLoginURL() -> classUnrealStringWrapper: ...
    @overload
    def GetMaxClientInputRate(self) -> int: ...
    @overload
    def GetMaxClientInputRate() -> int: ...
    @overload
    def GetMedianClientInputRate(self) -> int: ...
    @overload
    def GetMedianClientInputRate() -> int: ...
    @overload
    def GetMinClientInputRate(self) -> int: ...
    @overload
    def GetMinClientInputRate() -> int: ...
    @overload
    def GetMinMoveActorGrabDistance(self) -> float: ...
    @overload
    def GetMinMoveActorGrabDistance() -> float: ...
    @overload
    def GetMouseIncrementSpeed(self) -> float: ...
    @overload
    def GetMouseIncrementSpeed() -> float: ...
    @overload
    def GetMouseInputMax(self) -> float: ...
    @overload
    def GetMouseInputMax() -> float: ...
    @overload
    def GetMouseXDeadZone(self) -> float: ...
    @overload
    def GetMouseXDeadZone() -> float: ...
    @overload
    def GetMouseXDeadZoneAir(self) -> float: ...
    @overload
    def GetMouseXDeadZoneAir() -> float: ...
    @overload
    def GetMouseYDeadZone(self) -> float: ...
    @overload
    def GetMouseYDeadZone() -> float: ...
    @overload
    def GetMouseYDeadZoneAir(self) -> float: ...
    @overload
    def GetMouseYDeadZoneAir() -> float: ...
    @overload
    def GetMoveActorGrabIncrement(self) -> float: ...
    @overload
    def GetMoveActorGrabIncrement() -> float: ...
    @overload
    def GetMoveActorGrabOffset(self) -> Vector: ...
    @overload
    def GetMoveActorGrabOffset() -> structVector: ...
    @overload
    def GetPRI(self) -> PriWrapper: ...
    @overload
    def GetPRI() -> classPriWrapper: ...
    @overload
    def GetPawnTypeChangedTime(self) -> float: ...
    @overload
    def GetPawnTypeChangedTime() -> float: ...
    @overload
    def GetPendingViewPRI(self) -> PriWrapper: ...
    @overload
    def GetPendingViewPRI() -> classPriWrapper: ...
    @overload
    def GetPrimaryPlayerController(self) -> PlayerControllerWrapper: ...
    @overload
    def GetPrimaryPlayerController() -> classPlayerControllerWrapper: ...
    @overload
    def GetRotateActorCameraLocationOffset(self) -> Vector: ...
    @overload
    def GetRotateActorCameraLocationOffset() -> structVector: ...
    @overload
    def GetRotateActorCameraOffset(self, DeltaTime: float, bSnap: int) -> Vector: ...
    @overload
    def GetRotateActorCameraOffset(float, unsignedlong) -> structVector: ...
    @overload
    def GetRotateActorCameraRotationOffset(self) -> Vector: ...
    @overload
    def GetRotateActorCameraRotationOffset() -> structVector: ...
    @overload
    def GetRotateActorCameraSide(self) -> int: ...
    @overload
    def GetRotateActorCameraSide() -> int: ...
    @overload
    def GetSelectedSpawnArchetype(self) -> int: ...
    @overload
    def GetSelectedSpawnArchetype() -> int: ...
    @overload
    def GetSpectatorCameraArchetype(self) -> BaseCameraWrapper: ...
    @overload
    def GetSpectatorCameraArchetype() -> classBaseCameraWrapper: ...
    @overload
    def GetTimeLastReplicatedMovePacket(self) -> float: ...
    @overload
    def GetTimeLastReplicatedMovePacket() -> float: ...
    @overload
    def GetTimeSinceLastMovePacket(self) -> float: ...
    @overload
    def GetTimeSinceLastMovePacket() -> float: ...
    @overload
    def GetTracedCrosshairActor(self) -> ActorWrapper: ...
    @overload
    def GetTracedCrosshairActor() -> classActorWrapper: ...
    @overload
    def GetVehicleInput(self) -> ControllerInput: ...
    @overload
    def GetVehicleInput() -> structControllerInput: ...
    @overload
    def GetVoiceFilter(self) -> int: ...
    @overload
    def GetVoiceFilter() -> unsignedchar: ...
    @overload
    def GetbAllowAsymmetricalMute(self) -> int: ...
    @overload
    def GetbAllowAsymmetricalMute() -> unsignedlong: ...
    @overload
    def GetbBoostPressed(self) -> int: ...
    @overload
    def GetbBoostPressed() -> unsignedlong: ...
    @overload
    def GetbHandbrakePressed(self) -> int: ...
    @overload
    def GetbHandbrakePressed() -> unsignedlong: ...
    @overload
    def GetbHasPitchedBack(self) -> int: ...
    @overload
    def GetbHasPitchedBack() -> unsignedlong: ...
    @overload
    def GetbJumpPressed(self) -> int: ...
    @overload
    def GetbJumpPressed() -> unsignedlong: ...
    @overload
    def GetbReceivedServerShutdownMessage(self) -> int: ...
    @overload
    def GetbReceivedServerShutdownMessage() -> unsignedlong: ...
    @overload
    def GetbResetCamera(self) -> int: ...
    @overload
    def GetbResetCamera() -> unsignedlong: ...
    @overload
    def GetbUseDebugInputs(self) -> int: ...
    @overload
    def GetbUseDebugInputs() -> unsignedlong: ...
    @overload
    def HandleAddBoostComponent(self, Boost: BoostWrapper) -> None: ...
    @overload
    def HandleAddBoostComponent(classBoostWrapper) -> void: ...
    @overload
    def HandleCarSet(self, InPRI: PriWrapper) -> None: ...
    @overload
    def HandleCarSet(classPriWrapper) -> void: ...
    @overload
    def HandleControllerLayoutChanged(self, InPRI: PriWrapper) -> None: ...
    @overload
    def HandleControllerLayoutChanged(classPriWrapper) -> void: ...
    def HandleGameDataSelected(self, PlaylistId: int, MutatorIndex: int) -> None: ...
    @overload
    def HandleGameEventChanged(self, InPRI: PriWrapper) -> None: ...
    @overload
    def HandleGameEventChanged(classPriWrapper) -> void: ...
    @overload
    def HandleJoinGameMigrationCompleted(self, bSuccess: int, FailReason: str) -> None: ...
    @overload
    def HandleJoinGameMigrationCompleted(unsignedlong, std) -> void: ...
    @overload
    def HandleMatchEnded(self, GameEvent: ServerWrapper) -> None: ...
    @overload
    def HandleMatchEnded(classServerWrapper) -> void: ...
    @overload
    def HandlePRICameraChanged(self, InPRI: PriWrapper) -> None: ...
    @overload
    def HandlePRICameraChanged(classPriWrapper) -> void: ...
    @overload
    def HandlePawnTypeChanged(self, InPRI: PriWrapper) -> None: ...
    @overload
    def HandlePawnTypeChanged(classPriWrapper) -> void: ...
    @overload
    def HandlePendingViewCarSet(self, InPRI: PriWrapper) -> None: ...
    @overload
    def HandlePendingViewCarSet(classPriWrapper) -> void: ...
    @overload
    def HandlePersistentCameraSet(self, InPRI: PriWrapper) -> None: ...
    @overload
    def HandlePersistentCameraSet(classPriWrapper) -> void: ...
    @overload
    def HandleReplaceBot(self, InPRI: PriWrapper) -> None: ...
    @overload
    def HandleReplaceBot(classPriWrapper) -> void: ...
    @overload
    def HandleStartNewRound(self, GameEvent: ServerWrapper) -> None: ...
    @overload
    def HandleStartNewRound(classServerWrapper) -> void: ...
    @overload
    def HandleTeamChanged(self, InPRI: PriXWrapper) -> None: ...
    @overload
    def HandleTeamChanged(classPriXWrapper) -> void: ...
    @overload
    def IdleKick2(self) -> None: ...
    @overload
    def IdleKick2() -> void: ...
    @overload
    def IgnoreMoveInput(self, bNewMoveInput: int) -> None: ...
    @overload
    def IgnoreMoveInput(unsignedlong) -> void: ...
    @overload
    def Interact(self) -> None: ...
    @overload
    def Interact() -> void: ...
    @overload
    def IsCommunicationFiltered(self, Filter: int, Other: PlayerControllerWrapper, bPreset: int) -> bool: ...
    @overload
    def IsCommunicationFiltered(unsignedchar, classPlayerControllerWrapper, unsignedlong) -> bool: ...
    @overload
    def IsExplictlyMuted(self, PlayerNetId: SteamID) -> bool: ...
    @overload
    def IsExplictlyMuted(structSteamID&) -> bool: ...
    @overload
    def ModifyEditorPower(self, Direction: int) -> None: ...
    @overload
    def ModifyEditorPower(int) -> void: ...
    @overload
    def NetClientInputRate(self, Rate: int) -> None: ...
    @overload
    def NetClientInputRate(int) -> void: ...
    @overload
    def NoReservationKick(self) -> None: ...
    @overload
    def NoReservationKick() -> void: ...
    @overload
    def NotifyGoalScored(self, ScoredOnTeam: int) -> None: ...
    @overload
    def NotifyGoalScored(int) -> void: ...
    @overload
    def OnOpenPauseMenu(self) -> None: ...
    @overload
    def OnOpenPauseMenu() -> void: ...
    @overload
    def OnReceivedPlayerAndPRI(self) -> None: ...
    @overload
    def OnReceivedPlayerAndPRI() -> void: ...
    @overload
    def PlayerMove(self, DeltaTime: float) -> None: ...
    @overload
    def PlayerMove(float) -> void: ...
    @overload
    def PressRearCamera(self) -> None: ...
    @overload
    def PressRearCamera() -> void: ...
    @overload
    def PressSecondaryCamera(self) -> None: ...
    @overload
    def PressSecondaryCamera() -> void: ...
    @overload
    def PushToTalk2(self) -> None: ...
    @overload
    def PushToTalk2() -> void: ...
    @overload
    def PushToTalkEnd(self) -> None: ...
    @overload
    def PushToTalkEnd() -> void: ...
    @overload
    def QueSaveReplay(self) -> None: ...
    @overload
    def QueSaveReplay() -> void: ...
    @overload
    def ReadyUp(self) -> None: ...
    @overload
    def ReadyUp() -> void: ...
    @overload
    def RefreshMutedPlayers(self, bForceRefresh: int) -> None: ...
    @overload
    def RefreshMutedPlayers(unsignedlong) -> void: ...
    @overload
    def ReleaseRearCamera(self) -> None: ...
    @overload
    def ReleaseRearCamera() -> void: ...
    @overload
    def ReleaseSecondaryCamera(self) -> None: ...
    @overload
    def ReleaseSecondaryCamera() -> void: ...
    @overload
    def RemoveActor(self) -> bool: ...
    @overload
    def RemoveActor() -> bool: ...
    @overload
    def ReplicateCameraRotation(self) -> None: ...
    @overload
    def ReplicateCameraRotation() -> void: ...
    @overload
    def ReplicateCameraSettings(self) -> None: ...
    @overload
    def ReplicateCameraSettings() -> void: ...
    @overload
    def ReplicateLevelSessionID(self) -> None: ...
    @overload
    def ReplicateLevelSessionID() -> void: ...
    @overload
    def ReplicateLoadout(self) -> None: ...
    @overload
    def ReplicateLoadout() -> void: ...
    @overload
    def ResetCameraMode(self) -> None: ...
    @overload
    def ResetCameraMode() -> void: ...
    @overload
    def ResetMouseCenter(self) -> None: ...
    @overload
    def ResetMouseCenter() -> void: ...
    @overload
    def ResetPlayerCheckpoint(self) -> None: ...
    @overload
    def ResetPlayerCheckpoint() -> void: ...
    @overload
    def ResetPlayerRun(self) -> None: ...
    @overload
    def ResetPlayerRun() -> void: ...
    @overload
    def RestoreEditorPawnOrientation(self) -> None: ...
    @overload
    def RestoreEditorPawnOrientation() -> void: ...
    @overload
    def RevertToDefaultCameraHUDInput(self) -> None: ...
    @overload
    def RevertToDefaultCameraHUDInput() -> void: ...
    @overload
    def Say_TA2(self, Message: str, ChatChannel: int, Recipient: SteamID, bPreset: int) -> None: ...
    @overload
    def Say_TA2(std, unsignedchar, structSteamID&, unsignedlong) -> void: ...
    @overload
    def SendPendingRPCs(self) -> None: ...
    @overload
    def SendPendingRPCs() -> void: ...
    @overload
    def ServerCreateMatchBroadcast(self, GameEvent: ServerWrapper) -> None: ...
    @overload
    def ServerCreateMatchBroadcast(classServerWrapper) -> void: ...
    @overload
    def ServerInitInputBuffer(self, Type: int) -> None: ...
    @overload
    def ServerInitInputBuffer(unsignedchar) -> void: ...
    @overload
    def ServerReportServer(self) -> None: ...
    @overload
    def ServerReportServer() -> void: ...
    @overload
    def ServerRequestSplitscreenJoin(self, PlayerID: SteamID, PlayerName: str) -> None: ...
    @overload
    def ServerRequestSplitscreenJoin(structSteamID&, std) -> void: ...
    @overload
    def ServerResetPlayer(self, bFullReset: int) -> None: ...
    @overload
    def ServerResetPlayer(unsignedlong) -> void: ...
    @overload
    def ServerSayInternal_TA(self, Message: str, ChatChannel: int, bPreset: int) -> None: ...
    @overload
    def ServerSayInternal_TA(std, unsignedchar, unsignedlong) -> void: ...
    @overload
    def ServerSay_TA(self, Message: str, ChatChannel: int, bPreset: int) -> None: ...
    @overload
    def ServerSay_TA(std, unsignedchar, unsignedlong) -> void: ...
    @overload
    def ServerSetChatFilter(self, InVoiceFilter: int) -> None: ...
    @overload
    def ServerSetChatFilter(unsignedchar) -> void: ...
    @overload
    def ServerSetVoiceFilter(self, InVoiceFilter: int) -> None: ...
    @overload
    def ServerSetVoiceFilter(unsignedchar) -> void: ...
    @overload
    def ServerTeleportCar(self, SpawnLocation: Vector, NewRotation: Rotator) -> None: ...
    @overload
    def ServerTeleportCar(structVector&, structRotator&) -> void: ...
    @overload
    def ServerUsePickup(self, Target: RBActorWrapper) -> None: ...
    @overload
    def ServerUsePickup(classRBActorWrapper) -> void: ...
    @overload
    def SetBallVelocityIncrementAmount(self, newBallVelocityIncrementAmount: float) -> None: ...
    @overload
    def SetBallVelocityIncrementAmount(float) -> void: ...
    @overload
    def SetBallVelocityIncrementFireCount(self, newBallVelocityIncrementFireCount: int) -> None: ...
    @overload
    def SetBallVelocityIncrementFireCount(int) -> void: ...
    @overload
    def SetBallVelocityIncrementFireCountMax(self, newBallVelocityIncrementFireCountMax: float) -> None: ...
    @overload
    def SetBallVelocityIncrementFireCountMax(float) -> void: ...
    @overload
    def SetBallVelocityIncrementSpeedDefault(self, newBallVelocityIncrementSpeedDefault: float) -> None: ...
    @overload
    def SetBallVelocityIncrementSpeedDefault(float) -> void: ...
    @overload
    def SetBallVelocityIncrementSpeedMax(self, newBallVelocityIncrementSpeedMax: float) -> None: ...
    @overload
    def SetBallVelocityIncrementSpeedMax(float) -> void: ...
    @overload
    def SetCar(self, newCar: CarWrapper) -> None: ...
    @overload
    def SetCar(classCarWrapper) -> void: ...
    @overload
    def SetChatFilter(self, newChatFilter: int) -> None: ...
    @overload
    def SetChatFilter(unsignedchar) -> void: ...
    @overload
    def SetConfiguredClientInputRate(self, newConfiguredClientInputRate: int) -> None: ...
    @overload
    def SetConfiguredClientInputRate(int) -> void: ...
    @overload
    def SetCrosshairTraceDistance(self, newCrosshairTraceDistance: float) -> None: ...
    @overload
    def SetCrosshairTraceDistance(float) -> void: ...
    @overload
    def SetDebugInputs(self, newDebugInputs: ControllerInput) -> None: ...
    @overload
    def SetDebugInputs(structControllerInput) -> void: ...
    @overload
    def SetDefaultCameraMode(self) -> None: ...
    @overload
    def SetDefaultCameraMode() -> void: ...
    @overload
    def SetDesiredCameraSide(self, newDesiredCameraSide: float) -> None: ...
    @overload
    def SetDesiredCameraSide(float) -> void: ...
    @overload
    def SetEditorCameraArchetype(self, newEditorCameraArchetype: BaseCameraWrapper) -> None: ...
    @overload
    def SetEditorCameraArchetype(classBaseCameraWrapper) -> void: ...
    @overload
    def SetEngineShare(self, newEngineShare: EngineTAWrapper) -> None: ...
    @overload
    def SetEngineShare(classEngineTAWrapper) -> void: ...
    @overload
    def SetFollowTarget(self, newFollowTarget: PriWrapper) -> None: ...
    @overload
    def SetFollowTarget(classPriWrapper) -> void: ...
    @overload
    def SetFollowTarget2(self, InTarget: PriWrapper) -> None: ...
    @overload
    def SetFollowTarget2(classPriWrapper) -> void: ...
    @overload
    def SetLastInputPitch(self, newLastInputPitch: float) -> None: ...
    @overload
    def SetLastInputPitch(float) -> void: ...
    @overload
    def SetLastInputPitchDown(self, newLastInputPitchDown: float) -> None: ...
    @overload
    def SetLastInputPitchDown(float) -> void: ...
    @overload
    def SetLastInputPitchUp(self, newLastInputPitchUp: float) -> None: ...
    @overload
    def SetLastInputPitchUp(float) -> void: ...
    @overload
    def SetLastInputYaw(self, newLastInputYaw: float) -> None: ...
    @overload
    def SetLastInputYaw(float) -> void: ...
    @overload
    def SetLastInputYawLeft(self, newLastInputYawLeft: float) -> None: ...
    @overload
    def SetLastInputYawLeft(float) -> void: ...
    @overload
    def SetLastInputYawRight(self, newLastInputYawRight: float) -> None: ...
    @overload
    def SetLastInputYawRight(float) -> void: ...
    @overload
    def SetLastInputs(self, newLastInputs: ControllerInput) -> None: ...
    @overload
    def SetLastInputs(structControllerInput) -> void: ...
    @overload
    def SetMaxClientInputRate(self, newMaxClientInputRate: int) -> None: ...
    @overload
    def SetMaxClientInputRate(int) -> void: ...
    @overload
    def SetMedianClientInputRate(self, newMedianClientInputRate: int) -> None: ...
    @overload
    def SetMedianClientInputRate(int) -> void: ...
    @overload
    def SetMinClientInputRate(self, newMinClientInputRate: int) -> None: ...
    @overload
    def SetMinClientInputRate(int) -> void: ...
    @overload
    def SetMinMoveActorGrabDistance(self, newMinMoveActorGrabDistance: float) -> None: ...
    @overload
    def SetMinMoveActorGrabDistance(float) -> void: ...
    @overload
    def SetMouseIncrementSpeed(self, newMouseIncrementSpeed: float) -> None: ...
    @overload
    def SetMouseIncrementSpeed(float) -> void: ...
    @overload
    def SetMouseInputMax(self, newMouseInputMax: float) -> None: ...
    @overload
    def SetMouseInputMax(float) -> void: ...
    @overload
    def SetMouseXDeadZone(self, newMouseXDeadZone: float) -> None: ...
    @overload
    def SetMouseXDeadZone(float) -> void: ...
    @overload
    def SetMouseXDeadZoneAir(self, newMouseXDeadZoneAir: float) -> None: ...
    @overload
    def SetMouseXDeadZoneAir(float) -> void: ...
    @overload
    def SetMouseYDeadZone(self, newMouseYDeadZone: float) -> None: ...
    @overload
    def SetMouseYDeadZone(float) -> void: ...
    @overload
    def SetMouseYDeadZoneAir(self, newMouseYDeadZoneAir: float) -> None: ...
    @overload
    def SetMouseYDeadZoneAir(float) -> void: ...
    @overload
    def SetMoveActorGrabIncrement(self, newMoveActorGrabIncrement: float) -> None: ...
    @overload
    def SetMoveActorGrabIncrement(float) -> void: ...
    @overload
    def SetMoveActorGrabOffset(self, newMoveActorGrabOffset: Vector) -> None: ...
    @overload
    def SetMoveActorGrabOffset(structVector) -> void: ...
    @overload
    def SetPRI(self, newPRI: PriWrapper) -> None: ...
    @overload
    def SetPRI(classPriWrapper) -> void: ...
    @overload
    def SetPawnTypeChangedTime(self, newPawnTypeChangedTime: float) -> None: ...
    @overload
    def SetPawnTypeChangedTime(float) -> void: ...
    @overload
    def SetPendingViewPRI(self, newPendingViewPRI: PriWrapper) -> None: ...
    @overload
    def SetPendingViewPRI(classPriWrapper) -> void: ...
    @overload
    def SetRotateActorCameraLocationOffset(self, newRotateActorCameraLocationOffset: Vector) -> None: ...
    @overload
    def SetRotateActorCameraLocationOffset(structVector) -> void: ...
    @overload
    def SetRotateActorCameraRotationOffset(self, newRotateActorCameraRotationOffset: Vector) -> None: ...
    @overload
    def SetRotateActorCameraRotationOffset(structVector) -> void: ...
    @overload
    def SetRotateActorCameraSide(self, newRotateActorCameraSide: int) -> None: ...
    @overload
    def SetRotateActorCameraSide(int) -> void: ...
    @overload
    def SetSelectedSpawnArchetype(self, newSelectedSpawnArchetype: int) -> None: ...
    @overload
    def SetSelectedSpawnArchetype(int) -> void: ...
    @overload
    def SetSpectatorCameraArchetype(self, newSpectatorCameraArchetype: BaseCameraWrapper) -> None: ...
    @overload
    def SetSpectatorCameraArchetype(classBaseCameraWrapper) -> void: ...
    @overload
    def SetTimeLastReplicatedMovePacket(self, newTimeLastReplicatedMovePacket: float) -> None: ...
    @overload
    def SetTimeLastReplicatedMovePacket(float) -> void: ...
    @overload
    def SetTimeSinceLastMovePacket(self, newTimeSinceLastMovePacket: float) -> None: ...
    @overload
    def SetTimeSinceLastMovePacket(float) -> void: ...
    @overload
    def SetTracedCrosshairActor(self, newTracedCrosshairActor: ActorWrapper) -> None: ...
    @overload
    def SetTracedCrosshairActor(classActorWrapper) -> void: ...
    @overload
    def SetUsingBehindView(self, bBehindView: int) -> None: ...
    @overload
    def SetUsingBehindView(unsignedlong) -> void: ...
    @overload
    def SetUsingFreecam(self, bFreecam: int) -> None: ...
    @overload
    def SetUsingFreecam(unsignedlong) -> void: ...
    @overload
    def SetUsingSecondaryCamera(self, bSecondaryCamera: int) -> None: ...
    @overload
    def SetUsingSecondaryCamera(unsignedlong) -> void: ...
    @overload
    def SetVehicleInput(self, newVehicleInput: ControllerInput) -> None: ...
    @overload
    def SetVehicleInput(structControllerInput) -> void: ...
    @overload
    def SetVoiceFilter(self, newVoiceFilter: int) -> None: ...
    @overload
    def SetVoiceFilter(unsignedchar) -> void: ...
    @overload
    def SetbAllowAsymmetricalMute(self, newbAllowAsymmetricalMute: int) -> None: ...
    @overload
    def SetbAllowAsymmetricalMute(unsignedlong) -> void: ...
    @overload
    def SetbBoostPressed(self, newbBoostPressed: int) -> None: ...
    @overload
    def SetbBoostPressed(unsignedlong) -> void: ...
    @overload
    def SetbHandbrakePressed(self, newbHandbrakePressed: int) -> None: ...
    @overload
    def SetbHandbrakePressed(unsignedlong) -> void: ...
    @overload
    def SetbHasPitchedBack(self, newbHasPitchedBack: int) -> None: ...
    @overload
    def SetbHasPitchedBack(unsignedlong) -> void: ...
    @overload
    def SetbJumpPressed(self, newbJumpPressed: int) -> None: ...
    @overload
    def SetbJumpPressed(unsignedlong) -> void: ...
    @overload
    def SetbReceivedServerShutdownMessage(self, newbReceivedServerShutdownMessage: int) -> None: ...
    @overload
    def SetbReceivedServerShutdownMessage(unsignedlong) -> void: ...
    @overload
    def SetbResetCamera(self, newbResetCamera: int) -> None: ...
    @overload
    def SetbResetCamera(unsignedlong) -> void: ...
    @overload
    def SetbUseDebugInputs(self, newbUseDebugInputs: int) -> None: ...
    @overload
    def SetbUseDebugInputs(unsignedlong) -> void: ...
    @overload
    def SetupLightBar(self) -> None: ...
    @overload
    def SetupLightBar() -> void: ...
    @overload
    def ShouldBeMuted(self, Other: PlayerControllerWrapper) -> bool: ...
    @overload
    def ShouldBeMuted(classPlayerControllerWrapper) -> bool: ...
    @overload
    def ShowAccountPicker(self) -> None: ...
    @overload
    def ShowAccountPicker() -> void: ...
    @overload
    def ShowControllerApplet(self) -> None: ...
    @overload
    def ShowControllerApplet() -> void: ...
    @overload
    def SpawnSelectedArchetype(self) -> None: ...
    @overload
    def SpawnSelectedArchetype() -> void: ...
    @overload
    def Spectate(self) -> None: ...
    @overload
    def Spectate() -> void: ...
    @overload
    def StopEditing(self) -> None: ...
    @overload
    def StopEditing() -> void: ...
    @overload
    def StopMovement(self, bOnlyIfNoAccel: int) -> None: ...
    @overload
    def StopMovement(unsignedlong) -> void: ...
    @overload
    def SwitchTeam(self) -> None: ...
    @overload
    def SwitchTeam() -> void: ...
    @overload
    def SwitchToEditPawn(self) -> None: ...
    @overload
    def SwitchToEditPawn() -> void: ...
    @overload
    def TargetSelectLeft(self) -> None: ...
    @overload
    def TargetSelectLeft() -> void: ...
    @overload
    def TargetSelectRight(self) -> None: ...
    @overload
    def TargetSelectRight() -> void: ...
    @overload
    def ToggleBetweenCarAndEditPawn(self) -> None: ...
    @overload
    def ToggleBetweenCarAndEditPawn() -> void: ...
    @overload
    def ToggleBoost(self, bBoost: int) -> None: ...
    @overload
    def ToggleBoost(unsignedlong) -> void: ...
    @overload
    def ToggleCameraPosition(self) -> None: ...
    @overload
    def ToggleCameraPosition() -> void: ...
    @overload
    def ToggleEditorRound(self) -> None: ...
    @overload
    def ToggleEditorRound() -> void: ...
    @overload
    def ToggleGrabActor(self) -> None: ...
    @overload
    def ToggleGrabActor() -> void: ...
    @overload
    def ToggleHandbrake(self, bHandbrake: int) -> None: ...
    @overload
    def ToggleHandbrake(unsignedlong) -> void: ...
    @overload
    def ToggleJump(self, bJump: int) -> None: ...
    @overload
    def ToggleJump(unsignedlong) -> void: ...
    @overload
    def ToggleRotateActor(self) -> None: ...
    @overload
    def ToggleRotateActor() -> void: ...
    @overload
    def UpdateCrosshair(self) -> None: ...
    @overload
    def UpdateCrosshair() -> void: ...
    @overload
    def UpdateRotatedActorOrientation(self, DeltaTime: float) -> None: ...
    @overload
    def UpdateRotatedActorOrientation(float) -> void: ...
    @overload
    def UpdateVoiceFilter(self) -> None: ...
    @overload
    def UpdateVoiceFilter() -> void: ...
    @overload
    def UsePickup2(self) -> None: ...
    @overload
    def UsePickup2() -> void: ...
    @overload
    def ZeroMoveInput(self) -> None: ...
    @overload
    def ZeroMoveInput() -> void: ...
    def assign(self, rhs: PlayerControllerWrapper) -> PlayerControllerWrapper: ...
    @overload
    def eventClientMutePlayer(self, PlayerNetId: SteamID, bAddToMuteList: int) -> None: ...
    @overload
    def eventClientMutePlayer(structSteamID&, unsignedlong) -> void: ...
    @overload
    def eventClientUnmutePlayer(self, PlayerNetId: SteamID) -> None: ...
    @overload
    def eventClientUnmutePlayer(structSteamID&) -> void: ...
    @overload
    def eventDestroyed(self) -> None: ...
    @overload
    def eventDestroyed() -> void: ...
    @overload
    def eventPostBeginPlay(self) -> None: ...
    @overload
    def eventPostBeginPlay() -> void: ...
    @overload
    def eventPreClientTravel(self, PendingURL: str, TravelType: int, bIsSeamlessTravel: int) -> bool: ...
    @overload
    def eventPreClientTravel(std, unsignedchar, unsignedlong) -> bool: ...
    @overload
    def eventReceivedPlayer(self) -> None: ...
    @overload
    def eventReceivedPlayer() -> void: ...
    @overload
    def eventSendClientAdjustment(self) -> None: ...
    @overload
    def eventSendClientAdjustment() -> void: ...
    @overload
    def eventServerMutePlayer(self, PlayerNetId: SteamID) -> None: ...
    @overload
    def eventServerMutePlayer(structSteamID&) -> void: ...
    @overload
    def eventServerUnmutePlayer(self, PlayerNetId: SteamID) -> None: ...
    @overload
    def eventServerUnmutePlayer(structSteamID&) -> void: ...
    @overload
    def eventTeleportCar(self, SpawnLocation: Vector, NewRotation: Rotator) -> None: ...
    @overload
    def eventTeleportCar(structVector&, structRotator&) -> void: ...

class PlayerReplicationInfoWrapper(ActorWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: PlayerReplicationInfoWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def CopyProperties(self, PRI: PlayerReplicationInfoWrapper) -> None: ...
    @overload
    def CopyProperties(classPlayerReplicationInfoWrapper) -> void: ...
    @overload
    def Duplicate(self) -> PlayerReplicationInfoWrapper: ...
    @overload
    def Duplicate() -> classPlayerReplicationInfoWrapper: ...
    @overload
    def GetDeaths(self) -> int: ...
    @overload
    def GetDeaths() -> int: ...
    @overload
    def GetExactPing(self) -> float: ...
    @overload
    def GetExactPing() -> float: ...
    @overload
    def GetKills(self) -> int: ...
    @overload
    def GetKills() -> int: ...
    @overload
    def GetNumLives(self) -> int: ...
    @overload
    def GetNumLives() -> int: ...
    @overload
    def GetOldName(self) -> UnrealStringWrapper: ...
    @overload
    def GetOldName() -> classUnrealStringWrapper: ...
    @overload
    def GetPing(self) -> int: ...
    @overload
    def GetPing() -> unsignedchar: ...
    @overload
    def GetPlayerID(self) -> int: ...
    @overload
    def GetPlayerID() -> int: ...
    @overload
    def GetPlayerName(self) -> UnrealStringWrapper: ...
    @overload
    def GetPlayerName() -> classUnrealStringWrapper: ...
    @overload
    def GetSavedNetworkAddress(self) -> UnrealStringWrapper: ...
    @overload
    def GetSavedNetworkAddress() -> classUnrealStringWrapper: ...
    @overload
    def GetScore(self) -> int: ...
    @overload
    def GetScore() -> int: ...
    @overload
    def GetStartTime(self) -> int: ...
    @overload
    def GetStartTime() -> int: ...
    @overload
    def GetStringSpectating(self) -> UnrealStringWrapper: ...
    @overload
    def GetStringSpectating() -> classUnrealStringWrapper: ...
    @overload
    def GetStringUnknown(self) -> UnrealStringWrapper: ...
    @overload
    def GetStringUnknown() -> classUnrealStringWrapper: ...
    @overload
    def GetTTSSpeaker(self) -> int: ...
    @overload
    def GetTTSSpeaker() -> unsignedchar: ...
    @overload
    def GetTeam(self) -> TeamInfoWrapper: ...
    @overload
    def GetTeam() -> classTeamInfoWrapper: ...
    @overload
    def GetTeamNum(self) -> int: ...
    @overload
    def GetTeamNum() -> unsignedchar: ...
    @overload
    def GetUniqueId(self) -> SteamID: ...
    @overload
    def GetUniqueId() -> structSteamID: ...
    @overload
    def GetbAdmin(self) -> int: ...
    @overload
    def GetbAdmin() -> unsignedlong: ...
    @overload
    def GetbBot(self) -> int: ...
    @overload
    def GetbBot() -> unsignedlong: ...
    @overload
    def GetbFromPreviousLevel(self) -> int: ...
    @overload
    def GetbFromPreviousLevel() -> unsignedlong: ...
    @overload
    def GetbIsInactive(self) -> int: ...
    @overload
    def GetbIsInactive() -> unsignedlong: ...
    @overload
    def GetbIsSpectator(self) -> int: ...
    @overload
    def GetbIsSpectator() -> unsignedlong: ...
    @overload
    def GetbOnlySpectator(self) -> int: ...
    @overload
    def GetbOnlySpectator() -> unsignedlong: ...
    @overload
    def GetbOutOfLives(self) -> int: ...
    @overload
    def GetbOutOfLives() -> unsignedlong: ...
    @overload
    def GetbReadyToPlay(self) -> int: ...
    @overload
    def GetbReadyToPlay() -> unsignedlong: ...
    @overload
    def GetbTimedOut(self) -> int: ...
    @overload
    def GetbTimedOut() -> unsignedlong: ...
    @overload
    def GetbUnregistered(self) -> int: ...
    @overload
    def GetbUnregistered() -> unsignedlong: ...
    @overload
    def GetbWaitingPlayer(self) -> int: ...
    @overload
    def GetbWaitingPlayer() -> unsignedlong: ...
    @overload
    def IncrementDeaths(self, Amt: int) -> None: ...
    @overload
    def IncrementDeaths(int) -> void: ...
    @overload
    def IsInvalidName(self) -> bool: ...
    @overload
    def IsInvalidName() -> bool: ...
    @overload
    def OverrideWith(self, PRI: PlayerReplicationInfoWrapper) -> None: ...
    @overload
    def OverrideWith(classPlayerReplicationInfoWrapper) -> void: ...
    @overload
    def RegisterPlayerWithSession(self) -> None: ...
    @overload
    def RegisterPlayerWithSession() -> void: ...
    @overload
    def RemoteUserDataReplicated(self) -> None: ...
    @overload
    def RemoteUserDataReplicated() -> void: ...
    @overload
    def Reset(self) -> None: ...
    @overload
    def Reset() -> void: ...
    @overload
    def SeamlessTravelTo(self, NewPRI: PlayerReplicationInfoWrapper) -> None: ...
    @overload
    def SeamlessTravelTo(classPlayerReplicationInfoWrapper) -> void: ...
    @overload
    def SetDeaths(self, newDeaths: int) -> None: ...
    @overload
    def SetDeaths(int) -> void: ...
    @overload
    def SetExactPing(self, newExactPing: float) -> None: ...
    @overload
    def SetExactPing(float) -> void: ...
    @overload
    def SetKills(self, newKills: int) -> None: ...
    @overload
    def SetKills(int) -> void: ...
    @overload
    def SetNumLives(self, newNumLives: int) -> None: ...
    @overload
    def SetNumLives(int) -> void: ...
    @overload
    def SetPing(self, newPing: int) -> None: ...
    @overload
    def SetPing(unsignedchar) -> void: ...
    @overload
    def SetPlayerID(self, newPlayerID: int) -> None: ...
    @overload
    def SetPlayerID(int) -> void: ...
    @overload
    def SetPlayerTeam(self, NewTeam: TeamInfoWrapper) -> None: ...
    @overload
    def SetPlayerTeam(classTeamInfoWrapper) -> void: ...
    @overload
    def SetScore(self, newScore: int) -> None: ...
    @overload
    def SetScore(int) -> void: ...
    @overload
    def SetStartTime(self, newStartTime: int) -> None: ...
    @overload
    def SetStartTime(int) -> void: ...
    @overload
    def SetTTSSpeaker(self, newTTSSpeaker: int) -> None: ...
    @overload
    def SetTTSSpeaker(unsignedchar) -> void: ...
    @overload
    def SetTeam(self, newTeam: TeamInfoWrapper) -> None: ...
    @overload
    def SetTeam(classTeamInfoWrapper) -> void: ...
    @overload
    def SetUniqueId(self, newUniqueId: SteamID) -> None: ...
    @overload
    def SetUniqueId(structSteamID) -> void: ...
    @overload
    def SetUniqueId2(self, PlayerUniqueId: SteamID) -> None: ...
    @overload
    def SetUniqueId2(structSteamID&) -> void: ...
    @overload
    def SetWaitingPlayer(self, B: int) -> None: ...
    @overload
    def SetWaitingPlayer(unsignedlong) -> void: ...
    @overload
    def SetbAdmin(self, newbAdmin: int) -> None: ...
    @overload
    def SetbAdmin(unsignedlong) -> void: ...
    @overload
    def SetbBot(self, newbBot: int) -> None: ...
    @overload
    def SetbBot(unsignedlong) -> void: ...
    @overload
    def SetbFromPreviousLevel(self, newbFromPreviousLevel: int) -> None: ...
    @overload
    def SetbFromPreviousLevel(unsignedlong) -> void: ...
    @overload
    def SetbIsInactive(self, newbIsInactive: int) -> None: ...
    @overload
    def SetbIsInactive(unsignedlong) -> void: ...
    @overload
    def SetbIsSpectator(self, newbIsSpectator: int) -> None: ...
    @overload
    def SetbIsSpectator(unsignedlong) -> void: ...
    @overload
    def SetbOnlySpectator(self, newbOnlySpectator: int) -> None: ...
    @overload
    def SetbOnlySpectator(unsignedlong) -> void: ...
    @overload
    def SetbOutOfLives(self, newbOutOfLives: int) -> None: ...
    @overload
    def SetbOutOfLives(unsignedlong) -> void: ...
    @overload
    def SetbReadyToPlay(self, newbReadyToPlay: int) -> None: ...
    @overload
    def SetbReadyToPlay(unsignedlong) -> void: ...
    @overload
    def SetbTimedOut(self, newbTimedOut: int) -> None: ...
    @overload
    def SetbTimedOut(unsignedlong) -> void: ...
    @overload
    def SetbUnregistered(self, newbUnregistered: int) -> None: ...
    @overload
    def SetbUnregistered(unsignedlong) -> void: ...
    @overload
    def SetbWaitingPlayer(self, newbWaitingPlayer: int) -> None: ...
    @overload
    def SetbWaitingPlayer(unsignedlong) -> void: ...
    @overload
    def Unregister2(self) -> None: ...
    @overload
    def Unregister2() -> void: ...
    @overload
    def UnregisterPlayerFromSession(self) -> None: ...
    @overload
    def UnregisterPlayerFromSession() -> void: ...
    @overload
    def UpdatePing(self, TimeStamp: float) -> None: ...
    @overload
    def UpdatePing(float) -> void: ...
    def assign(self, rhs: PlayerReplicationInfoWrapper) -> PlayerReplicationInfoWrapper: ...
    @overload
    def eventClientFillRemoteUserData(self) -> None: ...
    @overload
    def eventClientFillRemoteUserData() -> void: ...
    @overload
    def eventConstruct(self) -> None: ...
    @overload
    def eventConstruct() -> void: ...
    @overload
    def eventDestroyed(self) -> None: ...
    @overload
    def eventDestroyed() -> void: ...
    @overload
    def eventOnOwnerChanged(self) -> None: ...
    @overload
    def eventOnOwnerChanged() -> void: ...
    @overload
    def eventPostBeginPlay(self) -> None: ...
    @overload
    def eventPostBeginPlay() -> void: ...
    @overload
    def eventSetPlayerName(self, S: str) -> None: ...
    @overload
    def eventSetPlayerName(std) -> void: ...

class PredictionInfo:
    def __init__(self) -> None: ...
    @property
    def ArchTop(self) -> Any: ...
    @ArchTop.setter
    def ArchTop(self, val: Any) -> None: ...
    @property
    def ArchTopTime(self) -> Any: ...
    @ArchTopTime.setter
    def ArchTopTime(self, val: Any) -> None: ...
    @property
    def ArchTopVelocity(self) -> Any: ...
    @ArchTopVelocity.setter
    def ArchTopVelocity(self, val: Any) -> None: ...
    @property
    def Location(self) -> Any: ...
    @Location.setter
    def Location(self, val: Any) -> None: ...
    @property
    def Time(self) -> Any: ...
    @Time.setter
    def Time(self, val: Any) -> None: ...
    @property
    def Velocity(self) -> Any: ...
    @Velocity.setter
    def Velocity(self, val: Any) -> None: ...
    @property
    def bHitGround(self) -> Any: ...
    @property
    def bHitWall(self) -> Any: ...

class PriWrapper(PriXWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: PriWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def AddLocalPlayerToGameEvent(self) -> None: ...
    @overload
    def AddLocalPlayerToGameEvent() -> void: ...
    @overload
    def AreLoadoutsSet(self) -> bool: ...
    @overload
    def AreLoadoutsSet() -> bool: ...
    @overload
    def CanAwardTimeRestrictedStatEvent(self) -> bool: ...
    @overload
    def CanAwardTimeRestrictedStatEvent() -> bool: ...
    @overload
    def ClearBotReplacement(self) -> None: ...
    @overload
    def ClearBotReplacement() -> void: ...
    def ClientAchievementProgression(self, AchievementId: int, AchievementType: int, Progress: float, MaxProgress: float) -> None: ...
    @overload
    def ClientChangeTeamFailed(self, TeamNum: int) -> None: ...
    @overload
    def ClientChangeTeamFailed(int) -> void: ...
    @overload
    def ClientScoredGoal(self, BallHitLocation: Vector) -> None: ...
    @overload
    def ClientScoredGoal(structVector&) -> void: ...
    @overload
    def ClientUnlockAchievement(self, AchievementId: int, AchievementType: int) -> None: ...
    @overload
    def ClientUnlockAchievement(int, unsignedchar) -> void: ...
    @overload
    def CommitStats(self) -> None: ...
    @overload
    def CommitStats() -> void: ...
    @overload
    def EventCarPreUpdate(self, PRI: PriWrapper) -> None: ...
    @overload
    def EventCarPreUpdate(classPriWrapper) -> void: ...
    @overload
    def EventOwnerChanged(self, PRI: PriWrapper) -> None: ...
    @overload
    def EventOwnerChanged(classPriWrapper) -> void: ...
    def EventServerAchievementProgression(self, PRI: PriWrapper, AchievementId: int, AchievementType: int, Progress: float, MaxProgress: float) -> None: ...
    @overload
    def EventSpectatorShortcutChanged(self, PRI: PriWrapper) -> None: ...
    @overload
    def EventSpectatorShortcutChanged(classPriWrapper) -> void: ...
    @overload
    def EventStartVoteToForfeitDisabledChanged(self, PRI: PriWrapper) -> None: ...
    @overload
    def EventStartVoteToForfeitDisabledChanged(classPriWrapper) -> void: ...
    @overload
    def EventVanityChanged(self) -> None: ...
    @overload
    def EventVanityChanged() -> void: ...
    @overload
    def GetAirControlSensitivity(self) -> float: ...
    @overload
    def GetAirControlSensitivity() -> float: ...
    @overload
    def GetBallTouches(self) -> int: ...
    @overload
    def GetBallTouches() -> int: ...
    @overload
    def GetBoostPickups(self) -> int: ...
    @overload
    def GetBoostPickups() -> int: ...
    @overload
    def GetCameraPitch(self) -> int: ...
    @overload
    def GetCameraPitch() -> unsignedchar: ...
    @overload
    def GetCameraSettings(self) -> ProfileCameraSettings: ...
    @overload
    def GetCameraSettings() -> structProfileCameraSettings: ...
    @overload
    def GetCameraYaw(self) -> int: ...
    @overload
    def GetCameraYaw() -> unsignedchar: ...
    @overload
    def GetCar(self) -> CarWrapper: ...
    @overload
    def GetCar() -> classCarWrapper: ...
    @overload
    def GetCarTouches(self) -> int: ...
    @overload
    def GetCarTouches() -> int: ...
    @overload
    def GetClubID(self) -> int: ...
    @overload
    def GetClubID() -> unsignedlonglong: ...
    @overload
    def GetDodgeInputThreshold(self) -> float: ...
    @overload
    def GetDodgeInputThreshold() -> float: ...
    @overload
    def GetGameEvent(self) -> GameEventWrapper: ...
    @overload
    def GetGameEvent() -> classGameEventWrapper: ...
    @overload
    def GetLastTimeRestrictedStatEventTime(self) -> float: ...
    @overload
    def GetLastTimeRestrictedStatEventTime() -> float: ...
    @overload
    def GetMatchAssists(self) -> int: ...
    @overload
    def GetMatchAssists() -> int: ...
    @overload
    def GetMatchBonusXP(self) -> int: ...
    @overload
    def GetMatchBonusXP() -> int: ...
    @overload
    def GetMatchBreakoutDamage(self) -> int: ...
    @overload
    def GetMatchBreakoutDamage() -> int: ...
    @overload
    def GetMatchDemolishes(self) -> int: ...
    @overload
    def GetMatchDemolishes() -> int: ...
    @overload
    def GetMatchGoals(self) -> int: ...
    @overload
    def GetMatchGoals() -> int: ...
    @overload
    def GetMatchOwnGoals(self) -> int: ...
    @overload
    def GetMatchOwnGoals() -> int: ...
    @overload
    def GetMatchSaves(self) -> int: ...
    @overload
    def GetMatchSaves() -> int: ...
    @overload
    def GetMatchScore(self) -> int: ...
    @overload
    def GetMatchScore() -> int: ...
    @overload
    def GetMatchShots(self) -> int: ...
    @overload
    def GetMatchShots() -> int: ...
    @overload
    def GetMatchXP(self) -> int: ...
    @overload
    def GetMatchXP() -> int: ...
    @overload
    def GetMaxTimeTillItem(self) -> int: ...
    @overload
    def GetMaxTimeTillItem() -> int: ...
    @overload
    def GetNewFriendKey(self) -> None: ...
    @overload
    def GetNewFriendKey() -> void: ...
    @overload
    def GetNextTimeRestrictedStatEventAllowedTime(self) -> float: ...
    @overload
    def GetNextTimeRestrictedStatEventAllowedTime() -> float: ...
    @overload
    def GetPartyLeader(self) -> SteamID: ...
    @overload
    def GetPartyLeader() -> structSteamID: ...
    @overload
    def GetPawnType(self) -> int: ...
    @overload
    def GetPawnType() -> unsignedchar: ...
    @overload
    def GetPlayerHistoryValid(self) -> int: ...
    @overload
    def GetPlayerHistoryValid() -> unsignedlong: ...
    @overload
    def GetPublicIP(self) -> UnrealStringWrapper: ...
    @overload
    def GetPublicIP() -> classUnrealStringWrapper: ...
    @overload
    def GetReplacingBotPRI(self) -> PriWrapper: ...
    @overload
    def GetReplacingBotPRI() -> classPriWrapper: ...
    @overload
    def GetReplicatedGameEvent(self) -> GameEventWrapper: ...
    @overload
    def GetReplicatedGameEvent() -> classGameEventWrapper: ...
    @overload
    def GetReplicatedWorstNetQualityBeyondLatency(self) -> int: ...
    @overload
    def GetReplicatedWorstNetQualityBeyondLatency() -> unsignedchar: ...
    @overload
    def GetRespawnTimeRemaining(self) -> int: ...
    @overload
    def GetRespawnTimeRemaining() -> int: ...
    @overload
    def GetSpectatorShortcut(self) -> int: ...
    @overload
    def GetSpectatorShortcut() -> int: ...
    @overload
    def GetSteeringSensitivity(self) -> float: ...
    @overload
    def GetSteeringSensitivity() -> float: ...
    @overload
    def GetTimeTillItem(self) -> int: ...
    @overload
    def GetTimeTillItem() -> int: ...
    @overload
    def GetTotalGameTimePlayed(self) -> float: ...
    @overload
    def GetTotalGameTimePlayed() -> float: ...
    @overload
    def GetWaitingStartTime(self) -> int: ...
    @overload
    def GetWaitingStartTime() -> int: ...
    @overload
    def GetbBusy(self) -> int: ...
    @overload
    def GetbBusy() -> unsignedlong: ...
    @overload
    def GetbIsInSplitScreen(self) -> int: ...
    @overload
    def GetbIsInSplitScreen() -> unsignedlong: ...
    @overload
    def GetbLoadoutSet(self) -> int: ...
    @overload
    def GetbLoadoutSet() -> unsignedlong: ...
    @overload
    def GetbLoadoutsSet(self) -> int: ...
    @overload
    def GetbLoadoutsSet() -> unsignedlong: ...
    @overload
    def GetbMatchAdmin(self) -> int: ...
    @overload
    def GetbMatchAdmin() -> unsignedlong: ...
    @overload
    def GetbMatchMVP(self) -> int: ...
    @overload
    def GetbMatchMVP() -> unsignedlong: ...
    @overload
    def GetbOnlineLoadoutSet(self) -> int: ...
    @overload
    def GetbOnlineLoadoutSet() -> unsignedlong: ...
    @overload
    def GetbOnlineLoadoutsSet(self) -> int: ...
    @overload
    def GetbOnlineLoadoutsSet() -> unsignedlong: ...
    @overload
    def GetbReady(self) -> int: ...
    @overload
    def GetbReady() -> unsignedlong: ...
    @overload
    def GetbStartVoteToForfeitDisabled(self) -> int: ...
    @overload
    def GetbStartVoteToForfeitDisabled() -> unsignedlong: ...
    @overload
    def GetbTeamPaintSet(self) -> int: ...
    @overload
    def GetbTeamPaintSet() -> unsignedlong: ...
    @overload
    def GetbUsingBehindView(self) -> int: ...
    @overload
    def GetbUsingBehindView() -> unsignedlong: ...
    @overload
    def GetbUsingFreecam(self) -> int: ...
    @overload
    def GetbUsingFreecam() -> unsignedlong: ...
    @overload
    def GetbUsingItems(self) -> int: ...
    @overload
    def GetbUsingItems() -> unsignedlong: ...
    @overload
    def GetbUsingSecondaryCamera(self) -> int: ...
    @overload
    def GetbUsingSecondaryCamera() -> unsignedlong: ...
    @overload
    def HandleAirControl(self, AirControlComp: AirControlComponentWrapper) -> None: ...
    @overload
    def HandleAirControl(classAirControlComponentWrapper) -> void: ...
    @overload
    def InitLoadoutAttributesForTeam(self, PRI: PriXWrapper) -> None: ...
    @overload
    def InitLoadoutAttributesForTeam(classPriXWrapper) -> void: ...
    @overload
    def IsClientPlayerPRI(self) -> bool: ...
    @overload
    def IsClientPlayerPRI() -> bool: ...
    @overload
    def IsEditor(self) -> bool: ...
    @overload
    def IsEditor() -> bool: ...
    @overload
    def IsInWarmUpMode(self) -> bool: ...
    @overload
    def IsInWarmUpMode() -> bool: ...
    @overload
    def IsInvalidName(self) -> bool: ...
    @overload
    def IsInvalidName() -> bool: ...
    @overload
    def IsLocalPlayerPRI(self) -> bool: ...
    @overload
    def IsLocalPlayerPRI() -> bool: ...
    @overload
    def IsPlayer(self) -> bool: ...
    @overload
    def IsPlayer() -> bool: ...
    @overload
    def IsSpectator(self) -> bool: ...
    @overload
    def IsSpectator() -> bool: ...
    @overload
    def NotifyWonMVP(self) -> None: ...
    @overload
    def NotifyWonMVP() -> void: ...
    @overload
    def OnLoadoutsOnlineSet(self) -> None: ...
    @overload
    def OnLoadoutsOnlineSet() -> void: ...
    @overload
    def OnLoadoutsSet2(self) -> None: ...
    @overload
    def OnLoadoutsSet2() -> void: ...
    @overload
    def OnLoadoutsSetInternal(self) -> None: ...
    @overload
    def OnLoadoutsSetInternal() -> void: ...
    @overload
    def OnMVPChange(self) -> None: ...
    @overload
    def OnMVPChange() -> void: ...
    @overload
    def OnMatchAdmin(self) -> None: ...
    @overload
    def OnMatchAdmin() -> void: ...
    @overload
    def OnPartyLeaderChanged(self) -> None: ...
    @overload
    def OnPartyLeaderChanged() -> void: ...
    @overload
    def OnPawnTypeChanged(self) -> None: ...
    @overload
    def OnPawnTypeChanged() -> void: ...
    @overload
    def OnRep_ClientScorePoint(self) -> None: ...
    @overload
    def OnRep_ClientScorePoint() -> void: ...
    @overload
    def OnRep_SteeringSensitivity(self) -> None: ...
    @overload
    def OnRep_SteeringSensitivity() -> void: ...
    @overload
    def OnRep_UniqueId(self) -> None: ...
    @overload
    def OnRep_UniqueId() -> void: ...
    @overload
    def OnReplacingBotPRIChanged(self) -> None: ...
    @overload
    def OnReplacingBotPRIChanged() -> void: ...
    @overload
    def OnRespawnTimeRemainingChanged(self) -> None: ...
    @overload
    def OnRespawnTimeRemainingChanged() -> void: ...
    @overload
    def OnScoredGoal(self, BallHitLocation: Vector) -> None: ...
    @overload
    def OnScoredGoal(structVector&) -> void: ...
    @overload
    def OnSkillTierChanged(self) -> None: ...
    @overload
    def OnSkillTierChanged() -> void: ...
    @overload
    def OnSpectatorShortcutChanged(self) -> None: ...
    @overload
    def OnSpectatorShortcutChanged() -> void: ...
    @overload
    def OnSplitScreenStatusChanged(self) -> None: ...
    @overload
    def OnSplitScreenStatusChanged() -> void: ...
    @overload
    def OnStartVoteToForfeitDisabledChanged(self) -> None: ...
    @overload
    def OnStartVoteToForfeitDisabledChanged() -> void: ...
    @overload
    def OnTeamChanged(self) -> None: ...
    @overload
    def OnTeamChanged() -> void: ...
    @overload
    def OnTitleChanged(self) -> None: ...
    @overload
    def OnTitleChanged() -> void: ...
    @overload
    def OnUniqueIdChanged(self) -> None: ...
    @overload
    def OnUniqueIdChanged() -> void: ...
    @overload
    def RecordTimeRestrictedStatEvent(self) -> None: ...
    @overload
    def RecordTimeRestrictedStatEvent() -> void: ...
    @overload
    def RemoveCertifiedProductStat(self, InstanceID: int) -> None: ...
    @overload
    def RemoveCertifiedProductStat(unsignedlonglong) -> void: ...
    @overload
    def RemovePoints(self, Points: int) -> None: ...
    @overload
    def RemovePoints(int) -> void: ...
    @overload
    def ReplicatePodiumTitles(self) -> None: ...
    @overload
    def ReplicatePodiumTitles() -> void: ...
    @overload
    def ReplicateSkillTier(self, NewTier: int) -> None: ...
    @overload
    def ReplicateSkillTier(int) -> void: ...
    @overload
    def ReportCheater(self, Reason: str) -> None: ...
    @overload
    def ReportCheater(std) -> void: ...
    @overload
    def ResetScore(self) -> None: ...
    @overload
    def ResetScore() -> void: ...
    @overload
    def ResetTimeRestrictedStatEvent(self) -> None: ...
    @overload
    def ResetTimeRestrictedStatEvent() -> void: ...
    @overload
    def ScorePoint2(self, AdditionalScore: int) -> None: ...
    @overload
    def ScorePoint2(int) -> void: ...
    @overload
    def ServerChangeTeam(self, TeamNum: int) -> None: ...
    @overload
    def ServerChangeTeam(int) -> void: ...
    @overload
    def ServerMatchAdminSetPaused(self, bPause: int) -> None: ...
    @overload
    def ServerMatchAdminSetPaused(unsignedlong) -> void: ...
    def ServerMatchAdminSetScoreAndTime(self, NewScoreTeam0: int, NewScoreTeam1: int, SecondsRemaining: int, bOverTime: int, bRestartRound: int) -> None: ...
    @overload
    def ServerReadyUp(self) -> None: ...
    @overload
    def ServerReadyUp() -> void: ...
    @overload
    def ServerSetPartyLeader(self, InPartyLeader: SteamID, bInParty: int) -> None: ...
    @overload
    def ServerSetPartyLeader(structSteamID&, unsignedlong) -> void: ...
    @overload
    def ServerSetPlayerActivatedFX(self, FX: FXActorWrapper) -> None: ...
    @overload
    def ServerSetPlayerActivatedFX(classFXActorWrapper) -> void: ...
    @overload
    def ServerSetPlayerHistoryKey(self, HistoryKeyArray: int) -> None: ...
    @overload
    def ServerSetPlayerHistoryKey(unsignedchar*) -> void: ...
    @overload
    def ServerSetPublicIP(self, IP: str) -> None: ...
    @overload
    def ServerSetPublicIP(std) -> void: ...
    def ServerSetUserCarPreferences(self, NewDodgeThreshold: float, NewSteeringSensitivity: float, NewAirControlSensitivity: float) -> None: ...
    @overload
    def ServerSpectate(self) -> None: ...
    @overload
    def ServerSpectate() -> void: ...
    @overload
    def ServerSplitScreenStatusChanged(self, bInSplitScreen: int) -> None: ...
    @overload
    def ServerSplitScreenStatusChanged(unsignedlong) -> void: ...
    @overload
    def ServerVoteToForfeit(self) -> None: ...
    @overload
    def ServerVoteToForfeit() -> void: ...
    @overload
    def SetAirControlSensitivity(self, newAirControlSensitivity: float) -> None: ...
    @overload
    def SetAirControlSensitivity(float) -> void: ...
    @overload
    def SetBallTouches(self, newBallTouches: int) -> None: ...
    @overload
    def SetBallTouches(int) -> void: ...
    @overload
    def SetBoostPickups(self, newBoostPickups: int) -> None: ...
    @overload
    def SetBoostPickups(int) -> void: ...
    @overload
    def SetCameraPitch(self, newCameraPitch: int) -> None: ...
    @overload
    def SetCameraPitch(unsignedchar) -> void: ...
    @overload
    def SetCameraSettings(self, newCameraSettings: ProfileCameraSettings) -> None: ...
    @overload
    def SetCameraSettings(structProfileCameraSettings) -> void: ...
    @overload
    def SetCameraYaw(self, newCameraYaw: int) -> None: ...
    @overload
    def SetCameraYaw(unsignedchar) -> void: ...
    @overload
    def SetCar(self, newCar: CarWrapper) -> None: ...
    @overload
    def SetCar(classCarWrapper) -> void: ...
    @overload
    def SetCar2(self, NewCar: CarWrapper) -> None: ...
    @overload
    def SetCar2(classCarWrapper) -> void: ...
    @overload
    def SetCarTouches(self, newCarTouches: int) -> None: ...
    @overload
    def SetCarTouches(int) -> void: ...
    @overload
    def SetClubID(self, newClubID: int) -> None: ...
    @overload
    def SetClubID(unsignedlonglong) -> void: ...
    @overload
    def SetDodgeInputThreshold(self, newDodgeInputThreshold: float) -> None: ...
    @overload
    def SetDodgeInputThreshold(float) -> void: ...
    @overload
    def SetGameEvent(self, newGameEvent: GameEventWrapper) -> None: ...
    @overload
    def SetGameEvent(classGameEventWrapper) -> void: ...
    @overload
    def SetLastTimeRestrictedStatEventTime(self, newLastTimeRestrictedStatEventTime: float) -> None: ...
    @overload
    def SetLastTimeRestrictedStatEventTime(float) -> void: ...
    @overload
    def SetMatchAdmin(self, bIsMatchAdmin: int) -> None: ...
    @overload
    def SetMatchAdmin(unsignedlong) -> void: ...
    @overload
    def SetMatchAssists(self, newMatchAssists: int) -> None: ...
    @overload
    def SetMatchAssists(int) -> void: ...
    @overload
    def SetMatchBonusXP(self, newMatchBonusXP: int) -> None: ...
    @overload
    def SetMatchBonusXP(int) -> void: ...
    @overload
    def SetMatchBreakoutDamage(self, newMatchBreakoutDamage: int) -> None: ...
    @overload
    def SetMatchBreakoutDamage(int) -> void: ...
    @overload
    def SetMatchDemolishes(self, newMatchDemolishes: int) -> None: ...
    @overload
    def SetMatchDemolishes(int) -> void: ...
    @overload
    def SetMatchGoals(self, newMatchGoals: int) -> None: ...
    @overload
    def SetMatchGoals(int) -> void: ...
    @overload
    def SetMatchOwnGoals(self, newMatchOwnGoals: int) -> None: ...
    @overload
    def SetMatchOwnGoals(int) -> void: ...
    @overload
    def SetMatchSaves(self, newMatchSaves: int) -> None: ...
    @overload
    def SetMatchSaves(int) -> void: ...
    @overload
    def SetMatchScore(self, newMatchScore: int) -> None: ...
    @overload
    def SetMatchScore(int) -> void: ...
    @overload
    def SetMatchShots(self, newMatchShots: int) -> None: ...
    @overload
    def SetMatchShots(int) -> void: ...
    @overload
    def SetMaxTimeTillItem(self, newMaxTimeTillItem: int) -> None: ...
    @overload
    def SetMaxTimeTillItem(int) -> void: ...
    @overload
    def SetNextTimeRestrictedStatEventAllowedTime(self, newNextTimeRestrictedStatEventAllowedTime: float) -> None: ...
    @overload
    def SetNextTimeRestrictedStatEventAllowedTime(float) -> void: ...
    @overload
    def SetPartyLeader(self, newPartyLeader: SteamID) -> None: ...
    @overload
    def SetPartyLeader(structSteamID) -> void: ...
    @overload
    def SetPartyLeader2(self, InPartyLeader: SteamID, bInParty: int) -> None: ...
    @overload
    def SetPartyLeader2(structSteamID&, unsignedlong) -> void: ...
    @overload
    def SetPawnType(self, newPawnType: int) -> None: ...
    @overload
    def SetPawnType(unsignedchar) -> void: ...
    @overload
    def SetPawnType2(self, NewPawnType: int) -> None: ...
    @overload
    def SetPawnType2(unsignedchar) -> void: ...
    @overload
    def SetPlayerHistoryValid(self, newPlayerHistoryValid: int) -> None: ...
    @overload
    def SetPlayerHistoryValid(unsignedlong) -> void: ...
    @overload
    def SetReady(self, bNewReady: int) -> None: ...
    @overload
    def SetReady(unsignedlong) -> void: ...
    @overload
    def SetReplacingBotPRI(self, newReplacingBotPRI: PriWrapper) -> None: ...
    @overload
    def SetReplacingBotPRI(classPriWrapper) -> void: ...
    @overload
    def SetReplicatedGameEvent(self, newReplicatedGameEvent: GameEventWrapper) -> None: ...
    @overload
    def SetReplicatedGameEvent(classGameEventWrapper) -> void: ...
    @overload
    def SetReplicatedWorstNetQualityBeyondLatency(self, newReplicatedWorstNetQualityBeyondLatency: int) -> None: ...
    @overload
    def SetReplicatedWorstNetQualityBeyondLatency(unsignedchar) -> void: ...
    @overload
    def SetRespawnTime2(self, NewTime: int) -> None: ...
    @overload
    def SetRespawnTime2(int) -> void: ...
    @overload
    def SetRespawnTimeRemaining(self, newRespawnTimeRemaining: int) -> None: ...
    @overload
    def SetRespawnTimeRemaining(int) -> void: ...
    @overload
    def SetSpectatorShortcut(self, newSpectatorShortcut: int) -> None: ...
    @overload
    def SetSpectatorShortcut(int) -> void: ...
    @overload
    def SetSpectatorShortcut2(self, InShortcut: int) -> None: ...
    @overload
    def SetSpectatorShortcut2(int) -> void: ...
    @overload
    def SetStartVoteToForfeitDisabled(self, bDisabled: int) -> None: ...
    @overload
    def SetStartVoteToForfeitDisabled(unsignedlong) -> void: ...
    @overload
    def SetSteeringSensitivity(self, newSteeringSensitivity: float) -> None: ...
    @overload
    def SetSteeringSensitivity(float) -> void: ...
    @overload
    def SetTimeTillItem(self, newTimeTillItem: int) -> None: ...
    @overload
    def SetTimeTillItem(int) -> void: ...
    @overload
    def SetTotalGameTimePlayed(self, newTotalGameTimePlayed: float) -> None: ...
    @overload
    def SetTotalGameTimePlayed(float) -> void: ...
    def SetUserCarPreferences(self, NewDodgeThreshold: float, NewSteeringSensitivity: float, NewAirControlSensitivity: float) -> None: ...
    @overload
    def SetWaitingPlayer(self, B: int) -> None: ...
    @overload
    def SetWaitingPlayer(unsignedlong) -> void: ...
    @overload
    def SetWaitingStartTime(self, newWaitingStartTime: int) -> None: ...
    @overload
    def SetWaitingStartTime(int) -> void: ...
    @overload
    def SetWaitingStartTime2(self) -> None: ...
    @overload
    def SetWaitingStartTime2() -> void: ...
    @overload
    def SetbBusy(self, newbBusy: int) -> None: ...
    @overload
    def SetbBusy(unsignedlong) -> void: ...
    @overload
    def SetbIsInSplitScreen(self, newbIsInSplitScreen: int) -> None: ...
    @overload
    def SetbIsInSplitScreen(unsignedlong) -> void: ...
    @overload
    def SetbLoadoutSet(self, newbLoadoutSet: int) -> None: ...
    @overload
    def SetbLoadoutSet(unsignedlong) -> void: ...
    @overload
    def SetbLoadoutsSet(self, newbLoadoutsSet: int) -> None: ...
    @overload
    def SetbLoadoutsSet(unsignedlong) -> void: ...
    @overload
    def SetbMatchAdmin(self, newbMatchAdmin: int) -> None: ...
    @overload
    def SetbMatchAdmin(unsignedlong) -> void: ...
    @overload
    def SetbMatchMVP(self, newbMatchMVP: int) -> None: ...
    @overload
    def SetbMatchMVP(unsignedlong) -> void: ...
    @overload
    def SetbOnlineLoadoutSet(self, newbOnlineLoadoutSet: int) -> None: ...
    @overload
    def SetbOnlineLoadoutSet(unsignedlong) -> void: ...
    @overload
    def SetbOnlineLoadoutsSet(self, newbOnlineLoadoutsSet: int) -> None: ...
    @overload
    def SetbOnlineLoadoutsSet(unsignedlong) -> void: ...
    @overload
    def SetbReady(self, newbReady: int) -> None: ...
    @overload
    def SetbReady(unsignedlong) -> void: ...
    @overload
    def SetbStartVoteToForfeitDisabled(self, newbStartVoteToForfeitDisabled: int) -> None: ...
    @overload
    def SetbStartVoteToForfeitDisabled(unsignedlong) -> void: ...
    @overload
    def SetbTeamPaintSet(self, newbTeamPaintSet: int) -> None: ...
    @overload
    def SetbTeamPaintSet(unsignedlong) -> void: ...
    @overload
    def SetbUsingBehindView(self, newbUsingBehindView: int) -> None: ...
    @overload
    def SetbUsingBehindView(unsignedlong) -> void: ...
    @overload
    def SetbUsingFreecam(self, newbUsingFreecam: int) -> None: ...
    @overload
    def SetbUsingFreecam(unsignedlong) -> void: ...
    @overload
    def SetbUsingItems(self, newbUsingItems: int) -> None: ...
    @overload
    def SetbUsingItems(unsignedlong) -> void: ...
    @overload
    def SetbUsingSecondaryCamera(self, newbUsingSecondaryCamera: int) -> None: ...
    @overload
    def SetbUsingSecondaryCamera(unsignedlong) -> void: ...
    @overload
    def ShouldBroadCastWelcomeMessage(self, bExiting: int) -> bool: ...
    @overload
    def ShouldBroadCastWelcomeMessage(unsignedlong) -> bool: ...
    @overload
    def ShouldValidateOnlineProducts(self) -> bool: ...
    @overload
    def ShouldValidateOnlineProducts() -> bool: ...
    @overload
    def SyncPlayerTitle(self) -> None: ...
    @overload
    def SyncPlayerTitle() -> void: ...
    @overload
    def Unregister(self) -> None: ...
    @overload
    def Unregister() -> void: ...
    @overload
    def UpdateCarLocalPlayer(self) -> None: ...
    @overload
    def UpdateCarLocalPlayer() -> void: ...
    @overload
    def UpdateFromLoadout(self) -> None: ...
    @overload
    def UpdateFromLoadout() -> void: ...
    @overload
    def UpdateOnlineProductStats(self) -> None: ...
    @overload
    def UpdateOnlineProductStats() -> void: ...
    @overload
    def UpdatePartyStatus(self) -> None: ...
    @overload
    def UpdatePartyStatus() -> void: ...
    @overload
    def UpdatePlayerAvatarBorder(self) -> None: ...
    @overload
    def UpdatePlayerAvatarBorder() -> void: ...
    @overload
    def UpdatePlayerBanner(self) -> None: ...
    @overload
    def UpdatePlayerBanner() -> void: ...
    @overload
    def UpdateSplitScreenStatus(self) -> None: ...
    @overload
    def UpdateSplitScreenStatus() -> void: ...
    @overload
    def UpdateTitle2(self) -> None: ...
    @overload
    def UpdateTitle2() -> void: ...
    @overload
    def UpdateTitleFromLoadout(self) -> None: ...
    @overload
    def UpdateTitleFromLoadout() -> void: ...
    @overload
    def UpdateUserCarPreferences(self, AirControlComponent: AirControlComponentWrapper) -> None: ...
    @overload
    def UpdateUserCarPreferences(classAirControlComponentWrapper) -> void: ...
    @overload
    def ValidateLoadoutDLC(self) -> None: ...
    @overload
    def ValidateLoadoutDLC() -> void: ...
    @overload
    def ValidateLoadoutSlots(self) -> bool: ...
    @overload
    def ValidateLoadoutSlots() -> bool: ...
    @overload
    def ValidateLoadoutTeamPaints(self) -> bool: ...
    @overload
    def ValidateLoadoutTeamPaints() -> bool: ...
    def ValidateUserFloat(self, Reason: str, NewValue: float, Min: float, Max: float) -> float: ...
    def ValidateUserInt(self, Reason: str, NewValue: int, Min: int, Max: int) -> int: ...
    @overload
    def __ClubID__ChangeNotifyFunc(self) -> None: ...
    @overload
    def __ClubID__ChangeNotifyFunc() -> void: ...
    @overload
    def __PREI__ChangeNotifyFunc(self) -> None: ...
    @overload
    def __PREI__ChangeNotifyFunc() -> void: ...
    @overload
    def __ReplicatedWorstNetQualityBeyondLatency__ChangeNotifyFunc(self) -> None: ...
    @overload
    def __ReplicatedWorstNetQualityBeyondLatency__ChangeNotifyFunc() -> void: ...
    def assign(self, rhs: PriWrapper) -> PriWrapper: ...
    @overload
    def eventDestroyed(self) -> None: ...
    @overload
    def eventDestroyed() -> void: ...

class PriXWrapper(PlayerReplicationInfoWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: PriXWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def EventDestroyed(self, PRI: PriXWrapper) -> None: ...
    @overload
    def EventDestroyed(classPriXWrapper) -> void: ...
    @overload
    def EventPlayerNameChanged(self, PRI: PriXWrapper) -> None: ...
    @overload
    def EventPlayerNameChanged(classPriXWrapper) -> void: ...
    @overload
    def EventTeamChanged(self, PRI: PriXWrapper) -> None: ...
    @overload
    def EventTeamChanged(classPriXWrapper) -> void: ...
    @overload
    def EventUniqueIdChanged(self, PRI: PriXWrapper) -> None: ...
    @overload
    def EventUniqueIdChanged(classPriXWrapper) -> void: ...
    @overload
    def OnTeamChanged(self) -> None: ...
    @overload
    def OnTeamChanged() -> void: ...
    @overload
    def OnUniqueIdChanged(self) -> None: ...
    @overload
    def OnUniqueIdChanged() -> void: ...
    @overload
    def RegisterPlayerWithSession(self) -> None: ...
    @overload
    def RegisterPlayerWithSession() -> void: ...
    @overload
    def SetPlayerTeam(self, NewTeam: TeamInfoWrapper) -> None: ...
    @overload
    def SetPlayerTeam(classTeamInfoWrapper) -> void: ...
    @overload
    def SetUniqueId(self, PlayerUniqueId: SteamID) -> None: ...
    @overload
    def SetUniqueId(structSteamID&) -> void: ...
    @overload
    def UnregisterPlayerFromSession(self) -> None: ...
    @overload
    def UnregisterPlayerFromSession() -> void: ...
    def assign(self, rhs: PriXWrapper) -> PriXWrapper: ...
    @overload
    def eventDestroyed(self) -> None: ...
    @overload
    def eventDestroyed() -> void: ...
    @overload
    def eventOnOwnerChanged(self) -> None: ...
    @overload
    def eventOnOwnerChanged() -> void: ...
    @overload
    def eventSetPlayerName(self, S: str) -> None: ...
    @overload
    def eventSetPlayerName(std) -> void: ...

class PrimitiveComponentWrapper(ObjectWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: PrimitiveComponentWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    def AddRadialForce(self, Origin: Vector, Radius: float, Strength: float, Falloff: int) -> None: ...
    def AddRadialImpulse(self, Origin: Vector, Radius: float, Strength: float, Falloff: int, bVelChange: int) -> None: ...
    @overload
    def GetAbsoluteRotation(self) -> int: ...
    @overload
    def GetAbsoluteRotation() -> unsignedlong: ...
    @overload
    def GetAbsoluteScale(self) -> int: ...
    @overload
    def GetAbsoluteScale() -> unsignedlong: ...
    @overload
    def GetAbsoluteTranslation(self) -> int: ...
    @overload
    def GetAbsoluteTranslation() -> unsignedlong: ...
    @overload
    def GetAlwaysCheckCollision(self) -> int: ...
    @overload
    def GetAlwaysCheckCollision() -> unsignedlong: ...
    @overload
    def GetAlwaysLoadOnClient(self) -> int: ...
    @overload
    def GetAlwaysLoadOnClient() -> unsignedlong: ...
    @overload
    def GetAlwaysLoadOnServer(self) -> int: ...
    @overload
    def GetAlwaysLoadOnServer() -> unsignedlong: ...
    @overload
    def GetBlockActors(self) -> int: ...
    @overload
    def GetBlockActors() -> unsignedlong: ...
    @overload
    def GetBlockNonZeroExtent(self) -> int: ...
    @overload
    def GetBlockNonZeroExtent() -> unsignedlong: ...
    @overload
    def GetBlockRigidBody(self) -> int: ...
    @overload
    def GetBlockRigidBody() -> unsignedlong: ...
    @overload
    def GetBlockZeroExtent(self) -> int: ...
    @overload
    def GetBlockZeroExtent() -> unsignedlong: ...
    @overload
    def GetBoundsScale(self) -> float: ...
    @overload
    def GetBoundsScale() -> float: ...
    @overload
    def GetCanBlockCamera(self) -> int: ...
    @overload
    def GetCanBlockCamera() -> unsignedlong: ...
    @overload
    def GetCastShadow(self) -> int: ...
    @overload
    def GetCastShadow() -> unsignedlong: ...
    @overload
    def GetCollideActors(self) -> int: ...
    @overload
    def GetCollideActors() -> unsignedlong: ...
    @overload
    def GetHiddenGame(self) -> int: ...
    @overload
    def GetHiddenGame() -> unsignedlong: ...
    @overload
    def GetLastRenderTime(self) -> float: ...
    @overload
    def GetLastRenderTime() -> float: ...
    @overload
    def GetRBChannel(self) -> int: ...
    @overload
    def GetRBChannel() -> unsignedchar: ...
    @overload
    def GetRBDominanceGroup(self) -> int: ...
    @overload
    def GetRBDominanceGroup() -> unsignedchar: ...
    @overload
    def GetRotation(self) -> Rotator: ...
    @overload
    def GetRotation() -> structRotator: ...
    @overload
    def GetScale(self) -> float: ...
    @overload
    def GetScale() -> float: ...
    @overload
    def GetScale3D(self) -> Vector: ...
    @overload
    def GetScale3D() -> structVector: ...
    @overload
    def GetScriptRigidBodyCollisionThreshold(self) -> float: ...
    @overload
    def GetScriptRigidBodyCollisionThreshold() -> float: ...
    @overload
    def GetTranslation(self) -> Vector: ...
    @overload
    def GetTranslation() -> structVector: ...
    @overload
    def GetVisibilityId(self) -> int: ...
    @overload
    def GetVisibilityId() -> int: ...
    @overload
    def GetbAcceptsDynamicDecals(self) -> int: ...
    @overload
    def GetbAcceptsDynamicDecals() -> unsignedlong: ...
    @overload
    def GetbAcceptsDynamicDominantLightShadows(self) -> int: ...
    @overload
    def GetbAcceptsDynamicDominantLightShadows() -> unsignedlong: ...
    @overload
    def GetbAcceptsDynamicLights(self) -> int: ...
    @overload
    def GetbAcceptsDynamicLights() -> unsignedlong: ...
    @overload
    def GetbAcceptsLights(self) -> int: ...
    @overload
    def GetbAcceptsLights() -> unsignedlong: ...
    @overload
    def GetbAcceptsStaticDecals(self) -> int: ...
    @overload
    def GetbAcceptsStaticDecals() -> unsignedlong: ...
    @overload
    def GetbAllowApproximateOcclusion(self) -> int: ...
    @overload
    def GetbAllowApproximateOcclusion() -> unsignedlong: ...
    @overload
    def GetbBlockFootPlacement(self) -> int: ...
    @overload
    def GetbBlockFootPlacement() -> unsignedlong: ...
    @overload
    def GetbCastDynamicShadow(self) -> int: ...
    @overload
    def GetbCastDynamicShadow() -> unsignedlong: ...
    @overload
    def GetbCastHiddenShadow(self) -> int: ...
    @overload
    def GetbCastHiddenShadow() -> unsignedlong: ...
    @overload
    def GetbCastShadowAsTwoSided(self) -> int: ...
    @overload
    def GetbCastShadowAsTwoSided() -> unsignedlong: ...
    @overload
    def GetbCastStaticShadow(self) -> int: ...
    @overload
    def GetbCastStaticShadow() -> unsignedlong: ...
    @overload
    def GetbDisableAllRigidBody(self) -> int: ...
    @overload
    def GetbDisableAllRigidBody() -> unsignedlong: ...
    @overload
    def GetbFirstFrameOcclusion(self) -> int: ...
    @overload
    def GetbFirstFrameOcclusion() -> unsignedlong: ...
    @overload
    def GetbFluidDrain(self) -> int: ...
    @overload
    def GetbFluidDrain() -> unsignedlong: ...
    @overload
    def GetbFluidTwoWay(self) -> int: ...
    @overload
    def GetbFluidTwoWay() -> unsignedlong: ...
    @overload
    def GetbForceDirectLightMap(self) -> int: ...
    @overload
    def GetbForceDirectLightMap() -> unsignedlong: ...
    @overload
    def GetbHasExplicitShadowParent(self) -> int: ...
    @overload
    def GetbHasExplicitShadowParent() -> unsignedlong: ...
    @overload
    def GetbIgnoreForceField(self) -> int: ...
    @overload
    def GetbIgnoreForceField() -> unsignedlong: ...
    @overload
    def GetbIgnoreHiddenActorsMembership(self) -> int: ...
    @overload
    def GetbIgnoreHiddenActorsMembership() -> unsignedlong: ...
    @overload
    def GetbIgnoreNearPlaneIntersection(self) -> int: ...
    @overload
    def GetbIgnoreNearPlaneIntersection() -> unsignedlong: ...
    @overload
    def GetbIgnoreOwnerHidden(self) -> int: ...
    @overload
    def GetbIgnoreOwnerHidden() -> unsignedlong: ...
    @overload
    def GetbIgnoreRadialForce(self) -> int: ...
    @overload
    def GetbIgnoreRadialForce() -> unsignedlong: ...
    @overload
    def GetbIgnoreRadialImpulse(self) -> int: ...
    @overload
    def GetbIgnoreRadialImpulse() -> unsignedlong: ...
    @overload
    def GetbIsRefreshingDecals(self) -> int: ...
    @overload
    def GetbIsRefreshingDecals() -> unsignedlong: ...
    @overload
    def GetbNoModSelfShadow(self) -> int: ...
    @overload
    def GetbNoModSelfShadow() -> unsignedlong: ...
    @overload
    def GetbNotifyRigidBodyCollision(self) -> int: ...
    @overload
    def GetbNotifyRigidBodyCollision() -> unsignedlong: ...
    @overload
    def GetbOnlyBlockActorMovement(self) -> int: ...
    @overload
    def GetbOnlyBlockActorMovement() -> unsignedlong: ...
    @overload
    def GetbOnlyOwnerSee(self) -> int: ...
    @overload
    def GetbOnlyOwnerSee() -> unsignedlong: ...
    @overload
    def GetbOwnerNoSee(self) -> int: ...
    @overload
    def GetbOwnerNoSee() -> unsignedlong: ...
    @overload
    def GetbSelfShadowOnly(self) -> int: ...
    @overload
    def GetbSelfShadowOnly() -> unsignedlong: ...
    @overload
    def GetbSkipRBGeomCreation(self) -> int: ...
    @overload
    def GetbSkipRBGeomCreation() -> unsignedlong: ...
    @overload
    def GetbUseAsOccluder(self) -> int: ...
    @overload
    def GetbUseAsOccluder() -> unsignedlong: ...
    @overload
    def GetbUseCompartment(self) -> int: ...
    @overload
    def GetbUseCompartment() -> unsignedlong: ...
    @overload
    def GetbUseOnePassLightingOnTranslucency(self) -> int: ...
    @overload
    def GetbUseOnePassLightingOnTranslucency() -> unsignedlong: ...
    @overload
    def GetbUsePrecomputedShadows(self) -> int: ...
    @overload
    def GetbUsePrecomputedShadows() -> unsignedlong: ...
    @overload
    def InitRBPhys(self) -> None: ...
    @overload
    def InitRBPhys() -> void: ...
    @overload
    def RetardRBLinearVelocity(self, RetardDir: Vector, VelScale: float) -> None: ...
    @overload
    def RetardRBLinearVelocity(structVector&, float) -> void: ...
    @overload
    def SetAbsoluteRotation(self, newAbsoluteRotation: int) -> None: ...
    @overload
    def SetAbsoluteRotation(unsignedlong) -> void: ...
    @overload
    def SetAbsoluteScale(self, newAbsoluteScale: int) -> None: ...
    @overload
    def SetAbsoluteScale(unsignedlong) -> void: ...
    @overload
    def SetAbsoluteTranslation(self, newAbsoluteTranslation: int) -> None: ...
    @overload
    def SetAbsoluteTranslation(unsignedlong) -> void: ...
    @overload
    def SetAlwaysCheckCollision(self, newAlwaysCheckCollision: int) -> None: ...
    @overload
    def SetAlwaysCheckCollision(unsignedlong) -> void: ...
    @overload
    def SetAlwaysLoadOnClient(self, newAlwaysLoadOnClient: int) -> None: ...
    @overload
    def SetAlwaysLoadOnClient(unsignedlong) -> void: ...
    @overload
    def SetAlwaysLoadOnServer(self, newAlwaysLoadOnServer: int) -> None: ...
    @overload
    def SetAlwaysLoadOnServer(unsignedlong) -> void: ...
    @overload
    def SetBlockActors(self, newBlockActors: int) -> None: ...
    @overload
    def SetBlockActors(unsignedlong) -> void: ...
    @overload
    def SetBlockNonZeroExtent(self, newBlockNonZeroExtent: int) -> None: ...
    @overload
    def SetBlockNonZeroExtent(unsignedlong) -> void: ...
    @overload
    def SetBlockRigidBody(self, newBlockRigidBody: int) -> None: ...
    @overload
    def SetBlockRigidBody(unsignedlong) -> void: ...
    @overload
    def SetBlockRigidBody2(self, bNewBlockRigidBody: int) -> None: ...
    @overload
    def SetBlockRigidBody2(unsignedlong) -> void: ...
    @overload
    def SetBlockZeroExtent(self, newBlockZeroExtent: int) -> None: ...
    @overload
    def SetBlockZeroExtent(unsignedlong) -> void: ...
    @overload
    def SetBoundsScale(self, newBoundsScale: float) -> None: ...
    @overload
    def SetBoundsScale(float) -> void: ...
    @overload
    def SetCanBlockCamera(self, newCanBlockCamera: int) -> None: ...
    @overload
    def SetCanBlockCamera(unsignedlong) -> void: ...
    @overload
    def SetCastShadow(self, newCastShadow: int) -> None: ...
    @overload
    def SetCastShadow(unsignedlong) -> void: ...
    @overload
    def SetCollideActors(self, newCollideActors: int) -> None: ...
    @overload
    def SetCollideActors(unsignedlong) -> void: ...
    @overload
    def SetHiddenGame(self, newHiddenGame: int) -> None: ...
    @overload
    def SetHiddenGame(unsignedlong) -> void: ...
    @overload
    def SetLastSubmitTime(self, newLastSubmitTime: float) -> None: ...
    @overload
    def SetLastSubmitTime(float) -> void: ...
    @overload
    def SetNotifyRigidBodyCollision(self, bNewNotifyRigidBodyCollision: int) -> None: ...
    @overload
    def SetNotifyRigidBodyCollision(unsignedlong) -> void: ...
    @overload
    def SetRBAngularVelocity(self, NewAngVel: Vector, bAddToCurrent: int) -> None: ...
    @overload
    def SetRBAngularVelocity(structVector&, unsignedlong) -> void: ...
    @overload
    def SetRBChannel(self, newRBChannel: int) -> None: ...
    @overload
    def SetRBChannel(unsignedchar) -> void: ...
    @overload
    def SetRBChannel2(self, Channel: int) -> None: ...
    @overload
    def SetRBChannel2(unsignedchar) -> void: ...
    @overload
    def SetRBCollidesWithChannel(self, Channel: int, bNewCollides: int) -> None: ...
    @overload
    def SetRBCollidesWithChannel(unsignedchar, unsignedlong) -> void: ...
    @overload
    def SetRBDominanceGroup(self, newRBDominanceGroup: int) -> None: ...
    @overload
    def SetRBDominanceGroup(unsignedchar) -> void: ...
    @overload
    def SetRBLinearVelocity(self, NewVel: Vector, bAddToCurrent: int) -> None: ...
    @overload
    def SetRBLinearVelocity(structVector&, unsignedlong) -> void: ...
    @overload
    def SetRotation(self, newRotation: Rotator) -> None: ...
    @overload
    def SetRotation(structRotator) -> void: ...
    @overload
    def SetScale(self, newScale: float) -> None: ...
    @overload
    def SetScale(float) -> void: ...
    @overload
    def SetScale3D(self, newScale3D: Vector) -> None: ...
    @overload
    def SetScale3D(structVector) -> void: ...
    @overload
    def SetScriptRigidBodyCollisionThreshold(self, newScriptRigidBodyCollisionThreshold: float) -> None: ...
    @overload
    def SetScriptRigidBodyCollisionThreshold(float) -> void: ...
    @overload
    def SetTranslation(self, newTranslation: Vector) -> None: ...
    @overload
    def SetTranslation(structVector) -> void: ...
    @overload
    def SetVisibilityId(self, newVisibilityId: int) -> None: ...
    @overload
    def SetVisibilityId(int) -> void: ...
    @overload
    def SetbAcceptsDynamicDominantLightShadows(self, newbAcceptsDynamicDominantLightShadows: int) -> None: ...
    @overload
    def SetbAcceptsDynamicDominantLightShadows(unsignedlong) -> void: ...
    @overload
    def SetbAcceptsDynamicLights(self, newbAcceptsDynamicLights: int) -> None: ...
    @overload
    def SetbAcceptsDynamicLights(unsignedlong) -> void: ...
    @overload
    def SetbAcceptsLights(self, newbAcceptsLights: int) -> None: ...
    @overload
    def SetbAcceptsLights(unsignedlong) -> void: ...
    @overload
    def SetbAllowApproximateOcclusion(self, newbAllowApproximateOcclusion: int) -> None: ...
    @overload
    def SetbAllowApproximateOcclusion(unsignedlong) -> void: ...
    @overload
    def SetbBlockFootPlacement(self, newbBlockFootPlacement: int) -> None: ...
    @overload
    def SetbBlockFootPlacement(unsignedlong) -> void: ...
    @overload
    def SetbCastDynamicShadow(self, newbCastDynamicShadow: int) -> None: ...
    @overload
    def SetbCastDynamicShadow(unsignedlong) -> void: ...
    @overload
    def SetbCastHiddenShadow(self, newbCastHiddenShadow: int) -> None: ...
    @overload
    def SetbCastHiddenShadow(unsignedlong) -> void: ...
    @overload
    def SetbCastShadowAsTwoSided(self, newbCastShadowAsTwoSided: int) -> None: ...
    @overload
    def SetbCastShadowAsTwoSided(unsignedlong) -> void: ...
    @overload
    def SetbCastStaticShadow(self, newbCastStaticShadow: int) -> None: ...
    @overload
    def SetbCastStaticShadow(unsignedlong) -> void: ...
    @overload
    def SetbDisableAllRigidBody(self, newbDisableAllRigidBody: int) -> None: ...
    @overload
    def SetbDisableAllRigidBody(unsignedlong) -> void: ...
    @overload
    def SetbFirstFrameOcclusion(self, newbFirstFrameOcclusion: int) -> None: ...
    @overload
    def SetbFirstFrameOcclusion(unsignedlong) -> void: ...
    @overload
    def SetbFluidDrain(self, newbFluidDrain: int) -> None: ...
    @overload
    def SetbFluidDrain(unsignedlong) -> void: ...
    @overload
    def SetbFluidTwoWay(self, newbFluidTwoWay: int) -> None: ...
    @overload
    def SetbFluidTwoWay(unsignedlong) -> void: ...
    @overload
    def SetbForceDirectLightMap(self, newbForceDirectLightMap: int) -> None: ...
    @overload
    def SetbForceDirectLightMap(unsignedlong) -> void: ...
    @overload
    def SetbIgnoreForceField(self, newbIgnoreForceField: int) -> None: ...
    @overload
    def SetbIgnoreForceField(unsignedlong) -> void: ...
    @overload
    def SetbIgnoreHiddenActorsMembership(self, newbIgnoreHiddenActorsMembership: int) -> None: ...
    @overload
    def SetbIgnoreHiddenActorsMembership(unsignedlong) -> void: ...
    @overload
    def SetbIgnoreNearPlaneIntersection(self, newbIgnoreNearPlaneIntersection: int) -> None: ...
    @overload
    def SetbIgnoreNearPlaneIntersection(unsignedlong) -> void: ...
    @overload
    def SetbIgnoreOwnerHidden(self, newbIgnoreOwnerHidden: int) -> None: ...
    @overload
    def SetbIgnoreOwnerHidden(unsignedlong) -> void: ...
    @overload
    def SetbIgnoreRadialForce(self, newbIgnoreRadialForce: int) -> None: ...
    @overload
    def SetbIgnoreRadialForce(unsignedlong) -> void: ...
    @overload
    def SetbIgnoreRadialImpulse(self, newbIgnoreRadialImpulse: int) -> None: ...
    @overload
    def SetbIgnoreRadialImpulse(unsignedlong) -> void: ...
    @overload
    def SetbNoModSelfShadow(self, newbNoModSelfShadow: int) -> None: ...
    @overload
    def SetbNoModSelfShadow(unsignedlong) -> void: ...
    @overload
    def SetbNotifyRigidBodyCollision(self, newbNotifyRigidBodyCollision: int) -> None: ...
    @overload
    def SetbNotifyRigidBodyCollision(unsignedlong) -> void: ...
    @overload
    def SetbOnlyBlockActorMovement(self, newbOnlyBlockActorMovement: int) -> None: ...
    @overload
    def SetbOnlyBlockActorMovement(unsignedlong) -> void: ...
    @overload
    def SetbOnlyOwnerSee(self, newbOnlyOwnerSee: int) -> None: ...
    @overload
    def SetbOnlyOwnerSee(unsignedlong) -> void: ...
    @overload
    def SetbOwnerNoSee(self, newbOwnerNoSee: int) -> None: ...
    @overload
    def SetbOwnerNoSee(unsignedlong) -> void: ...
    @overload
    def SetbSelfShadowOnly(self, newbSelfShadowOnly: int) -> None: ...
    @overload
    def SetbSelfShadowOnly(unsignedlong) -> void: ...
    @overload
    def SetbSkipRBGeomCreation(self, newbSkipRBGeomCreation: int) -> None: ...
    @overload
    def SetbSkipRBGeomCreation(unsignedlong) -> void: ...
    @overload
    def SetbUseAsOccluder(self, newbUseAsOccluder: int) -> None: ...
    @overload
    def SetbUseAsOccluder(unsignedlong) -> void: ...
    @overload
    def SetbUseCompartment(self, newbUseCompartment: int) -> None: ...
    @overload
    def SetbUseCompartment(unsignedlong) -> void: ...
    @overload
    def SetbUseOnePassLightingOnTranslucency(self, newbUseOnePassLightingOnTranslucency: int) -> None: ...
    @overload
    def SetbUseOnePassLightingOnTranslucency(unsignedlong) -> void: ...
    @overload
    def TermRBPhys(self) -> None: ...
    @overload
    def TermRBPhys() -> void: ...
    def assign(self, rhs: PrimitiveComponentWrapper) -> PrimitiveComponentWrapper: ...

class ProfileCameraSettings:
    def __init__(self) -> None: ...
    @property
    def Distance(self) -> Any: ...
    @Distance.setter
    def Distance(self, val: Any) -> None: ...
    @property
    def FOV(self) -> Any: ...
    @FOV.setter
    def FOV(self, val: Any) -> None: ...
    @property
    def Height(self) -> Any: ...
    @Height.setter
    def Height(self, val: Any) -> None: ...
    @property
    def Pitch(self) -> Any: ...
    @Pitch.setter
    def Pitch(self, val: Any) -> None: ...
    @property
    def Stiffness(self) -> Any: ...
    @Stiffness.setter
    def Stiffness(self, val: Any) -> None: ...
    @property
    def SwivelSpeed(self) -> Any: ...
    @SwivelSpeed.setter
    def SwivelSpeed(self, val: Any) -> None: ...
    @property
    def TransitionSpeed(self) -> Any: ...
    @TransitionSpeed.setter
    def TransitionSpeed(self, val: Any) -> None: ...

class Quat:
    @overload
    def __init__(self, w: float, x: float, y: float, z: float) -> None: ...
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: Quat) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def conjugate(self) -> Quat: ...
    @overload
    def conjugate() -> structQuat: ...
    def __mul__(self, q2: Quat) -> Quat: ...
    @property
    def W(self) -> Any: ...
    @W.setter
    def W(self, val: Any) -> None: ...
    @property
    def X(self) -> Any: ...
    @X.setter
    def X(self, val: Any) -> None: ...
    @property
    def Y(self) -> Any: ...
    @Y.setter
    def Y(self, val: Any) -> None: ...
    @property
    def Z(self) -> Any: ...
    @Z.setter
    def Z(self, val: Any) -> None: ...

class RBActorWrapper(ActorWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: RBActorWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def AddForce(self, Force: Vector, ForceMode: int) -> None: ...
    @overload
    def AddForce(structVector&, unsignedchar) -> void: ...
    @overload
    def AddTorque(self, Torque: Vector, ForceMode: int) -> None: ...
    @overload
    def AddTorque(structVector&, unsignedchar) -> void: ...
    @overload
    def GetClientCorrectionRBState(self) -> RBState: ...
    @overload
    def GetClientCorrectionRBState() -> structRBState: ...
    @overload
    def GetCurrentRBLocation(self) -> Vector: ...
    @overload
    def GetCurrentRBLocation() -> structVector: ...
    @overload
    def GetCurrentRBState(self) -> RBState: ...
    @overload
    def GetCurrentRBState() -> structRBState: ...
    @overload
    def GetFXActor(self) -> FXActorWrapper: ...
    @overload
    def GetFXActor() -> classFXActorWrapper: ...
    @overload
    def GetFXActorArchetype(self) -> FXActorWrapper: ...
    @overload
    def GetFXActorArchetype() -> classFXActorWrapper: ...
    @overload
    def GetLastRBCollisionsFrame(self) -> int: ...
    @overload
    def GetLastRBCollisionsFrame() -> int: ...
    @overload
    def GetMaxAngularSpeed(self) -> float: ...
    @overload
    def GetMaxAngularSpeed() -> float: ...
    @overload
    def GetMaxLinearSpeed(self) -> float: ...
    @overload
    def GetMaxLinearSpeed() -> float: ...
    @overload
    def GetOldRBState(self) -> RBState: ...
    @overload
    def GetOldRBState() -> structRBState: ...
    @overload
    def GetPhysicsFrame(self) -> int: ...
    @overload
    def GetPhysicsFrame() -> int: ...
    @overload
    def GetPhysicsTime(self) -> float: ...
    @overload
    def GetPhysicsTime() -> float: ...
    @overload
    def GetPreWeldMass(self) -> float: ...
    @overload
    def GetPreWeldMass() -> float: ...
    @overload
    def GetRBState(self) -> RBState: ...
    @overload
    def GetRBState() -> structRBState: ...
    @overload
    def GetReplicatedRBState(self) -> RBState: ...
    @overload
    def GetReplicatedRBState() -> structRBState: ...
    @overload
    def GetSyncErrorAngle(self) -> float: ...
    @overload
    def GetSyncErrorAngle() -> float: ...
    @overload
    def GetSyncErrorAxis(self) -> Vector: ...
    @overload
    def GetSyncErrorAxis() -> structVector: ...
    @overload
    def GetSyncErrorLocation(self) -> Vector: ...
    @overload
    def GetSyncErrorLocation() -> structVector: ...
    @overload
    def GetWeldedActor(self) -> RBActorWrapper: ...
    @overload
    def GetWeldedActor() -> classRBActorWrapper: ...
    @overload
    def GetWeldedTo(self) -> RBActorWrapper: ...
    @overload
    def GetWeldedTo() -> classRBActorWrapper: ...
    @overload
    def GetWorldContact(self) -> WorldContactData: ...
    @overload
    def GetWorldContact() -> structWorldContactData: ...
    @overload
    def GetbDisableSleeping(self) -> int: ...
    @overload
    def GetbDisableSleeping() -> unsignedlong: ...
    @overload
    def GetbFrozen(self) -> int: ...
    @overload
    def GetbFrozen() -> unsignedlong: ...
    @overload
    def GetbIgnoreSyncing(self) -> int: ...
    @overload
    def GetbIgnoreSyncing() -> unsignedlong: ...
    @overload
    def GetbPhysInitialized(self) -> int: ...
    @overload
    def GetbPhysInitialized() -> unsignedlong: ...
    @overload
    def GetbReplayActor(self) -> int: ...
    @overload
    def GetbReplayActor() -> unsignedlong: ...
    @overload
    def InitAk(self) -> None: ...
    @overload
    def InitAk() -> void: ...
    @overload
    def ReInitRBPhys(self) -> None: ...
    @overload
    def ReInitRBPhys() -> void: ...
    @overload
    def SetClientCorrectionRBState(self, newClientCorrectionRBState: RBState) -> None: ...
    @overload
    def SetClientCorrectionRBState(structRBState) -> void: ...
    @overload
    def SetConstrained2D(self, bConstrain2D: int) -> None: ...
    @overload
    def SetConstrained2D(unsignedlong) -> void: ...
    def SetConstrained3D(self, LinearLower: Vector, LinearUpper: Vector, AngularLower: Vector, AngularUpper: Vector) -> None: ...
    @overload
    def SetFXActor(self, newFXActor: FXActorWrapper) -> None: ...
    @overload
    def SetFXActor(classFXActorWrapper) -> void: ...
    @overload
    def SetFXActorArchetype(self, newFXActorArchetype: FXActorWrapper) -> None: ...
    @overload
    def SetFXActorArchetype(classFXActorWrapper) -> void: ...
    @overload
    def SetFrozen(self, bEnabled: int) -> None: ...
    @overload
    def SetFrozen(unsignedlong) -> void: ...
    @overload
    def SetMass(self, NewMass: float) -> None: ...
    @overload
    def SetMass(float) -> void: ...
    @overload
    def SetMaxAngularSpeed(self, newMaxAngularSpeed: float) -> None: ...
    @overload
    def SetMaxAngularSpeed(float) -> void: ...
    @overload
    def SetMaxAngularSpeed2(self, NewMaxSpeed: float) -> None: ...
    @overload
    def SetMaxAngularSpeed2(float) -> void: ...
    @overload
    def SetMaxLinearSpeed(self, newMaxLinearSpeed: float) -> None: ...
    @overload
    def SetMaxLinearSpeed(float) -> void: ...
    @overload
    def SetMaxLinearSpeed2(self, NewMaxSpeed: float) -> None: ...
    @overload
    def SetMaxLinearSpeed2(float) -> void: ...
    @overload
    def SetOldRBState(self, newOldRBState: RBState) -> None: ...
    @overload
    def SetOldRBState(structRBState) -> void: ...
    @overload
    def SetPhysicsState(self, NewState: RBState) -> None: ...
    @overload
    def SetPhysicsState(structRBState&) -> void: ...
    @overload
    def SetRBState(self, newRBState: RBState) -> None: ...
    @overload
    def SetRBState(structRBState) -> void: ...
    @overload
    def SetReplicatedRBState(self, newReplicatedRBState: RBState) -> None: ...
    @overload
    def SetReplicatedRBState(structRBState) -> void: ...
    @overload
    def SetWorldContact(self, newWorldContact: WorldContactData) -> None: ...
    @overload
    def SetWorldContact(structWorldContactData) -> void: ...
    @overload
    def SetbDisableSleeping(self, newbDisableSleeping: int) -> None: ...
    @overload
    def SetbDisableSleeping(unsignedlong) -> void: ...
    @overload
    def SetbFrozen(self, newbFrozen: int) -> None: ...
    @overload
    def SetbFrozen(unsignedlong) -> void: ...
    @overload
    def SetbIgnoreSyncing(self, newbIgnoreSyncing: int) -> None: ...
    @overload
    def SetbIgnoreSyncing(unsignedlong) -> void: ...
    @overload
    def SetbReplayActor(self, newbReplayActor: int) -> None: ...
    @overload
    def SetbReplayActor(unsignedlong) -> void: ...
    @overload
    def TerminateRBPhys(self) -> None: ...
    @overload
    def TerminateRBPhys() -> void: ...
    @overload
    def UnWeldRBActor(self, Other: RBActorWrapper) -> None: ...
    @overload
    def UnWeldRBActor(classRBActorWrapper) -> void: ...
    @overload
    def WeldRBActor2(self, Other: RBActorWrapper, WeldOffset: Vector, WeldRotation: Rotator) -> None: ...
    @overload
    def WeldRBActor2(classRBActorWrapper, structVector&, structRotator&) -> void: ...
    def assign(self, rhs: RBActorWrapper) -> RBActorWrapper: ...
    @overload
    def eventPreBeginPlay(self) -> None: ...
    @overload
    def eventPreBeginPlay() -> void: ...

class RBState:
    def __init__(self) -> None: ...
    @property
    def AngularVelocity(self) -> Any: ...
    @AngularVelocity.setter
    def AngularVelocity(self, val: Any) -> None: ...
    @property
    def LinearVelocity(self) -> Any: ...
    @LinearVelocity.setter
    def LinearVelocity(self, val: Any) -> None: ...
    @property
    def Location(self) -> Any: ...
    @Location.setter
    def Location(self, val: Any) -> None: ...
    @property
    def Quaternion(self) -> Any: ...
    @Quaternion.setter
    def Quaternion(self, val: Any) -> None: ...
    @property
    def Time(self) -> Any: ...
    @Time.setter
    def Time(self, val: Any) -> None: ...
    @property
    def bNewData(self) -> Any: ...
    @property
    def bSleeping(self) -> Any: ...

class RecordedSample:
    def __init__(self) -> None: ...
    @property
    def High(self) -> Any: ...
    @High.setter
    def High(self, val: Any) -> None: ...
    @property
    def Low(self) -> Any: ...
    @Low.setter
    def Low(self, val: Any) -> None: ...

class ReplayDirectorWrapper(ActorWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: ReplayDirectorWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def BuildFocusCars(self) -> None: ...
    @overload
    def BuildFocusCars() -> void: ...
    @overload
    def EventAutoSaveChanged(self, Director: ReplayDirectorWrapper) -> None: ...
    @overload
    def EventAutoSaveChanged(classReplayDirectorWrapper) -> void: ...
    @overload
    def EventFocusCarChanged(self, NewFocusCar: ActorWrapper) -> None: ...
    @overload
    def EventFocusCarChanged(classActorWrapper) -> void: ...
    @overload
    def EventReplayFinished(self, Director: ReplayDirectorWrapper) -> None: ...
    @overload
    def EventReplayFinished(classReplayDirectorWrapper) -> void: ...
    @overload
    def EventScoreDataChanged(self, Director: ReplayDirectorWrapper) -> None: ...
    @overload
    def EventScoreDataChanged(classReplayDirectorWrapper) -> void: ...
    @overload
    def GetBallSpawnTime(self) -> float: ...
    @overload
    def GetBallSpawnTime() -> float: ...
    @overload
    def GetFocusBall(self) -> ActorWrapper: ...
    @overload
    def GetFocusBall() -> classActorWrapper: ...
    @overload
    def GetFocusCar(self) -> ActorWrapper: ...
    @overload
    def GetFocusCar() -> classActorWrapper: ...
    @overload
    def GetFocusCarChangeTime(self) -> float: ...
    @overload
    def GetFocusCarChangeTime() -> float: ...
    @overload
    def GetFocusCarIdx(self) -> int: ...
    @overload
    def GetFocusCarIdx() -> int: ...
    @overload
    def GetFocusHitIndex(self) -> int: ...
    @overload
    def GetFocusHitIndex() -> int: ...
    @overload
    def GetForceCutToFocusActors(self) -> int: ...
    @overload
    def GetForceCutToFocusActors() -> int: ...
    @overload
    def GetHighlightReplayDuration(self) -> float: ...
    @overload
    def GetHighlightReplayDuration() -> float: ...
    @overload
    def GetMaxReplayTime(self) -> float: ...
    @overload
    def GetMaxReplayTime() -> float: ...
    @overload
    def GetMinReplayTime(self) -> float: ...
    @overload
    def GetMinReplayTime() -> float: ...
    @overload
    def GetNextHighlightFrame(self) -> int: ...
    @overload
    def GetNextHighlightFrame() -> int: ...
    @overload
    def GetReplay(self) -> ReplaySoccarWrapper: ...
    @overload
    def GetReplay() -> classReplaySoccarWrapper: ...
    @overload
    def GetReplayPadding(self) -> float: ...
    @overload
    def GetReplayPadding() -> float: ...
    @overload
    def GetReplayStartGameTime(self) -> float: ...
    @overload
    def GetReplayStartGameTime() -> float: ...
    @overload
    def GetReplayStartTime(self) -> float: ...
    @overload
    def GetReplayStartTime() -> float: ...
    @overload
    def GetReplayTimeSeconds(self) -> float: ...
    @overload
    def GetReplayTimeSeconds() -> float: ...
    @overload
    def GetScoreHitIndex(self) -> int: ...
    @overload
    def GetScoreHitIndex() -> int: ...
    @overload
    def GetScoreTime(self) -> float: ...
    @overload
    def GetScoreTime() -> float: ...
    @overload
    def GetScoredGoal(self) -> GoalWrapper: ...
    @overload
    def GetScoredGoal() -> classGoalWrapper: ...
    @overload
    def GetScoredOnTeam(self) -> int: ...
    @overload
    def GetScoredOnTeam() -> unsignedchar: ...
    @overload
    def GetSlomoDefendDistance(self) -> float: ...
    @overload
    def GetSlomoDefendDistance() -> float: ...
    @overload
    def GetSlomoDefendTime(self) -> float: ...
    @overload
    def GetSlomoDefendTime() -> float: ...
    @overload
    def GetSlomoPostScoreTime(self) -> float: ...
    @overload
    def GetSlomoPostScoreTime() -> float: ...
    @overload
    def GetSlomoPreScoreTime(self) -> float: ...
    @overload
    def GetSlomoPreScoreTime() -> float: ...
    @overload
    def GetSlomoTimeDilation(self) -> float: ...
    @overload
    def GetSlomoTimeDilation() -> float: ...
    @overload
    def GetSoccarGame(self) -> ServerWrapper: ...
    @overload
    def GetSoccarGame() -> classServerWrapper: ...
    @overload
    def GetTimeBeforeHighlightReplay(self) -> float: ...
    @overload
    def GetTimeBeforeHighlightReplay() -> float: ...
    @overload
    def GetbAutoSave(self) -> int: ...
    @overload
    def GetbAutoSave() -> unsignedlong: ...
    @overload
    def GetbSlomo(self) -> int: ...
    @overload
    def GetbSlomo() -> unsignedlong: ...
    @overload
    def GetbSlomoForDefender(self) -> int: ...
    @overload
    def GetbSlomoForDefender() -> unsignedlong: ...
    @overload
    def HandleAllTeamsCreated(self, TeamGame: TeamGameEventWrapper) -> None: ...
    @overload
    def HandleAllTeamsCreated(classTeamGameEventWrapper) -> void: ...
    @overload
    def HandleGameStateChanged(self, G: GameEventWrapper) -> None: ...
    @overload
    def HandleGameStateChanged(classGameEventWrapper) -> void: ...
    @overload
    def HandleReplayFinished(self, InReplay: ReplayWrapper) -> None: ...
    @overload
    def HandleReplayFinished(classReplayWrapper) -> void: ...
    @overload
    def HandleScoreUpdated(self, Team: TeamWrapper) -> None: ...
    @overload
    def HandleScoreUpdated(classTeamWrapper) -> void: ...
    @overload
    def OnScoreDataChanged(self) -> None: ...
    @overload
    def OnScoreDataChanged() -> void: ...
    @overload
    def OnSoccarGameSet(self) -> None: ...
    @overload
    def OnSoccarGameSet() -> void: ...
    @overload
    def PlayRandomHighlight(self) -> None: ...
    @overload
    def PlayRandomHighlight() -> void: ...
    @overload
    def RecordPlayers(self) -> None: ...
    @overload
    def RecordPlayers() -> void: ...
    @overload
    def SaveUserKeyframe(self) -> None: ...
    @overload
    def SaveUserKeyframe() -> void: ...
    @overload
    def SetAutoSave(self) -> None: ...
    @overload
    def SetAutoSave() -> void: ...
    @overload
    def SetBallSpawnTime(self, newBallSpawnTime: float) -> None: ...
    @overload
    def SetBallSpawnTime(float) -> void: ...
    def SetFocusActors(self, NewCar: ActorWrapper, NewBall: ActorWrapper) -> None: ...
    @overload
    def SetFocusBall(self, newFocusBall: ActorWrapper) -> None: ...
    @overload
    def SetFocusBall(classActorWrapper) -> void: ...
    @overload
    def SetFocusCar(self, newFocusCar: ActorWrapper) -> None: ...
    @overload
    def SetFocusCar(classActorWrapper) -> void: ...
    @overload
    def SetFocusCarChangeTime(self, newFocusCarChangeTime: float) -> None: ...
    @overload
    def SetFocusCarChangeTime(float) -> void: ...
    @overload
    def SetFocusCarIdx(self, newFocusCarIdx: int) -> None: ...
    @overload
    def SetFocusCarIdx(int) -> void: ...
    @overload
    def SetFocusHitIndex(self, newFocusHitIndex: int) -> None: ...
    @overload
    def SetFocusHitIndex(int) -> void: ...
    @overload
    def SetForceCutToFocusActors(self, newForceCutToFocusActors: int) -> None: ...
    @overload
    def SetForceCutToFocusActors(int) -> void: ...
    @overload
    def SetGameEvent(self, InGameEvent: ServerWrapper) -> None: ...
    @overload
    def SetGameEvent(classServerWrapper) -> void: ...
    @overload
    def SetHighlightReplayDuration(self, newHighlightReplayDuration: float) -> None: ...
    @overload
    def SetHighlightReplayDuration(float) -> void: ...
    @overload
    def SetMaxReplayTime(self, newMaxReplayTime: float) -> None: ...
    @overload
    def SetMaxReplayTime(float) -> void: ...
    @overload
    def SetMinReplayTime(self, newMinReplayTime: float) -> None: ...
    @overload
    def SetMinReplayTime(float) -> void: ...
    @overload
    def SetReplay(self, newReplay: ReplaySoccarWrapper) -> None: ...
    @overload
    def SetReplay(classReplaySoccarWrapper) -> void: ...
    @overload
    def SetReplayPadding(self, newReplayPadding: float) -> None: ...
    @overload
    def SetReplayPadding(float) -> void: ...
    @overload
    def SetReplayStartGameTime(self, newReplayStartGameTime: float) -> None: ...
    @overload
    def SetReplayStartGameTime(float) -> void: ...
    @overload
    def SetScoreHitIndex(self, newScoreHitIndex: int) -> None: ...
    @overload
    def SetScoreHitIndex(int) -> void: ...
    @overload
    def SetScoreTime(self, newScoreTime: float) -> None: ...
    @overload
    def SetScoreTime(float) -> void: ...
    @overload
    def SetScoredGoal(self, newScoredGoal: GoalWrapper) -> None: ...
    @overload
    def SetScoredGoal(classGoalWrapper) -> void: ...
    @overload
    def SetScoredOnTeam(self, newScoredOnTeam: int) -> None: ...
    @overload
    def SetScoredOnTeam(unsignedchar) -> void: ...
    @overload
    def SetSlomo2(self, bNewSlomo: int) -> None: ...
    @overload
    def SetSlomo2(unsignedlong) -> void: ...
    @overload
    def SetSlomoDefendDistance(self, newSlomoDefendDistance: float) -> None: ...
    @overload
    def SetSlomoDefendDistance(float) -> void: ...
    @overload
    def SetSlomoDefendTime(self, newSlomoDefendTime: float) -> None: ...
    @overload
    def SetSlomoDefendTime(float) -> void: ...
    @overload
    def SetSlomoForDefender(self, Ball: BallWrapper, DefendingTeam: int) -> None: ...
    @overload
    def SetSlomoForDefender(classBallWrapper, int) -> void: ...
    @overload
    def SetSlomoPostScoreTime(self, newSlomoPostScoreTime: float) -> None: ...
    @overload
    def SetSlomoPostScoreTime(float) -> void: ...
    @overload
    def SetSlomoPreScoreTime(self, newSlomoPreScoreTime: float) -> None: ...
    @overload
    def SetSlomoPreScoreTime(float) -> void: ...
    @overload
    def SetSlomoTimeDilation(self, newSlomoTimeDilation: float) -> None: ...
    @overload
    def SetSlomoTimeDilation(float) -> void: ...
    @overload
    def SetSoccarGame(self, newSoccarGame: ServerWrapper) -> None: ...
    @overload
    def SetSoccarGame(classServerWrapper) -> void: ...
    @overload
    def SetTimeBeforeHighlightReplay(self, newTimeBeforeHighlightReplay: float) -> None: ...
    @overload
    def SetTimeBeforeHighlightReplay(float) -> void: ...
    @overload
    def SetbAutoSave(self, newbAutoSave: int) -> None: ...
    @overload
    def SetbAutoSave(unsignedlong) -> void: ...
    @overload
    def SetbSlomo(self, newbSlomo: int) -> None: ...
    @overload
    def SetbSlomo(unsignedlong) -> void: ...
    @overload
    def SetbSlomoForDefender(self, newbSlomoForDefender: int) -> None: ...
    @overload
    def SetbSlomoForDefender(unsignedlong) -> void: ...
    @overload
    def ShouldSlomo(self) -> bool: ...
    @overload
    def ShouldSlomo() -> bool: ...
    @overload
    def UpdateFocusActors(self) -> None: ...
    @overload
    def UpdateFocusActors() -> void: ...
    @overload
    def UpdateSlomo(self) -> None: ...
    @overload
    def UpdateSlomo() -> void: ...
    def assign(self, rhs: ReplayDirectorWrapper) -> ReplayDirectorWrapper: ...
    @overload
    def eventDestroyed(self) -> None: ...
    @overload
    def eventDestroyed() -> void: ...
    @overload
    def eventTick(self, DeltaTime: float) -> None: ...
    @overload
    def eventTick(float) -> void: ...

class ReplayServerWrapper(ServerWrapper):
    @overload
    def __init__(self, server: int, gameinfo: int, replaydirector: int) -> None: ...
    @overload
    def __init__(self, arg0: ReplayServerWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def AddKeyFrame(self, frame: int, name: str) -> None: ...
    @overload
    def AddKeyFrame(int, std) -> void: ...
    @overload
    def GetCurrentReplayFrame(self) -> int: ...
    @overload
    def GetCurrentReplayFrame() -> int: ...
    @overload
    def GetReplay(self) -> ReplayWrapper: ...
    @overload
    def GetReplay() -> classReplayWrapper: ...
    @overload
    def GetReplayFPS(self) -> int: ...
    @overload
    def GetReplayFPS() -> int: ...
    @overload
    def GetReplayTimeElapsed(self) -> float: ...
    @overload
    def GetReplayTimeElapsed() -> float: ...
    @overload
    def GetViewTarget(self) -> ActorWrapper: ...
    @overload
    def GetViewTarget() -> classActorWrapper: ...
    @overload
    def RemoveKeyFrame(self, frame: int) -> None: ...
    @overload
    def RemoveKeyFrame(int) -> void: ...
    @overload
    def SkipToFrame(self, frame: int) -> None: ...
    @overload
    def SkipToFrame(int) -> void: ...
    @overload
    def SkipToTime(self, time: float) -> None: ...
    @overload
    def SkipToTime(float) -> void: ...
    @overload
    def StartPlaybackAtFrame(self, frame: int) -> None: ...
    @overload
    def StartPlaybackAtFrame(int) -> void: ...
    @overload
    def StartPlaybackAtTime(self, time: float) -> None: ...
    @overload
    def StartPlaybackAtTime(float) -> void: ...
    def assign(self, rhs: ReplayServerWrapper) -> ReplayServerWrapper: ...

class ReplaySoccarWrapper(ReplayWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: ReplaySoccarWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def AddPlayer(self, PRI: PriWrapper) -> None: ...
    @overload
    def AddPlayer(classPriWrapper) -> void: ...
    @overload
    def GetPrimaryPlayerTeam(self) -> int: ...
    @overload
    def GetPrimaryPlayerTeam() -> int: ...
    @overload
    def GetTeam0Score(self) -> int: ...
    @overload
    def GetTeam0Score() -> int: ...
    @overload
    def GetTeam1Score(self) -> int: ...
    @overload
    def GetTeam1Score() -> int: ...
    @overload
    def GetTeamSize(self) -> int: ...
    @overload
    def GetTeamSize() -> int: ...
    @overload
    def GetUnfairTeamSize(self) -> int: ...
    @overload
    def GetUnfairTeamSize() -> int: ...
    @overload
    def GetbUnfairBots(self) -> int: ...
    @overload
    def GetbUnfairBots() -> unsignedlong: ...
    @overload
    def RecordUserEvent(self) -> None: ...
    @overload
    def RecordUserEvent() -> void: ...
    @overload
    def RemoveTimelineKeyframe(self, KeyframeIndex: int) -> None: ...
    @overload
    def RemoveTimelineKeyframe(int) -> void: ...
    @overload
    def SetPrimaryPlayerTeam(self, newPrimaryPlayerTeam: int) -> None: ...
    @overload
    def SetPrimaryPlayerTeam(int) -> void: ...
    @overload
    def SetTeam0Score(self, newTeam0Score: int) -> None: ...
    @overload
    def SetTeam0Score(int) -> void: ...
    @overload
    def SetTeam1Score(self, newTeam1Score: int) -> None: ...
    @overload
    def SetTeam1Score(int) -> void: ...
    @overload
    def SetTeamSize(self, newTeamSize: int) -> None: ...
    @overload
    def SetTeamSize(int) -> void: ...
    @overload
    def SetUnfairTeamSize(self, newUnfairTeamSize: int) -> None: ...
    @overload
    def SetUnfairTeamSize(int) -> void: ...
    @overload
    def SetbUnfairBots(self, newbUnfairBots: int) -> None: ...
    @overload
    def SetbUnfairBots(unsignedlong) -> void: ...
    def assign(self, rhs: ReplaySoccarWrapper) -> ReplaySoccarWrapper: ...
    @overload
    def eventPreExport(self) -> None: ...
    @overload
    def eventPreExport() -> void: ...

class ReplayWrapper(ObjectWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: ReplayWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def CreateCopy(self, StartTime: float) -> ReplayWrapper: ...
    @overload
    def CreateCopy(float) -> classReplayWrapper: ...
    @overload
    def EventPlaybackStopped(self, Replay: ReplayWrapper) -> None: ...
    @overload
    def EventPlaybackStopped(classReplayWrapper) -> void: ...
    @overload
    def EventPlayedFrame(self, Replay: ReplayWrapper) -> None: ...
    @overload
    def EventPlayedFrame(classReplayWrapper) -> void: ...
    @overload
    def EventPostTimeSkip(self, Replay: ReplayWrapper) -> None: ...
    @overload
    def EventPostTimeSkip(classReplayWrapper) -> void: ...
    @overload
    def EventPreTimeSkip(self, Replay: ReplayWrapper) -> None: ...
    @overload
    def EventPreTimeSkip(classReplayWrapper) -> void: ...
    @overload
    def EventSpawned(self, Replay: ReplayWrapper, A: ActorWrapper) -> None: ...
    @overload
    def EventSpawned(classReplayWrapper, classActorWrapper) -> void: ...
    @overload
    def ExportReplay(self, Path: str) -> None: ...
    @overload
    def ExportReplay(std) -> void: ...
    @overload
    def GetAccumulatedDeltaTime(self) -> float: ...
    @overload
    def GetAccumulatedDeltaTime() -> float: ...
    @overload
    def GetBuildID(self) -> int: ...
    @overload
    def GetBuildID() -> int: ...
    @overload
    def GetBuildVersion(self) -> UnrealStringWrapper: ...
    @overload
    def GetBuildVersion() -> classUnrealStringWrapper: ...
    @overload
    def GetChangelist(self) -> int: ...
    @overload
    def GetChangelist() -> int: ...
    @overload
    def GetCurrentFrame(self) -> int: ...
    @overload
    def GetCurrentFrame() -> int: ...
    @overload
    def GetDate(self) -> UnrealStringWrapper: ...
    @overload
    def GetDate() -> classUnrealStringWrapper: ...
    @overload
    def GetEngineVersion(self) -> int: ...
    @overload
    def GetEngineVersion() -> int: ...
    @overload
    def GetFilename(self) -> UnrealStringWrapper: ...
    @overload
    def GetFilename() -> classUnrealStringWrapper: ...
    @overload
    def GetFrameToSkipTo(self) -> int: ...
    @overload
    def GetFrameToSkipTo() -> int: ...
    @overload
    def GetGameVersion(self) -> int: ...
    @overload
    def GetGameVersion() -> int: ...
    @overload
    def GetId(self) -> UnrealStringWrapper: ...
    @overload
    def GetId() -> classUnrealStringWrapper: ...
    @overload
    def GetKeyframeDelay(self) -> float: ...
    @overload
    def GetKeyframeDelay() -> float: ...
    @overload
    def GetLicenseeVersion(self) -> int: ...
    @overload
    def GetLicenseeVersion() -> int: ...
    @overload
    def GetMaxChannels(self) -> int: ...
    @overload
    def GetMaxChannels() -> int: ...
    @overload
    def GetMaxReplaySizeMB(self) -> int: ...
    @overload
    def GetMaxReplaySizeMB() -> int: ...
    @overload
    def GetNetVersion(self) -> int: ...
    @overload
    def GetNetVersion() -> int: ...
    @overload
    def GetNextKeyframe(self) -> int: ...
    @overload
    def GetNextKeyframe() -> int: ...
    @overload
    def GetNumFrames(self) -> int: ...
    @overload
    def GetNumFrames() -> int: ...
    @overload
    def GetPlaybackTime(self) -> float: ...
    @overload
    def GetPlaybackTime() -> float: ...
    @overload
    def GetPlayerName(self) -> UnrealStringWrapper: ...
    @overload
    def GetPlayerName() -> classUnrealStringWrapper: ...
    @overload
    def GetPlayersOnlyTicks(self) -> int: ...
    @overload
    def GetPlayersOnlyTicks() -> int: ...
    @overload
    def GetRecordFPS(self) -> float: ...
    @overload
    def GetRecordFPS() -> float: ...
    @overload
    def GetReplayLastSaveVersion(self) -> int: ...
    @overload
    def GetReplayLastSaveVersion() -> int: ...
    @overload
    def GetReplayName(self) -> UnrealStringWrapper: ...
    @overload
    def GetReplayName() -> classUnrealStringWrapper: ...
    @overload
    def GetReplayState(self) -> int: ...
    @overload
    def GetReplayState() -> unsignedchar: ...
    @overload
    def GetReplayTimeSeconds(self) -> float: ...
    @overload
    def GetReplayTimeSeconds() -> float: ...
    @overload
    def GetReplayVersion(self) -> int: ...
    @overload
    def GetReplayVersion() -> int: ...
    @overload
    def GetReserveMegabytes(self) -> int: ...
    @overload
    def GetReserveMegabytes() -> int: ...
    @overload
    def GetTimeToSkipTo(self) -> float: ...
    @overload
    def GetTimeToSkipTo() -> float: ...
    @overload
    def GetbDebug(self) -> int: ...
    @overload
    def GetbDebug() -> unsignedlong: ...
    @overload
    def GetbFileCorrupted(self) -> int: ...
    @overload
    def GetbFileCorrupted() -> unsignedlong: ...
    @overload
    def GetbForceKeyframe(self) -> int: ...
    @overload
    def GetbForceKeyframe() -> unsignedlong: ...
    @overload
    def GetbLoadedNetPackages(self) -> int: ...
    @overload
    def GetbLoadedNetPackages() -> unsignedlong: ...
    @overload
    def ImportReplay(self, Path: str) -> None: ...
    @overload
    def ImportReplay(std) -> void: ...
    @overload
    def IsFromBeforeGameVersion(self, BeforeGameVersion: int) -> bool: ...
    @overload
    def IsFromBeforeGameVersion(unsignedchar) -> bool: ...
    @overload
    def IsFromBeforeReplayVersion(self, BeforeReplayVersion: int) -> bool: ...
    @overload
    def IsFromBeforeReplayVersion(unsignedchar) -> bool: ...
    @overload
    def RemoveTimelineKeyframe(self, KeyframeIndex: int) -> None: ...
    @overload
    def RemoveTimelineKeyframe(int) -> void: ...
    @overload
    def SetAccumulatedDeltaTime(self, newAccumulatedDeltaTime: float) -> None: ...
    @overload
    def SetAccumulatedDeltaTime(float) -> void: ...
    @overload
    def SetBuildID(self, newBuildID: int) -> None: ...
    @overload
    def SetBuildID(int) -> void: ...
    @overload
    def SetChangelist(self, newChangelist: int) -> None: ...
    @overload
    def SetChangelist(int) -> void: ...
    @overload
    def SetCurrentFrame(self, newCurrentFrame: int) -> None: ...
    @overload
    def SetCurrentFrame(int) -> void: ...
    @overload
    def SetCurrentTime(self, newCurrentTime: float) -> None: ...
    @overload
    def SetCurrentTime(float) -> void: ...
    @overload
    def SetEngineVersion(self, newEngineVersion: int) -> None: ...
    @overload
    def SetEngineVersion(int) -> void: ...
    @overload
    def SetFrameToSkipTo(self, newFrameToSkipTo: int) -> None: ...
    @overload
    def SetFrameToSkipTo(int) -> void: ...
    @overload
    def SetGameVersion(self, newGameVersion: int) -> None: ...
    @overload
    def SetGameVersion(int) -> void: ...
    @overload
    def SetKeyframeDelay(self, newKeyframeDelay: float) -> None: ...
    @overload
    def SetKeyframeDelay(float) -> void: ...
    @overload
    def SetLicenseeVersion(self, newLicenseeVersion: int) -> None: ...
    @overload
    def SetLicenseeVersion(int) -> void: ...
    @overload
    def SetMaxChannels(self, newMaxChannels: int) -> None: ...
    @overload
    def SetMaxChannels(int) -> void: ...
    @overload
    def SetMaxReplaySizeMB(self, newMaxReplaySizeMB: int) -> None: ...
    @overload
    def SetMaxReplaySizeMB(int) -> void: ...
    @overload
    def SetNetVersion(self, newNetVersion: int) -> None: ...
    @overload
    def SetNetVersion(int) -> void: ...
    @overload
    def SetNextKeyframe(self, newNextKeyframe: int) -> None: ...
    @overload
    def SetNextKeyframe(int) -> void: ...
    @overload
    def SetNumFrames(self, newNumFrames: int) -> None: ...
    @overload
    def SetNumFrames(int) -> void: ...
    @overload
    def SetPlayersOnlyTicks(self, newPlayersOnlyTicks: int) -> None: ...
    @overload
    def SetPlayersOnlyTicks(int) -> void: ...
    @overload
    def SetRecordFPS(self, newRecordFPS: float) -> None: ...
    @overload
    def SetRecordFPS(float) -> void: ...
    @overload
    def SetReplayLastSaveVersion(self, newReplayLastSaveVersion: int) -> None: ...
    @overload
    def SetReplayLastSaveVersion(int) -> void: ...
    @overload
    def SetReplayName(self, NewName: str) -> None: ...
    @overload
    def SetReplayName(std) -> void: ...
    @overload
    def SetReplayState(self, newReplayState: int) -> None: ...
    @overload
    def SetReplayState(unsignedchar) -> void: ...
    @overload
    def SetReplayVersion(self, newReplayVersion: int) -> None: ...
    @overload
    def SetReplayVersion(int) -> void: ...
    @overload
    def SetReserveMegabytes(self, newReserveMegabytes: int) -> None: ...
    @overload
    def SetReserveMegabytes(int) -> void: ...
    @overload
    def SetTimeToSkipTo(self, newTimeToSkipTo: float) -> None: ...
    @overload
    def SetTimeToSkipTo(float) -> void: ...
    @overload
    def SetbDebug(self, newbDebug: int) -> None: ...
    @overload
    def SetbDebug(unsignedlong) -> void: ...
    @overload
    def SetbFileCorrupted(self, newbFileCorrupted: int) -> None: ...
    @overload
    def SetbFileCorrupted(unsignedlong) -> void: ...
    @overload
    def SetbForceKeyframe(self, newbForceKeyframe: int) -> None: ...
    @overload
    def SetbForceKeyframe(unsignedlong) -> void: ...
    @overload
    def SetbLoadedNetPackages(self, newbLoadedNetPackages: int) -> None: ...
    @overload
    def SetbLoadedNetPackages(unsignedlong) -> void: ...
    @overload
    def SkipToFrame(self, frame: int, bFlush: int) -> None: ...
    @overload
    def SkipToFrame(int, unsignedlong) -> void: ...
    @overload
    def SkipToTime(self, Time: float, bFlush: int) -> None: ...
    @overload
    def SkipToTime(float, unsignedlong) -> void: ...
    @overload
    def StartPlaybackAtFrame(self, StartFrame: int) -> None: ...
    @overload
    def StartPlaybackAtFrame(int) -> void: ...
    @overload
    def StartPlaybackAtTimeSeconds(self, StartTime: float) -> None: ...
    @overload
    def StartPlaybackAtTimeSeconds(float) -> void: ...
    @overload
    def StartRecord(self) -> None: ...
    @overload
    def StartRecord() -> void: ...
    @overload
    def StopPlayback(self) -> None: ...
    @overload
    def StopPlayback() -> void: ...
    @overload
    def StopRecord(self) -> None: ...
    @overload
    def StopRecord() -> void: ...
    @overload
    def Tick2(self, DeltaTime: float) -> None: ...
    @overload
    def Tick2(float) -> void: ...
    def assign(self, rhs: ReplayWrapper) -> ReplayWrapper: ...
    @overload
    def eventPreExport(self) -> None: ...
    @overload
    def eventPreExport() -> void: ...
    def eventTrimData(self, FirstKeyframe: int, FirstFrame: int) -> None: ...

class Rotator:
    @overload
    def __init__(self, pitch: int, yaw: int, roll: int) -> None: ...
    @overload
    def __init__(self, def: int) -> None: ...
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: Rotator) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    def __add__(self, v2: Rotator) -> Rotator: ...
    def __div__(self, v2: Rotator) -> Rotator: ...
    def __mul__(self, v2: Rotator) -> Rotator: ...
    def __sub__(self, v2: Rotator) -> Rotator: ...
    @property
    def Pitch(self) -> Any: ...
    @Pitch.setter
    def Pitch(self, val: Any) -> None: ...
    @property
    def Roll(self) -> Any: ...
    @Roll.setter
    def Roll(self, val: Any) -> None: ...
    @property
    def Yaw(self) -> Any: ...
    @Yaw.setter
    def Yaw(self, val: Any) -> None: ...

class RumblePickupComponentWrapper(CarComponentWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: RumblePickupComponentWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def ApplyPickup(self, InCar: CarWrapper) -> None: ...
    @overload
    def ApplyPickup(classCarWrapper) -> void: ...
    @overload
    def CanPickup(self, InCar: CarWrapper) -> bool: ...
    @overload
    def CanPickup(classCarWrapper) -> bool: ...
    @overload
    def DeactivatePickup(self) -> None: ...
    @overload
    def DeactivatePickup() -> void: ...
    @overload
    def GetActivationDuration(self) -> float: ...
    @overload
    def GetActivationDuration() -> float: ...
    @overload
    def GetActiveTimePercent(self) -> float: ...
    @overload
    def GetActiveTimePercent() -> float: ...
    @overload
    def GetBoostComponent(self) -> BoostWrapper: ...
    @overload
    def GetBoostComponent() -> classBoostWrapper: ...
    @overload
    def GetClientTarget(self) -> RBActorWrapper: ...
    @overload
    def GetClientTarget() -> classRBActorWrapper: ...
    @overload
    def GetPickupName(self) -> UnrealStringWrapper: ...
    @overload
    def GetPickupName() -> classUnrealStringWrapper: ...
    @overload
    def GetbHasActivated(self) -> int: ...
    @overload
    def GetbHasActivated() -> unsignedlong: ...
    @overload
    def GetbHudIgnoreUseTime(self) -> int: ...
    @overload
    def GetbHudIgnoreUseTime() -> unsignedlong: ...
    @overload
    def GetbIsActive(self) -> int: ...
    @overload
    def GetbIsActive() -> unsignedlong: ...
    @overload
    def HasActivated2(self) -> bool: ...
    @overload
    def HasActivated2() -> bool: ...
    @overload
    def OnCreated(self) -> None: ...
    @overload
    def OnCreated() -> void: ...
    @overload
    def OnVehicleSetupComplete(self) -> None: ...
    @overload
    def OnVehicleSetupComplete() -> void: ...
    @overload
    def PickupEnd(self) -> None: ...
    @overload
    def PickupEnd() -> void: ...
    @overload
    def PickupStart(self) -> None: ...
    @overload
    def PickupStart() -> void: ...
    @overload
    def SetActivationDuration(self, newActivationDuration: float) -> None: ...
    @overload
    def SetActivationDuration(float) -> void: ...
    @overload
    def SetbHasActivated(self, newbHasActivated: int) -> None: ...
    @overload
    def SetbHasActivated(unsignedlong) -> void: ...
    @overload
    def SetbHudIgnoreUseTime(self, newbHudIgnoreUseTime: int) -> None: ...
    @overload
    def SetbHudIgnoreUseTime(unsignedlong) -> void: ...
    @overload
    def SetbIsActive(self, newbIsActive: int) -> None: ...
    @overload
    def SetbIsActive(unsignedlong) -> void: ...
    @overload
    def TryActivate(self, TargetOverride: RBActorWrapper) -> bool: ...
    @overload
    def TryActivate(classRBActorWrapper) -> bool: ...
    def assign(self, rhs: RumblePickupComponentWrapper) -> RumblePickupComponentWrapper: ...

class SampleHistoryWrapper(ObjectWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: SampleHistoryWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def AddSample(self, NewValue: float) -> None: ...
    @overload
    def AddSample(float) -> void: ...
    @overload
    def GetAccumTime(self) -> float: ...
    @overload
    def GetAccumTime() -> float: ...
    @overload
    def GetBadValue(self) -> float: ...
    @overload
    def GetBadValue() -> float: ...
    @overload
    def GetBaseValue(self) -> float: ...
    @overload
    def GetBaseValue() -> float: ...
    @overload
    def GetGoodValue(self) -> float: ...
    @overload
    def GetGoodValue() -> float: ...
    @overload
    def GetPendingSample(self) -> RecordedSample: ...
    @overload
    def GetPendingSample() -> structRecordedSample: ...
    @overload
    def GetRecordSettings(self) -> SampleRecordSettingsWrapper: ...
    @overload
    def GetRecordSettings() -> classSampleRecordSettingsWrapper: ...
    @overload
    def GetSampleIndex(self) -> int: ...
    @overload
    def GetSampleIndex() -> int: ...
    @overload
    def GetSamples(self) -> StructArrayWrapper<RecordedSample>: ...
    @overload
    def GetSamples() -> classStructArrayWrapper<structRecordedSample>: ...
    @overload
    def GetSummaryValue(self, Type: int, MaxSampleAge: float, bAbsoluteValue: int) -> float: ...
    @overload
    def GetSummaryValue(unsignedchar, float, unsignedlong) -> float: ...
    @overload
    def GetTitle(self) -> UnrealStringWrapper: ...
    @overload
    def GetTitle() -> classUnrealStringWrapper: ...
    @overload
    def GetYMax(self) -> float: ...
    @overload
    def GetYMax() -> float: ...
    @overload
    def GetYMin(self) -> float: ...
    @overload
    def GetYMin() -> float: ...
    @overload
    def GetbHasPendingSample(self) -> int: ...
    @overload
    def GetbHasPendingSample() -> unsignedlong: ...
    @overload
    def SetAccumTime(self, newAccumTime: float) -> None: ...
    @overload
    def SetAccumTime(float) -> void: ...
    @overload
    def SetBadValue(self, newBadValue: float) -> None: ...
    @overload
    def SetBadValue(float) -> void: ...
    @overload
    def SetBaseValue(self, newBaseValue: float) -> None: ...
    @overload
    def SetBaseValue(float) -> void: ...
    @overload
    def SetBaseValue2(self, InBaseValue: float) -> SampleHistoryWrapper: ...
    @overload
    def SetBaseValue2(float) -> classSampleHistoryWrapper: ...
    def SetGoodBadValues(self, InGoodValue: float, InBadValue: float) -> SampleHistoryWrapper: ...
    @overload
    def SetGoodValue(self, newGoodValue: float) -> None: ...
    @overload
    def SetGoodValue(float) -> void: ...
    def SetGraphMaxMin(self, MaxValue: float, MinValue: float) -> SampleHistoryWrapper: ...
    @overload
    def SetPendingSample(self, newPendingSample: RecordedSample) -> None: ...
    @overload
    def SetPendingSample(structRecordedSample) -> void: ...
    @overload
    def SetRecordSettings(self, newRecordSettings: SampleRecordSettingsWrapper) -> None: ...
    @overload
    def SetRecordSettings(classSampleRecordSettingsWrapper) -> void: ...
    @overload
    def SetSampleIndex(self, newSampleIndex: int) -> None: ...
    @overload
    def SetSampleIndex(int) -> void: ...
    @overload
    def SetTitle(self, InTitle: str) -> SampleHistoryWrapper: ...
    @overload
    def SetTitle(std) -> classSampleHistoryWrapper: ...
    @overload
    def SetYMax(self, newYMax: float) -> None: ...
    @overload
    def SetYMax(float) -> void: ...
    @overload
    def SetYMin(self, newYMin: float) -> None: ...
    @overload
    def SetYMin(float) -> void: ...
    @overload
    def SetbHasPendingSample(self, newbHasPendingSample: int) -> None: ...
    @overload
    def SetbHasPendingSample(unsignedlong) -> void: ...
    @overload
    def Tick(self, DeltaTime: float) -> None: ...
    @overload
    def Tick(float) -> void: ...
    def assign(self, rhs: SampleHistoryWrapper) -> SampleHistoryWrapper: ...

class SampleRecordSettingsWrapper(ObjectWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: SampleRecordSettingsWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def GetMaxSampleAge(self) -> float: ...
    @overload
    def GetMaxSampleAge() -> float: ...
    @overload
    def GetRecordRate(self) -> float: ...
    @overload
    def GetRecordRate() -> float: ...
    @overload
    def SetMaxSampleAge(self, newMaxSampleAge: float) -> None: ...
    @overload
    def SetMaxSampleAge(float) -> void: ...
    @overload
    def SetRecordRate(self, newRecordRate: float) -> None: ...
    @overload
    def SetRecordRate(float) -> void: ...
    def assign(self, rhs: SampleRecordSettingsWrapper) -> SampleRecordSettingsWrapper: ...

class SaveDataWrapper(ObjectWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: SaveDataWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def GetDirectoryPath(self) -> UnrealStringWrapper: ...
    @overload
    def GetDirectoryPath() -> classUnrealStringWrapper: ...
    @overload
    def GetSaveExt(self) -> UnrealStringWrapper: ...
    @overload
    def GetSaveExt() -> classUnrealStringWrapper: ...
    @overload
    def GetSaveType(self) -> UnrealStringWrapper: ...
    @overload
    def GetSaveType() -> classUnrealStringWrapper: ...
    @overload
    def GetbExactFileMatch(self) -> int: ...
    @overload
    def GetbExactFileMatch() -> unsignedlong: ...
    @overload
    def Init(self) -> None: ...
    @overload
    def Init() -> void: ...
    @overload
    def SetbExactFileMatch(self, newbExactFileMatch: int) -> None: ...
    @overload
    def SetbExactFileMatch(unsignedlong) -> void: ...
    def assign(self, rhs: SaveDataWrapper) -> SaveDataWrapper: ...

class ServerWrapper(TeamGameEventWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: ServerWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def AddBallTrajectory(self, InBall: BallWrapper) -> None: ...
    @overload
    def AddBallTrajectory(classBallWrapper) -> void: ...
    @overload
    def AddGameBall(self, Ball: BallWrapper) -> None: ...
    @overload
    def AddGameBall(classBallWrapper) -> void: ...
    @overload
    def AddLocalPlayer(self, Player: PlayerControllerWrapper) -> None: ...
    @overload
    def AddLocalPlayer(classPlayerControllerWrapper) -> void: ...
    @overload
    def AddPRI(self, PRI: PriWrapper) -> None: ...
    @overload
    def AddPRI(classPriWrapper) -> void: ...
    @overload
    def AllowDynamicCrowd(self) -> bool: ...
    @overload
    def AllowDynamicCrowd() -> bool: ...
    @overload
    def AssignCustomTeamSettings(self) -> None: ...
    @overload
    def AssignCustomTeamSettings() -> void: ...
    @overload
    def BeginHighlightsReplay(self) -> None: ...
    @overload
    def BeginHighlightsReplay() -> void: ...
    @overload
    def CanAwardPoints(self) -> bool: ...
    @overload
    def CanAwardPoints() -> bool: ...
    @overload
    def CanEnableCarPodiumMovement(self) -> bool: ...
    @overload
    def CanEnableCarPodiumMovement() -> bool: ...
    @overload
    def CanInitClubMatch(self) -> bool: ...
    @overload
    def CanInitClubMatch() -> bool: ...
    @overload
    def CanSpawnBots(self) -> bool: ...
    @overload
    def CanSpawnBots() -> bool: ...
    @overload
    def CanUpdateGameTime(self) -> bool: ...
    @overload
    def CanUpdateGameTime() -> bool: ...
    @overload
    def CanUseBallCam(self) -> bool: ...
    @overload
    def CanUseBallCam() -> bool: ...
    @overload
    def CheckForAutoBalance(self) -> None: ...
    @overload
    def CheckForAutoBalance() -> void: ...
    @overload
    def CheckForCountdownAction(self) -> None: ...
    @overload
    def CheckForCountdownAction() -> void: ...
    @overload
    def CheckJoinInProgress(self, PRI: PriWrapper) -> None: ...
    @overload
    def CheckJoinInProgress(classPriWrapper) -> void: ...
    @overload
    def CheckStart(self) -> None: ...
    @overload
    def CheckStart() -> void: ...
    @overload
    def ClearReplicatedScoredOnTeam(self) -> None: ...
    @overload
    def ClearReplicatedScoredOnTeam() -> void: ...
    @overload
    def ClearReplicatedStatEvent(self) -> None: ...
    @overload
    def ClearReplicatedStatEvent() -> void: ...
    @overload
    def CreateGoalIndicators(self, Player: PlayerControllerWrapper) -> None: ...
    @overload
    def CreateGoalIndicators(classPlayerControllerWrapper) -> void: ...
    @overload
    def DestroyBalls(self) -> None: ...
    @overload
    def DestroyBalls() -> void: ...
    @overload
    def DestroyCars(self) -> None: ...
    @overload
    def DestroyCars() -> void: ...
    @overload
    def DestroyGoalIndicators(self, Player: PlayerControllerWrapper) -> None: ...
    @overload
    def DestroyGoalIndicators(classPlayerControllerWrapper) -> void: ...
    @overload
    def DetermineAssistTouchIndex(self, Ball: BallWrapper, ScoreIdx: int) -> int: ...
    @overload
    def DetermineAssistTouchIndex(classBallWrapper, int) -> int: ...
    @overload
    def DetermineScoreTouchIndex(self, Ball: BallWrapper, Goal: GoalWrapper) -> int: ...
    @overload
    def DetermineScoreTouchIndex(classBallWrapper, classGoalWrapper) -> int: ...
    @overload
    def DisableGoalReset(self) -> None: ...
    @overload
    def DisableGoalReset() -> void: ...
    @overload
    def DisableStatXP(self) -> bool: ...
    @overload
    def DisableStatXP() -> bool: ...
    @overload
    def EnableGoalReset(self) -> None: ...
    @overload
    def EnableGoalReset() -> void: ...
    @overload
    def EndGame(self) -> None: ...
    @overload
    def EndGame() -> void: ...
    @overload
    def EndRound(self) -> None: ...
    @overload
    def EndRound() -> void: ...
    @overload
    def EnoughTimePassedToForfeit(self) -> bool: ...
    @overload
    def EnoughTimePassedToForfeit() -> bool: ...
    @overload
    def EventGameWinnerSet(self, GameEvent: ServerWrapper) -> None: ...
    @overload
    def EventGameWinnerSet(classServerWrapper) -> void: ...
    def EventGoalScored(self, GameEvent: ServerWrapper, Ball: BallWrapper, Goal: GoalWrapper, ScoreIndex: int, AssistIdx: int) -> None: ...
    @overload
    def FinishEvent(self) -> None: ...
    @overload
    def FinishEvent() -> void: ...
    @overload
    def ForceMatchStart(self) -> None: ...
    @overload
    def ForceMatchStart() -> void: ...
    @overload
    def ForceOvertime(self) -> None: ...
    @overload
    def ForceOvertime() -> void: ...
    @overload
    def FreezePawns(self) -> None: ...
    @overload
    def FreezePawns() -> void: ...
    @overload
    def GenerateGoalAimLocation(self, goalNumber: int, currentBallLocation: Vector) -> Vector: ...
    @overload
    def GenerateGoalAimLocation(int, structVector) -> structVector: ...
    def GenerateShot(self, startPos: Vector, destination: Vector, speed: float) -> Vector: ...
    @overload
    def GetAssistMaxTime(self) -> float: ...
    @overload
    def GetAssistMaxTime() -> float: ...
    @overload
    def GetAutoBalanceDifference(self) -> int: ...
    @overload
    def GetAutoBalanceDifference() -> int: ...
    @overload
    def GetBall(self) -> BallWrapper: ...
    @overload
    def GetBall() -> classBallWrapper: ...
    @overload
    def GetBallArchetype(self) -> BallWrapper: ...
    @overload
    def GetBallArchetype() -> classBallWrapper: ...
    @overload
    def GetBallHasBeenHitStartDelay(self) -> float: ...
    @overload
    def GetBallHasBeenHitStartDelay() -> float: ...
    @overload
    def GetBallSpawnPoint(self) -> ActorWrapper: ...
    @overload
    def GetBallSpawnPoint() -> classActorWrapper: ...
    @overload
    def GetFastestGoalPlayer(self) -> PriWrapper: ...
    @overload
    def GetFastestGoalPlayer() -> classPriWrapper: ...
    @overload
    def GetFastestGoalSpeed(self) -> float: ...
    @overload
    def GetFastestGoalSpeed() -> float: ...
    @overload
    def GetFieldCenter(self) -> Vector: ...
    @overload
    def GetFieldCenter() -> structVector: ...
    @overload
    def GetFurthestGoal(self) -> float: ...
    @overload
    def GetFurthestGoal() -> float: ...
    @overload
    def GetFurthestGoalPlayer(self) -> PriWrapper: ...
    @overload
    def GetFurthestGoalPlayer() -> classPriWrapper: ...
    @overload
    def GetGameBalls(self) -> ArrayWrapper_BallWrapper_t: ...
    @overload
    def GetGameBalls() -> classArrayWrapper<classBallWrapper>: ...
    @overload
    def GetGameCar(self) -> CarWrapper: ...
    @overload
    def GetGameCar() -> classCarWrapper: ...
    @overload
    def GetGameSpeed(self) -> float: ...
    @overload
    def GetGameSpeed() -> float: ...
    @overload
    def GetGameTime(self) -> int: ...
    @overload
    def GetGameTime() -> int: ...
    @overload
    def GetGameTimeRemaining(self) -> float: ...
    @overload
    def GetGameTimeRemaining() -> float: ...
    @overload
    def GetGameWinner(self) -> TeamWrapper: ...
    @overload
    def GetGameWinner() -> classTeamWrapper: ...
    @overload
    def GetGoalExtent(self) -> Vector: ...
    @overload
    def GetGoalExtent(self, goalNumber: int = ...) -> Vector: ...
    @overload
    def GetGoalExtent(int) -> structVector: ...
    @overload
    def GetGoalExtent(*args, **kwargs) -> Any: ...
    @overload
    def GetGoalLocation(self) -> Vector: ...
    @overload
    def GetGoalLocation(self, goalNumber: int = ...) -> Vector: ...
    @overload
    def GetGoalLocation(int) -> structVector: ...
    @overload
    def GetGoalLocation(*args, **kwargs) -> Any: ...
    @overload
    def GetGoals(self) -> ArrayWrapper_GoalWrapper_t: ...
    @overload
    def GetGoals() -> classArrayWrapper<classGoalWrapper>: ...
    @overload
    def GetLobbyCountdown(self) -> int: ...
    @overload
    def GetLobbyCountdown() -> int: ...
    @overload
    def GetLobbyEndCountdown(self) -> int: ...
    @overload
    def GetLobbyEndCountdown() -> int: ...
    @overload
    def GetLobbySpawnRestartTime(self) -> int: ...
    @overload
    def GetLobbySpawnRestartTime() -> int: ...
    @overload
    def GetLobbyTime(self) -> float: ...
    @overload
    def GetLobbyTime() -> float: ...
    @overload
    def GetMVP(self) -> PriWrapper: ...
    @overload
    def GetMVP() -> classPriWrapper: ...
    @overload
    def GetMatchWinner(self) -> TeamWrapper: ...
    @overload
    def GetMatchWinner() -> classTeamWrapper: ...
    @overload
    def GetMaxScore(self) -> int: ...
    @overload
    def GetMaxScore() -> int: ...
    @overload
    def GetNextSpawnIndex(self) -> int: ...
    @overload
    def GetNextSpawnIndex() -> int: ...
    @overload
    def GetOvertimeTimePlayed(self) -> float: ...
    @overload
    def GetOvertimeTimePlayed() -> float: ...
    @overload
    def GetPauser(self) -> PlayerControllerWrapper: ...
    @overload
    def GetPauser() -> classPlayerControllerWrapper: ...
    @overload
    def GetPlayerCarCount(self) -> int: ...
    @overload
    def GetPlayerCarCount() -> int: ...
    @overload
    def GetPodiumDelay(self) -> float: ...
    @overload
    def GetPodiumDelay() -> float: ...
    @overload
    def GetPodiumTime(self) -> float: ...
    @overload
    def GetPodiumTime() -> float: ...
    @overload
    def GetPostGoalTime(self) -> float: ...
    @overload
    def GetPostGoalTime() -> float: ...
    @overload
    def GetReplayDirector(self) -> ReplayDirectorWrapper: ...
    @overload
    def GetReplayDirector() -> classReplayDirectorWrapper: ...
    @overload
    def GetReplayDirectorArchetype(self) -> ReplayDirectorWrapper: ...
    @overload
    def GetReplayDirectorArchetype() -> classReplayDirectorWrapper: ...
    @overload
    def GetReplicatedScoredOnTeam(self) -> int: ...
    @overload
    def GetReplicatedScoredOnTeam() -> unsignedchar: ...
    @overload
    def GetReplicatedServerPerformanceState(self) -> int: ...
    @overload
    def GetReplicatedServerPerformanceState() -> unsignedchar: ...
    @overload
    def GetRoundNum(self) -> int: ...
    @overload
    def GetRoundNum() -> int: ...
    @overload
    def GetScoreSlomoTime(self) -> float: ...
    @overload
    def GetScoreSlomoTime() -> float: ...
    @overload
    def GetSecondsElapsed(self) -> float: ...
    @overload
    def GetSecondsElapsed() -> float: ...
    @overload
    def GetSecondsRemaining(self) -> int: ...
    @overload
    def GetSecondsRemaining() -> int: ...
    @overload
    def GetSecondsRemainingCountdown(self) -> int: ...
    @overload
    def GetSecondsRemainingCountdown() -> int: ...
    @overload
    def GetSeriesLength(self) -> int: ...
    @overload
    def GetSeriesLength() -> int: ...
    @overload
    def GetSlowestGoalPlayer(self) -> PriWrapper: ...
    @overload
    def GetSlowestGoalPlayer() -> classPriWrapper: ...
    @overload
    def GetSlowestGoalSpeed(self) -> float: ...
    @overload
    def GetSlowestGoalSpeed() -> float: ...
    @overload
    def GetTestCarArchetype(self) -> CarWrapper: ...
    @overload
    def GetTestCarArchetype() -> classCarWrapper: ...
    @overload
    def GetTotalGameBalls(self) -> int: ...
    @overload
    def GetTotalGameBalls() -> int: ...
    @overload
    def GetTotalGameTimePlayed(self) -> float: ...
    @overload
    def GetTotalGameTimePlayed() -> float: ...
    @overload
    def GetTotalScore(self) -> int: ...
    @overload
    def GetTotalScore() -> int: ...
    @overload
    def GetWaitTimeRemaining(self) -> int: ...
    @overload
    def GetWaitTimeRemaining() -> int: ...
    @overload
    def GetWarmupTime(self) -> int: ...
    @overload
    def GetWarmupTime() -> int: ...
    @overload
    def GetWinningTeam(self) -> TeamWrapper: ...
    @overload
    def GetWinningTeam() -> classTeamWrapper: ...
    @overload
    def GetbBallHasBeenHit(self) -> int: ...
    @overload
    def GetbBallHasBeenHit() -> unsignedlong: ...
    @overload
    def GetbClubMatch(self) -> int: ...
    @overload
    def GetbClubMatch() -> unsignedlong: ...
    @overload
    def GetbDisableGoalDelay(self) -> int: ...
    @overload
    def GetbDisableGoalDelay() -> unsignedlong: ...
    @overload
    def GetbMatchEnded(self) -> int: ...
    @overload
    def GetbMatchEnded() -> unsignedlong: ...
    @overload
    def GetbNoContest(self) -> int: ...
    @overload
    def GetbNoContest() -> unsignedlong: ...
    @overload
    def GetbOverTime(self) -> int: ...
    @overload
    def GetbOverTime() -> unsignedlong: ...
    @overload
    def GetbPlayReplays(self) -> int: ...
    @overload
    def GetbPlayReplays() -> unsignedlong: ...
    @overload
    def GetbRoundActive(self) -> int: ...
    @overload
    def GetbRoundActive() -> unsignedlong: ...
    @overload
    def GetbShowIntroScene(self) -> int: ...
    @overload
    def GetbShowIntroScene() -> unsignedlong: ...
    @overload
    def GetbShowNoScorerGoalMessage(self) -> int: ...
    @overload
    def GetbShowNoScorerGoalMessage() -> unsignedlong: ...
    @overload
    def GetbUnlimitedTime(self) -> int: ...
    @overload
    def GetbUnlimitedTime() -> unsignedlong: ...
    @overload
    def GotoPodiumSpotlight(self) -> None: ...
    @overload
    def GotoPodiumSpotlight() -> void: ...
    @overload
    def HandleCarSet(self, InPRI: PriWrapper) -> None: ...
    @overload
    def HandleCarSet(classPriWrapper) -> void: ...
    @overload
    def HandleCarTouch(self, Ball: BallWrapper, HitCar: CarWrapper, HitType: int) -> None: ...
    @overload
    def HandleCarTouch(classBallWrapper, classCarWrapper, unsignedchar) -> void: ...
    @overload
    def HandleCountdownTick(self) -> None: ...
    @overload
    def HandleCountdownTick() -> void: ...
    @overload
    def HandleHitGoal(self, Ball: BallWrapper, Goal: GoalWrapper) -> None: ...
    @overload
    def HandleHitGoal(classBallWrapper, classGoalWrapper) -> void: ...
    @overload
    def HandleReplayFinished(self, InReplay: ReplayDirectorWrapper) -> None: ...
    @overload
    def HandleReplayFinished(classReplayDirectorWrapper) -> void: ...
    @overload
    def HandleScoreUpdated(self, Team: TeamWrapper) -> None: ...
    @overload
    def HandleScoreUpdated(classTeamWrapper) -> void: ...
    @overload
    def HasAuthority(self) -> bool: ...
    @overload
    def HasAuthority() -> bool: ...
    @overload
    def HasWinner(self) -> bool: ...
    @overload
    def HasWinner() -> bool: ...
    @overload
    def InitBotDetection(self) -> None: ...
    @overload
    def InitBotDetection() -> void: ...
    @overload
    def InitCrowdManager(self) -> None: ...
    @overload
    def InitCrowdManager() -> void: ...
    @overload
    def InitField(self) -> None: ...
    @overload
    def InitField() -> void: ...
    @overload
    def InitGame2(self, Options: str) -> None: ...
    @overload
    def InitGame2(std) -> void: ...
    @overload
    def InitGameObserver(self) -> None: ...
    @overload
    def InitGameObserver() -> void: ...
    @overload
    def InitMutators(self) -> None: ...
    @overload
    def InitMutators() -> void: ...
    @overload
    def IsBallMovingTowardsGoal(self, goalNo: int, bw: BallWrapper) -> bool: ...
    @overload
    def IsBallMovingTowardsGoal(int, classBallWrapper) -> bool: ...
    @overload
    def IsInGoal(self, vec: Vector) -> bool: ...
    @overload
    def IsInGoal(structVector) -> bool: ...
    @overload
    def LobbyCountdownTick(self) -> None: ...
    @overload
    def LobbyCountdownTick() -> void: ...
    def MVPSort(self, A: PriWrapper, B: PriWrapper) -> int: ...
    @overload
    def NotifyKismetOfCurrentTime(self) -> None: ...
    @overload
    def NotifyKismetOfCurrentTime() -> void: ...
    @overload
    def OnAllTeamsCreated(self) -> None: ...
    @overload
    def OnAllTeamsCreated() -> void: ...
    @overload
    def OnBallHasBeenHit(self) -> None: ...
    @overload
    def OnBallHasBeenHit() -> void: ...
    @overload
    def OnBallSpawned(self, NewBall: BallWrapper) -> None: ...
    @overload
    def OnBallSpawned(classBallWrapper) -> void: ...
    @overload
    def OnClubMatch(self) -> None: ...
    @overload
    def OnClubMatch() -> void: ...
    @overload
    def OnGameTimeUpdated(self) -> None: ...
    @overload
    def OnGameTimeUpdated() -> void: ...
    @overload
    def OnGameWinnerSet(self) -> None: ...
    @overload
    def OnGameWinnerSet() -> void: ...
    @overload
    def OnInit(self) -> None: ...
    @overload
    def OnInit() -> void: ...
    @overload
    def OnMatchEnded(self) -> None: ...
    @overload
    def OnMatchEnded() -> void: ...
    @overload
    def OnMatchWinnerSet(self) -> None: ...
    @overload
    def OnMatchWinnerSet() -> void: ...
    @overload
    def OnMyHalf(self, TestLocation: Vector, TeamNum: int) -> bool: ...
    @overload
    def OnMyHalf(structVector&, unsignedchar) -> bool: ...
    @overload
    def OnOvertimeUpdated(self) -> None: ...
    @overload
    def OnOvertimeUpdated() -> void: ...
    @overload
    def RecordRecentPlayers(self) -> None: ...
    @overload
    def RecordRecentPlayers() -> void: ...
    @overload
    def RemoveGameBall(self, Ball: BallWrapper) -> None: ...
    @overload
    def RemoveGameBall(classBallWrapper) -> void: ...
    @overload
    def RemoveLocalPlayer(self, Player: PlayerControllerWrapper) -> None: ...
    @overload
    def RemoveLocalPlayer(classPlayerControllerWrapper) -> void: ...
    @overload
    def RemovePRI(self, PRI: PriWrapper) -> None: ...
    @overload
    def RemovePRI(classPriWrapper) -> void: ...
    @overload
    def RemoveTeamSelection(self) -> None: ...
    @overload
    def RemoveTeamSelection() -> void: ...
    @overload
    def ReplicateSkillTiers(self) -> None: ...
    @overload
    def ReplicateSkillTiers() -> void: ...
    @overload
    def ResetBalls(self) -> None: ...
    @overload
    def ResetBalls() -> void: ...
    @overload
    def ResetGame(self) -> None: ...
    @overload
    def ResetGame() -> void: ...
    @overload
    def ResetPickups(self) -> None: ...
    @overload
    def ResetPickups() -> void: ...
    @overload
    def ResetPlayers(self) -> None: ...
    @overload
    def ResetPlayers() -> void: ...
    @overload
    def SaveLocalPlayerStats(self) -> None: ...
    @overload
    def SaveLocalPlayerStats() -> void: ...
    @overload
    def SetAssistMaxTime(self, newAssistMaxTime: float) -> None: ...
    @overload
    def SetAssistMaxTime(float) -> void: ...
    @overload
    def SetAutoBalanceDifference(self, newAutoBalanceDifference: int) -> None: ...
    @overload
    def SetAutoBalanceDifference(int) -> void: ...
    @overload
    def SetBallArchetype(self, newBallArchetype: BallWrapper) -> None: ...
    @overload
    def SetBallArchetype(classBallWrapper) -> void: ...
    @overload
    def SetBallEventListeners(self, Ball: BallWrapper, bListen: int) -> None: ...
    @overload
    def SetBallEventListeners(classBallWrapper, unsignedlong) -> void: ...
    @overload
    def SetBallHasBeenHit2(self) -> None: ...
    @overload
    def SetBallHasBeenHit2() -> void: ...
    @overload
    def SetBallHasBeenHitStartDelay(self, newBallHasBeenHitStartDelay: float) -> None: ...
    @overload
    def SetBallHasBeenHitStartDelay(float) -> void: ...
    @overload
    def SetBallSpawnPoint(self, newBallSpawnPoint: ActorWrapper) -> None: ...
    @overload
    def SetBallSpawnPoint(classActorWrapper) -> void: ...
    @overload
    def SetDisableGoalDelay(self, bInDisableGoalDelay: int) -> None: ...
    @overload
    def SetDisableGoalDelay(unsignedlong) -> void: ...
    @overload
    def SetFastestGoalPlayer(self, newFastestGoalPlayer: PriWrapper) -> None: ...
    @overload
    def SetFastestGoalPlayer(classPriWrapper) -> void: ...
    @overload
    def SetFastestGoalSpeed(self, newFastestGoalSpeed: float) -> None: ...
    @overload
    def SetFastestGoalSpeed(float) -> void: ...
    @overload
    def SetFieldCenter(self, newFieldCenter: Vector) -> None: ...
    @overload
    def SetFieldCenter(structVector) -> void: ...
    @overload
    def SetFurthestGoal(self, newFurthestGoal: float) -> None: ...
    @overload
    def SetFurthestGoal(float) -> void: ...
    @overload
    def SetFurthestGoalPlayer(self, newFurthestGoalPlayer: PriWrapper) -> None: ...
    @overload
    def SetFurthestGoalPlayer(classPriWrapper) -> void: ...
    @overload
    def SetGameSpeed(self, GameSpeed: float) -> None: ...
    @overload
    def SetGameSpeed(float) -> void: ...
    @overload
    def SetGameTime(self, newGameTime: int) -> None: ...
    @overload
    def SetGameTime(int) -> void: ...
    @overload
    def SetGameTimeRemaining(self, newGameTimeRemaining: float) -> None: ...
    @overload
    def SetGameTimeRemaining(float) -> void: ...
    @overload
    def SetGameWinner(self, newGameWinner: TeamWrapper) -> None: ...
    @overload
    def SetGameWinner(classTeamWrapper) -> void: ...
    @overload
    def SetLobbyCountdown(self, newLobbyCountdown: int) -> None: ...
    @overload
    def SetLobbyCountdown(int) -> void: ...
    @overload
    def SetLobbyEndCountdown(self, newLobbyEndCountdown: int) -> None: ...
    @overload
    def SetLobbyEndCountdown(int) -> void: ...
    @overload
    def SetLobbySpawnRestartTime(self, newLobbySpawnRestartTime: int) -> None: ...
    @overload
    def SetLobbySpawnRestartTime(int) -> void: ...
    @overload
    def SetLobbyTime(self, newLobbyTime: float) -> None: ...
    @overload
    def SetLobbyTime(float) -> void: ...
    @overload
    def SetMVP(self, newMVP: PriWrapper) -> None: ...
    @overload
    def SetMVP(classPriWrapper) -> void: ...
    @overload
    def SetMatchWinner(self, newMatchWinner: TeamWrapper) -> None: ...
    @overload
    def SetMatchWinner(classTeamWrapper) -> void: ...
    @overload
    def SetMaxScore(self, newMaxScore: int) -> None: ...
    @overload
    def SetMaxScore(int) -> void: ...
    @overload
    def SetNextSpawnIndex(self, newNextSpawnIndex: int) -> None: ...
    @overload
    def SetNextSpawnIndex(int) -> void: ...
    @overload
    def SetOvertimeTimePlayed(self, newOvertimeTimePlayed: float) -> None: ...
    @overload
    def SetOvertimeTimePlayed(float) -> void: ...
    @overload
    def SetPaused(self, InPauser: PlayerControllerWrapper, bInPaused: int) -> None: ...
    @overload
    def SetPaused(classPlayerControllerWrapper, unsignedlong) -> void: ...
    @overload
    def SetPauser(self, newPauser: PlayerControllerWrapper) -> None: ...
    @overload
    def SetPauser(classPlayerControllerWrapper) -> void: ...
    @overload
    def SetPodiumDelay(self, newPodiumDelay: float) -> None: ...
    @overload
    def SetPodiumDelay(float) -> void: ...
    @overload
    def SetPodiumTime(self, newPodiumTime: float) -> None: ...
    @overload
    def SetPodiumTime(float) -> void: ...
    @overload
    def SetPostGoalTime(self, newPostGoalTime: float) -> None: ...
    @overload
    def SetPostGoalTime(float) -> void: ...
    @overload
    def SetReplayDirector(self, newReplayDirector: ReplayDirectorWrapper) -> None: ...
    @overload
    def SetReplayDirector(classReplayDirectorWrapper) -> void: ...
    @overload
    def SetReplayDirectorArchetype(self, newReplayDirectorArchetype: ReplayDirectorWrapper) -> None: ...
    @overload
    def SetReplayDirectorArchetype(classReplayDirectorWrapper) -> void: ...
    @overload
    def SetReplicatedScoredOnTeam(self, newReplicatedScoredOnTeam: int) -> None: ...
    @overload
    def SetReplicatedScoredOnTeam(unsignedchar) -> void: ...
    @overload
    def SetReplicatedServerPerformanceState(self, newReplicatedServerPerformanceState: int) -> None: ...
    @overload
    def SetReplicatedServerPerformanceState(unsignedchar) -> void: ...
    @overload
    def SetRoundNum(self, newRoundNum: int) -> None: ...
    @overload
    def SetRoundNum(int) -> void: ...
    def SetScoreAndTime(self, PC: PlayerControllerWrapper, NewScoreTeam0: int, NewScoreTeam1: int, InGameTimeRemaining: int, bInOvertime: int, bRestartRound: int) -> None: ...
    @overload
    def SetScoreSlomoTime(self, newScoreSlomoTime: float) -> None: ...
    @overload
    def SetScoreSlomoTime(float) -> void: ...
    @overload
    def SetSecondsElapsed(self, SecondsElapsed: float) -> None: ...
    @overload
    def SetSecondsElapsed(float) -> void: ...
    @overload
    def SetSecondsRemaining(self, newSecondsRemaining: int) -> None: ...
    @overload
    def SetSecondsRemaining(int) -> void: ...
    @overload
    def SetSecondsRemainingCountdown(self, newSecondsRemainingCountdown: int) -> None: ...
    @overload
    def SetSecondsRemainingCountdown(int) -> void: ...
    @overload
    def SetSeriesLength(self, newSeriesLength: int) -> None: ...
    @overload
    def SetSeriesLength(int) -> void: ...
    @overload
    def SetSlowestGoalPlayer(self, newSlowestGoalPlayer: PriWrapper) -> None: ...
    @overload
    def SetSlowestGoalPlayer(classPriWrapper) -> void: ...
    @overload
    def SetSlowestGoalSpeed(self, newSlowestGoalSpeed: float) -> None: ...
    @overload
    def SetSlowestGoalSpeed(float) -> void: ...
    @overload
    def SetTestCarArchetype(self, newTestCarArchetype: CarWrapper) -> None: ...
    @overload
    def SetTestCarArchetype(classCarWrapper) -> void: ...
    @overload
    def SetTotalGameBalls(self, newTotalGameBalls: int) -> None: ...
    @overload
    def SetTotalGameBalls(int) -> void: ...
    @overload
    def SetTotalGameBalls2(self, TotalBalls: int) -> None: ...
    @overload
    def SetTotalGameBalls2(int) -> void: ...
    @overload
    def SetTotalGameTimePlayed(self, newTotalGameTimePlayed: float) -> None: ...
    @overload
    def SetTotalGameTimePlayed(float) -> void: ...
    @overload
    def SetWaitTimeRemaining(self, newWaitTimeRemaining: int) -> None: ...
    @overload
    def SetWaitTimeRemaining(int) -> void: ...
    @overload
    def SetWarmupTime(self, newWarmupTime: int) -> None: ...
    @overload
    def SetWarmupTime(int) -> void: ...
    @overload
    def SetbBallHasBeenHit(self, newbBallHasBeenHit: int) -> None: ...
    @overload
    def SetbBallHasBeenHit(unsignedlong) -> void: ...
    @overload
    def SetbClubMatch(self, newbClubMatch: int) -> None: ...
    @overload
    def SetbClubMatch(unsignedlong) -> void: ...
    @overload
    def SetbDisableGoalDelay(self, newbDisableGoalDelay: int) -> None: ...
    @overload
    def SetbDisableGoalDelay(unsignedlong) -> void: ...
    @overload
    def SetbMatchEnded(self, newbMatchEnded: int) -> None: ...
    @overload
    def SetbMatchEnded(unsignedlong) -> void: ...
    @overload
    def SetbNoContest(self, newbNoContest: int) -> None: ...
    @overload
    def SetbNoContest(unsignedlong) -> void: ...
    @overload
    def SetbOverTime(self, newbOverTime: int) -> None: ...
    @overload
    def SetbOverTime(unsignedlong) -> void: ...
    @overload
    def SetbPlayReplays(self, newbPlayReplays: int) -> None: ...
    @overload
    def SetbPlayReplays(unsignedlong) -> void: ...
    @overload
    def SetbRoundActive(self, newbRoundActive: int) -> None: ...
    @overload
    def SetbRoundActive(unsignedlong) -> void: ...
    @overload
    def SetbShowIntroScene(self, newbShowIntroScene: int) -> None: ...
    @overload
    def SetbShowIntroScene(unsignedlong) -> void: ...
    @overload
    def SetbShowNoScorerGoalMessage(self, newbShowNoScorerGoalMessage: int) -> None: ...
    @overload
    def SetbShowNoScorerGoalMessage(unsignedlong) -> void: ...
    @overload
    def SetbUnlimitedTime(self, newbUnlimitedTime: int) -> None: ...
    @overload
    def SetbUnlimitedTime(unsignedlong) -> void: ...
    @overload
    def ShouldAllowVoteToForfeit(self) -> bool: ...
    @overload
    def ShouldAllowVoteToForfeit() -> bool: ...
    @overload
    def ShouldCountUp(self) -> bool: ...
    @overload
    def ShouldCountUp() -> bool: ...
    @overload
    def ShouldCountdownResumeFromPause(self) -> bool: ...
    @overload
    def ShouldCountdownResumeFromPause() -> bool: ...
    @overload
    def ShouldDoPodiumSpotlight(self) -> bool: ...
    @overload
    def ShouldDoPodiumSpotlight() -> bool: ...
    @overload
    def ShouldHaveLeaveMatchPenalty(self) -> bool: ...
    @overload
    def ShouldHaveLeaveMatchPenalty() -> bool: ...
    @overload
    def ShouldPlayReplay(self) -> bool: ...
    @overload
    def ShouldPlayReplay() -> bool: ...
    @overload
    def ShouldRecordReplay(self) -> bool: ...
    @overload
    def ShouldRecordReplay() -> bool: ...
    @overload
    def ShowScorerGoalMessage(self) -> bool: ...
    @overload
    def ShowScorerGoalMessage() -> bool: ...
    def SpawnBall(self, position: Vector, wake: bool, spawnCannon: bool) -> BallWrapper: ...
    def SpawnBall2(self, SpawnLoc: Vector, bWake: int, bSpawnCannon: int, BallArch: str) -> BallWrapper: ...
    @overload
    def SpawnBot(self, carBody: int, name: str) -> None: ...
    @overload
    def SpawnBot(int, std) -> void: ...
    @overload
    def SpawnCar(self, carBody: int, name: str) -> None: ...
    @overload
    def SpawnCar(int, std) -> void: ...
    @overload
    def SpawnPodiumCars(self) -> None: ...
    @overload
    def SpawnPodiumCars() -> void: ...
    @overload
    def StartLobbyTimer(self) -> None: ...
    @overload
    def StartLobbyTimer() -> void: ...
    @overload
    def StartNewGame(self) -> None: ...
    @overload
    def StartNewGame() -> void: ...
    @overload
    def StartNewRound(self) -> None: ...
    @overload
    def StartNewRound() -> void: ...
    @overload
    def StartOvertime(self) -> None: ...
    @overload
    def StartOvertime() -> void: ...
    @overload
    def StartReplay(self) -> None: ...
    @overload
    def StartReplay() -> void: ...
    @overload
    def StartRound(self) -> None: ...
    @overload
    def StartRound() -> void: ...
    @overload
    def SubmitMatch2(self) -> None: ...
    @overload
    def SubmitMatch2() -> void: ...
    @overload
    def SubmitMatchComplete2(self) -> None: ...
    @overload
    def SubmitMatchComplete2() -> void: ...
    @overload
    def TriggerGoalScoreEvent(self, TeamScoredOn: int, Scorer: CarWrapper) -> None: ...
    @overload
    def TriggerGoalScoreEvent(int, classCarWrapper) -> void: ...
    @overload
    def TriggerScoreChangedEvent(self) -> None: ...
    @overload
    def TriggerScoreChangedEvent() -> void: ...
    @overload
    def UpdateGameTime(self, DeltaTime: float) -> None: ...
    @overload
    def UpdateGameTime(float) -> void: ...
    @overload
    def UpdateSpotlight(self) -> None: ...
    @overload
    def UpdateSpotlight() -> void: ...
    @overload
    def UpdateStats(self) -> None: ...
    @overload
    def UpdateStats() -> void: ...
    @overload
    def UpdateTeamScores2(self) -> None: ...
    @overload
    def UpdateTeamScores2() -> void: ...
    @overload
    def UpdateTotalGameTimePlayed(self, DeltaTime: float) -> None: ...
    @overload
    def UpdateTotalGameTimePlayed(float) -> void: ...
    @overload
    def __GameEvent_Soccar_TA__CheckStart(self, T: TeamWrapper) -> None: ...
    @overload
    def __GameEvent_Soccar_TA__CheckStart(classTeamWrapper) -> void: ...
    @overload
    def __GameEvent_Soccar_TA__EndState(self, T: TeamWrapper) -> None: ...
    @overload
    def __GameEvent_Soccar_TA__EndState(classTeamWrapper) -> void: ...
    @overload
    def __GameEvent_Soccar_TA__SubmitMatchComplete(self, PRI: PriWrapper) -> None: ...
    @overload
    def __GameEvent_Soccar_TA__SubmitMatchComplete(classPriWrapper) -> void: ...
    @overload
    def __GameEvent_Soccar_TA__UpdateTeamScores(self, T: TeamWrapper) -> bool: ...
    @overload
    def __GameEvent_Soccar_TA__UpdateTeamScores(classTeamWrapper) -> bool: ...
    @overload
    def __ReplicatedServerPerformanceState__ChangeNotifyFunc(self) -> None: ...
    @overload
    def __ReplicatedServerPerformanceState__ChangeNotifyFunc() -> void: ...
    @overload
    def __WaitTimeRemaining__ChangeNotifyFunc(self) -> None: ...
    @overload
    def __WaitTimeRemaining__ChangeNotifyFunc() -> void: ...
    @overload
    def __bClubMatch__ChangeNotifyFunc(self) -> None: ...
    @overload
    def __bClubMatch__ChangeNotifyFunc() -> void: ...
    @overload
    def __bShowIntroScene__ChangeNotifyFunc(self) -> None: ...
    @overload
    def __bShowIntroScene__ChangeNotifyFunc() -> void: ...
    def assign(self, rhs: ServerWrapper) -> ServerWrapper: ...
    @overload
    def eventDestroyed(self) -> None: ...
    @overload
    def eventDestroyed() -> void: ...

class SkillRating:
    def __init__(self) -> None: ...
    @property
    def Mu(self) -> Any: ...
    @Mu.setter
    def Mu(self, val: Any) -> None: ...
    @property
    def Sigma(self) -> Any: ...
    @Sigma.setter
    def Sigma(self, val: Any) -> None: ...

class SpringPickup(TargetedPickup):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: SpringPickup) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def ApplyForces(self, ActiveTime: float) -> None: ...
    @overload
    def ApplyForces(float) -> void: ...
    @overload
    def DoSpring(self, bFirstHit: int) -> None: ...
    @overload
    def DoSpring(unsignedlong) -> void: ...
    @overload
    def GetAfterSpringDuration(self) -> float: ...
    @overload
    def GetAfterSpringDuration() -> float: ...
    @overload
    def GetAfterSpringTime(self) -> float: ...
    @overload
    def GetAfterSpringTime() -> float: ...
    @overload
    def GetBallHitType(self) -> int: ...
    @overload
    def GetBallHitType() -> unsignedchar: ...
    @overload
    def GetConstantForce(self) -> float: ...
    @overload
    def GetConstantForce() -> float: ...
    @overload
    def GetCurrentSpringLength(self) -> float: ...
    @overload
    def GetCurrentSpringLength() -> float: ...
    @overload
    def GetForce(self) -> float: ...
    @overload
    def GetForce() -> float: ...
    @overload
    def GetFromOffset(self) -> Vector: ...
    @overload
    def GetFromOffset() -> structVector: ...
    @overload
    def GetHitDistanceOffset(self) -> float: ...
    @overload
    def GetHitDistanceOffset() -> float: ...
    @overload
    def GetHittingMeshOffset(self) -> Vector: ...
    @overload
    def GetHittingMeshOffset() -> structVector: ...
    @overload
    def GetHittingMeshScale(self) -> Vector: ...
    @overload
    def GetHittingMeshScale() -> structVector: ...
    @overload
    def GetHittingRotationOffset(self) -> Rotator: ...
    @overload
    def GetHittingRotationOffset() -> structRotator: ...
    @overload
    def GetMaxSpringLength(self) -> float: ...
    @overload
    def GetMaxSpringLength() -> float: ...
    @overload
    def GetMinSpringLength(self) -> float: ...
    @overload
    def GetMinSpringLength() -> float: ...
    @overload
    def GetRelativeConstantForce(self, Direction: Vector) -> Vector: ...
    @overload
    def GetRelativeConstantForce(structVector&) -> structVector: ...
    @overload
    def GetRelativeForceNormalDirection(self) -> float: ...
    @overload
    def GetRelativeForceNormalDirection() -> float: ...
    @overload
    def GetRelativeImpulse(self, Direction: Vector) -> Vector: ...
    @overload
    def GetRelativeImpulse(structVector&) -> structVector: ...
    @overload
    def GetSpringMeshInitialSize(self) -> float: ...
    @overload
    def GetSpringMeshInitialSize() -> float: ...
    @overload
    def GetSpringMeshScale(self) -> Vector: ...
    @overload
    def GetSpringMeshScale() -> structVector: ...
    @overload
    def GetSpringOrigin(self) -> Vector: ...
    @overload
    def GetSpringOrigin() -> structVector: ...
    @overload
    def GetSpringRotationOffset(self) -> Rotator: ...
    @overload
    def GetSpringRotationOffset() -> structRotator: ...
    @overload
    def GetSpringToTime(self) -> float: ...
    @overload
    def GetSpringToTime() -> float: ...
    @overload
    def GetSpringedLength(self) -> float: ...
    @overload
    def GetSpringedLength() -> float: ...
    @overload
    def GetSpringedLocation(self) -> Vector: ...
    @overload
    def GetSpringedLocation() -> structVector: ...
    @overload
    def GetSpringedNormal(self) -> Vector: ...
    @overload
    def GetSpringedNormal() -> structVector: ...
    @overload
    def GetSpringedTime(self) -> float: ...
    @overload
    def GetSpringedTime() -> float: ...
    @overload
    def GetTorque(self) -> Vector: ...
    @overload
    def GetTorque() -> structVector: ...
    @overload
    def GetVerticalForce(self) -> float: ...
    @overload
    def GetVerticalForce() -> float: ...
    @overload
    def GetWeldedForceScalar(self) -> float: ...
    @overload
    def GetWeldedForceScalar() -> float: ...
    @overload
    def GetWeldedVerticalForce(self) -> float: ...
    @overload
    def GetWeldedVerticalForce() -> float: ...
    @overload
    def GetbApplyConstantForce(self) -> int: ...
    @overload
    def GetbApplyConstantForce() -> unsignedlong: ...
    @overload
    def GetbApplyRelativeConstantForce(self) -> int: ...
    @overload
    def GetbApplyRelativeConstantForce() -> unsignedlong: ...
    @overload
    def GetbApplyRelativeForce(self) -> int: ...
    @overload
    def GetbApplyRelativeForce() -> unsignedlong: ...
    @overload
    def GetbBreakConstantForceWithHit(self) -> int: ...
    @overload
    def GetbBreakConstantForceWithHit() -> unsignedlong: ...
    @overload
    def GetbFollowAfterHit(self) -> int: ...
    @overload
    def GetbFollowAfterHit() -> unsignedlong: ...
    @overload
    def GetbInstant(self) -> int: ...
    @overload
    def GetbInstant() -> unsignedlong: ...
    @overload
    def GetbSpringed(self) -> int: ...
    @overload
    def GetbSpringed() -> unsignedlong: ...
    @overload
    def HandleCarTouchedBall(self, Ball: BallWrapper, OtherCar: CarWrapper, HitType: int) -> None: ...
    @overload
    def HandleCarTouchedBall(classBallWrapper, classCarWrapper, unsignedchar) -> void: ...
    @overload
    def PickupEnd(self) -> None: ...
    @overload
    def PickupEnd() -> void: ...
    @overload
    def PickupStart(self) -> None: ...
    @overload
    def PickupStart() -> void: ...
    def ScaleSpringMeshToLocation(self, NewLocation: Vector, TargetLoction: Vector) -> None: ...
    @overload
    def SetAfterSpringDuration(self, newAfterSpringDuration: float) -> None: ...
    @overload
    def SetAfterSpringDuration(float) -> void: ...
    @overload
    def SetAfterSpringTime(self, newAfterSpringTime: float) -> None: ...
    @overload
    def SetAfterSpringTime(float) -> void: ...
    @overload
    def SetBallHitType(self, newBallHitType: int) -> None: ...
    @overload
    def SetBallHitType(unsignedchar) -> void: ...
    @overload
    def SetConstantForce(self, newConstantForce: float) -> None: ...
    @overload
    def SetConstantForce(float) -> void: ...
    @overload
    def SetCurrentSpringLength(self, newCurrentSpringLength: float) -> None: ...
    @overload
    def SetCurrentSpringLength(float) -> void: ...
    @overload
    def SetForce(self, newForce: float) -> None: ...
    @overload
    def SetForce(float) -> void: ...
    @overload
    def SetFromOffset(self, newFromOffset: Vector) -> None: ...
    @overload
    def SetFromOffset(structVector) -> void: ...
    @overload
    def SetHitDistanceOffset(self, newHitDistanceOffset: float) -> None: ...
    @overload
    def SetHitDistanceOffset(float) -> void: ...
    @overload
    def SetHittingMeshOffset(self, newHittingMeshOffset: Vector) -> None: ...
    @overload
    def SetHittingMeshOffset(structVector) -> void: ...
    @overload
    def SetHittingMeshScale(self, newHittingMeshScale: Vector) -> None: ...
    @overload
    def SetHittingMeshScale(structVector) -> void: ...
    @overload
    def SetHittingRotationOffset(self, newHittingRotationOffset: Rotator) -> None: ...
    @overload
    def SetHittingRotationOffset(structRotator) -> void: ...
    @overload
    def SetMaxSpringLength(self, newMaxSpringLength: float) -> None: ...
    @overload
    def SetMaxSpringLength(float) -> void: ...
    @overload
    def SetMinSpringLength(self, newMinSpringLength: float) -> None: ...
    @overload
    def SetMinSpringLength(float) -> void: ...
    @overload
    def SetRelativeForceNormalDirection(self, newRelativeForceNormalDirection: float) -> None: ...
    @overload
    def SetRelativeForceNormalDirection(float) -> void: ...
    @overload
    def SetSpringMeshInitialSize(self, newSpringMeshInitialSize: float) -> None: ...
    @overload
    def SetSpringMeshInitialSize(float) -> void: ...
    @overload
    def SetSpringMeshScale(self, newSpringMeshScale: Vector) -> None: ...
    @overload
    def SetSpringMeshScale(structVector) -> void: ...
    @overload
    def SetSpringOrigin(self, newSpringOrigin: Vector) -> None: ...
    @overload
    def SetSpringOrigin(structVector) -> void: ...
    @overload
    def SetSpringRotationOffset(self, newSpringRotationOffset: Rotator) -> None: ...
    @overload
    def SetSpringRotationOffset(structRotator) -> void: ...
    @overload
    def SetSpringToTime(self, newSpringToTime: float) -> None: ...
    @overload
    def SetSpringToTime(float) -> void: ...
    @overload
    def SetSpringedLength(self, newSpringedLength: float) -> None: ...
    @overload
    def SetSpringedLength(float) -> void: ...
    @overload
    def SetSpringedLocation(self, newSpringedLocation: Vector) -> None: ...
    @overload
    def SetSpringedLocation(structVector) -> void: ...
    @overload
    def SetSpringedNormal(self, newSpringedNormal: Vector) -> None: ...
    @overload
    def SetSpringedNormal(structVector) -> void: ...
    @overload
    def SetSpringedTime(self, newSpringedTime: float) -> None: ...
    @overload
    def SetSpringedTime(float) -> void: ...
    @overload
    def SetTorque(self, newTorque: Vector) -> None: ...
    @overload
    def SetTorque(structVector) -> void: ...
    @overload
    def SetVerticalForce(self, newVerticalForce: float) -> None: ...
    @overload
    def SetVerticalForce(float) -> void: ...
    @overload
    def SetWeldedForceScalar(self, newWeldedForceScalar: float) -> None: ...
    @overload
    def SetWeldedForceScalar(float) -> void: ...
    @overload
    def SetWeldedVerticalForce(self, newWeldedVerticalForce: float) -> None: ...
    @overload
    def SetWeldedVerticalForce(float) -> void: ...
    @overload
    def SetbApplyConstantForce(self, newbApplyConstantForce: int) -> None: ...
    @overload
    def SetbApplyConstantForce(unsignedlong) -> void: ...
    @overload
    def SetbApplyRelativeConstantForce(self, newbApplyRelativeConstantForce: int) -> None: ...
    @overload
    def SetbApplyRelativeConstantForce(unsignedlong) -> void: ...
    @overload
    def SetbApplyRelativeForce(self, newbApplyRelativeForce: int) -> None: ...
    @overload
    def SetbApplyRelativeForce(unsignedlong) -> void: ...
    @overload
    def SetbBreakConstantForceWithHit(self, newbBreakConstantForceWithHit: int) -> None: ...
    @overload
    def SetbBreakConstantForceWithHit(unsignedlong) -> void: ...
    @overload
    def SetbFollowAfterHit(self, newbFollowAfterHit: int) -> None: ...
    @overload
    def SetbFollowAfterHit(unsignedlong) -> void: ...
    @overload
    def SetbInstant(self, newbInstant: int) -> None: ...
    @overload
    def SetbInstant(unsignedlong) -> void: ...
    @overload
    def SetbSpringed(self, newbSpringed: int) -> None: ...
    @overload
    def SetbSpringed(unsignedlong) -> void: ...
    def assign(self, rhs: SpringPickup) -> SpringPickup: ...

class StatGraphSystemWrapper(ObjectWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: StatGraphSystemWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def GetGraphLevel(self) -> int: ...
    @overload
    def GetGraphLevel() -> unsignedchar: ...
    @overload
    def GetGraphSampleTime(self) -> float: ...
    @overload
    def GetGraphSampleTime() -> float: ...
    @overload
    def GetGraphSampleTime2(self, Level: int) -> float: ...
    @overload
    def GetGraphSampleTime2(unsignedchar) -> float: ...
    @overload
    def GetInputBufferGraph(self) -> InputBufferGraphWrapper: ...
    @overload
    def GetInputBufferGraph() -> classInputBufferGraphWrapper: ...
    @overload
    def GetNetStatGraph(self) -> NetStatGraphWrapper: ...
    @overload
    def GetNetStatGraph() -> classNetStatGraphWrapper: ...
    @overload
    def GetPerfStatGraph(self) -> PerfStatGraphWrapper: ...
    @overload
    def GetPerfStatGraph() -> classPerfStatGraphWrapper: ...
    @overload
    def GetPreallocGraphLines(self) -> int: ...
    @overload
    def GetPreallocGraphLines() -> int: ...
    @overload
    def GetStatGraphs(self) -> ArrayWrapper_StatGraphWrapper_t: ...
    @overload
    def GetStatGraphs() -> classArrayWrapper<classStatGraphWrapper>: ...
    @overload
    def GetVisibleStatGraphs(self) -> ArrayWrapper_StatGraphWrapper_t: ...
    @overload
    def GetVisibleStatGraphs() -> classArrayWrapper<classStatGraphWrapper>: ...
    @overload
    def Graphtime(self, Seconds: float) -> None: ...
    @overload
    def Graphtime(float) -> void: ...
    @overload
    def PacketReceived(self, Latency: float) -> None: ...
    @overload
    def PacketReceived(float) -> void: ...
    @overload
    def SetGraphLevel(self, newGraphLevel: int) -> None: ...
    @overload
    def SetGraphLevel(unsignedchar) -> void: ...
    @overload
    def SetGraphLevel2(self, Level: int) -> None: ...
    @overload
    def SetGraphLevel2(unsignedchar) -> void: ...
    @overload
    def SetGraphSampleTime(self, newGraphSampleTime: float) -> None: ...
    @overload
    def SetGraphSampleTime(float) -> void: ...
    @overload
    def SetInputBufferGraph(self, newInputBufferGraph: InputBufferGraphWrapper) -> None: ...
    @overload
    def SetInputBufferGraph(classInputBufferGraphWrapper) -> void: ...
    @overload
    def SetNetStatGraph(self, newNetStatGraph: NetStatGraphWrapper) -> None: ...
    @overload
    def SetNetStatGraph(classNetStatGraphWrapper) -> void: ...
    @overload
    def SetPerfStatGraph(self, newPerfStatGraph: PerfStatGraphWrapper) -> None: ...
    @overload
    def SetPerfStatGraph(classPerfStatGraphWrapper) -> void: ...
    @overload
    def SetPreallocGraphLines(self, newPreallocGraphLines: int) -> None: ...
    @overload
    def SetPreallocGraphLines(int) -> void: ...
    @overload
    def StatGraphNext(self) -> None: ...
    @overload
    def StatGraphNext() -> void: ...
    @overload
    def __StatGraphSystem_TA__SetGraphLevel(self, G: StatGraphWrapper) -> None: ...
    @overload
    def __StatGraphSystem_TA__SetGraphLevel(classStatGraphWrapper) -> void: ...
    def assign(self, rhs: StatGraphSystemWrapper) -> StatGraphSystemWrapper: ...

class StatGraphWrapper(ObjectWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: StatGraphWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def AddSampleHistory(self, History: SampleHistoryWrapper) -> SampleHistoryWrapper: ...
    @overload
    def AddSampleHistory(classSampleHistoryWrapper) -> classSampleHistoryWrapper: ...
    @overload
    def CreateSampleHistory(self, Title: str) -> SampleHistoryWrapper: ...
    @overload
    def CreateSampleHistory(std) -> classSampleHistoryWrapper: ...
    @overload
    def GetLastTickTime(self) -> float: ...
    @overload
    def GetLastTickTime() -> double: ...
    @overload
    def GetRecordSettings(self) -> SampleRecordSettingsWrapper: ...
    @overload
    def GetRecordSettings() -> classSampleRecordSettingsWrapper: ...
    @overload
    def GetSampleHistories(self) -> ArrayWrapper_SampleHistoryWrapper_t: ...
    @overload
    def GetSampleHistories() -> classArrayWrapper<classSampleHistoryWrapper>: ...
    @overload
    def SetLastTickTime(self, newLastTickTime: float) -> None: ...
    @overload
    def SetLastTickTime(double) -> void: ...
    @overload
    def SetRecordSettings(self, newRecordSettings: SampleRecordSettingsWrapper) -> None: ...
    @overload
    def SetRecordSettings(classSampleRecordSettingsWrapper) -> void: ...
    @overload
    def StopDrawing(self) -> None: ...
    @overload
    def StopDrawing() -> void: ...
    def assign(self, rhs: StatGraphWrapper) -> StatGraphWrapper: ...
    @overload
    def eventConstruct(self) -> None: ...
    @overload
    def eventConstruct() -> void: ...

class SteamID:
    def __init__(self) -> None: ...
    @property
    def ID(self) -> Any: ...
    @ID.setter
    def ID(self, val: Any) -> None: ...

class StickyForceData:
    def __init__(self) -> None: ...
    @property
    def Ground(self) -> Any: ...
    @Ground.setter
    def Ground(self, val: Any) -> None: ...
    @property
    def Wall(self) -> Any: ...
    @Wall.setter
    def Wall(self, val: Any) -> None: ...

class StructArrayWrapper_LinearColor_t:
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: StructArrayWrapper_LinearColor_t) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def Count(self) -> int: ...
    @overload
    def Count() -> int: ...
    @overload
    def Get(self, index: int) -> LinearColor: ...
    @overload
    def Get(int) -> structLinearColor: ...
    def assign(self, rhs: StructArrayWrapper_LinearColor_t) -> StructArrayWrapper_LinearColor_t: ...

class StructArrayWrapper_ProfileCameraSettings_t:
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: StructArrayWrapper_ProfileCameraSettings_t) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def Count(self) -> int: ...
    @overload
    def Count() -> int: ...
    @overload
    def Get(self, index: int) -> ProfileCameraSettings: ...
    @overload
    def Get(int) -> structProfileCameraSettings: ...
    def assign(self, rhs: StructArrayWrapper_ProfileCameraSettings_t) -> StructArrayWrapper_ProfileCameraSettings_t: ...

class StructArrayWrapper_RecordedSample_t:
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: StructArrayWrapper_RecordedSample_t) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def Count(self) -> int: ...
    @overload
    def Count() -> int: ...
    @overload
    def Get(self, index: int) -> RecordedSample: ...
    @overload
    def Get(int) -> structRecordedSample: ...
    def assign(self, rhs: StructArrayWrapper_RecordedSample_t) -> StructArrayWrapper_RecordedSample_t: ...

class StructArrayWrapper_SteamID_t:
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: StructArrayWrapper_SteamID_t) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def Count(self) -> int: ...
    @overload
    def Count() -> int: ...
    @overload
    def Get(self, index: int) -> SteamID: ...
    @overload
    def Get(int) -> structSteamID: ...
    def assign(self, rhs: StructArrayWrapper_SteamID_t) -> StructArrayWrapper_SteamID_t: ...

class SwapperPickup(TargetedPickup):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: SwapperPickup) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def GetOtherCar(self) -> CarWrapper: ...
    @overload
    def GetOtherCar() -> classCarWrapper: ...
    @overload
    def OnTargetChanged(self) -> None: ...
    @overload
    def OnTargetChanged() -> void: ...
    @overload
    def PickupEnd(self) -> None: ...
    @overload
    def PickupEnd() -> void: ...
    @overload
    def PickupStart(self) -> None: ...
    @overload
    def PickupStart() -> void: ...
    @overload
    def SetOtherCar(self, newOtherCar: CarWrapper) -> None: ...
    @overload
    def SetOtherCar(classCarWrapper) -> void: ...
    def assign(self, rhs: SwapperPickup) -> SwapperPickup: ...

class TargetedPickup(RumblePickupComponentWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: TargetedPickup) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def GetClientTarget(self) -> RBActorWrapper: ...
    @overload
    def GetClientTarget() -> classRBActorWrapper: ...
    @overload
    def GetClientTarget2(self) -> RBActorWrapper: ...
    @overload
    def GetClientTarget2() -> classRBActorWrapper: ...
    @overload
    def GetDirectionalTargetingAccuracy(self) -> float: ...
    @overload
    def GetDirectionalTargetingAccuracy() -> float: ...
    @overload
    def GetRange(self) -> float: ...
    @overload
    def GetRange() -> float: ...
    @overload
    def GetTarget2(self) -> RBActorWrapper: ...
    @overload
    def GetTarget2() -> classRBActorWrapper: ...
    @overload
    def GetTargeted(self) -> RBActorWrapper: ...
    @overload
    def GetTargeted() -> classRBActorWrapper: ...
    @overload
    def GetbCanTargetBall(self) -> int: ...
    @overload
    def GetbCanTargetBall() -> unsignedlong: ...
    @overload
    def GetbCanTargetCars(self) -> int: ...
    @overload
    def GetbCanTargetCars() -> unsignedlong: ...
    @overload
    def GetbCanTargetEnemyCars(self) -> int: ...
    @overload
    def GetbCanTargetEnemyCars() -> unsignedlong: ...
    @overload
    def GetbCanTargetTeamCars(self) -> int: ...
    @overload
    def GetbCanTargetTeamCars() -> unsignedlong: ...
    @overload
    def GetbRequireTrace(self) -> int: ...
    @overload
    def GetbRequireTrace() -> unsignedlong: ...
    @overload
    def GetbUseDirectionalTargeting(self) -> int: ...
    @overload
    def GetbUseDirectionalTargeting() -> unsignedlong: ...
    @overload
    def OnTargetChanged(self) -> None: ...
    @overload
    def OnTargetChanged() -> void: ...
    @overload
    def SetClientTarget(self, newClientTarget: RBActorWrapper) -> None: ...
    @overload
    def SetClientTarget(classRBActorWrapper) -> void: ...
    @overload
    def SetDirectionalTargetingAccuracy(self, newDirectionalTargetingAccuracy: float) -> None: ...
    @overload
    def SetDirectionalTargetingAccuracy(float) -> void: ...
    @overload
    def SetRange(self, newRange: float) -> None: ...
    @overload
    def SetRange(float) -> void: ...
    @overload
    def SetTargeted(self, newTargeted: RBActorWrapper) -> None: ...
    @overload
    def SetTargeted(classRBActorWrapper) -> void: ...
    @overload
    def SetbCanTargetBall(self, newbCanTargetBall: int) -> None: ...
    @overload
    def SetbCanTargetBall(unsignedlong) -> void: ...
    @overload
    def SetbCanTargetCars(self, newbCanTargetCars: int) -> None: ...
    @overload
    def SetbCanTargetCars(unsignedlong) -> void: ...
    @overload
    def SetbCanTargetEnemyCars(self, newbCanTargetEnemyCars: int) -> None: ...
    @overload
    def SetbCanTargetEnemyCars(unsignedlong) -> void: ...
    @overload
    def SetbCanTargetTeamCars(self, newbCanTargetTeamCars: int) -> None: ...
    @overload
    def SetbCanTargetTeamCars(unsignedlong) -> void: ...
    @overload
    def SetbRequireTrace(self, newbRequireTrace: int) -> None: ...
    @overload
    def SetbRequireTrace(unsignedlong) -> void: ...
    @overload
    def SetbUseDirectionalTargeting(self, newbUseDirectionalTargeting: int) -> None: ...
    @overload
    def SetbUseDirectionalTargeting(unsignedlong) -> void: ...
    @overload
    def TargetChanged(self) -> None: ...
    @overload
    def TargetChanged() -> void: ...
    @overload
    def TryActivate(self, TargetOverride: RBActorWrapper) -> bool: ...
    @overload
    def TryActivate(classRBActorWrapper) -> bool: ...
    @overload
    def ValidateTarget2(self, InTarget: RBActorWrapper) -> bool: ...
    @overload
    def ValidateTarget2(classRBActorWrapper) -> bool: ...
    @overload
    def ValidateTargetTrace(self, InTarget: RBActorWrapper) -> bool: ...
    @overload
    def ValidateTargetTrace(classRBActorWrapper) -> bool: ...
    def assign(self, rhs: TargetedPickup) -> TargetedPickup: ...

class TeamGameEventWrapper(GameEventWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: TeamGameEventWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def AddTemporarySpawnSpot(self, Team: TeamWrapper, Car: CarWrapper) -> None: ...
    @overload
    def AddTemporarySpawnSpot(classTeamWrapper, classCarWrapper) -> void: ...
    @overload
    def AllTeamsCreated2(self) -> bool: ...
    @overload
    def AllTeamsCreated2() -> bool: ...
    @overload
    def AllTeamsHaveHumans2(self) -> bool: ...
    @overload
    def AllTeamsHaveHumans2() -> bool: ...
    @overload
    def AssignCustomTeamSettings(self) -> None: ...
    @overload
    def AssignCustomTeamSettings() -> void: ...
    @overload
    def CanChangeTeam(self) -> bool: ...
    @overload
    def CanChangeTeam() -> bool: ...
    @overload
    def CheckRematchVote(self) -> None: ...
    @overload
    def CheckRematchVote() -> void: ...
    @overload
    def ChooseTeam(self, TeamIndex: int, Player: PlayerControllerWrapper) -> bool: ...
    @overload
    def ChooseTeam(int, classPlayerControllerWrapper) -> bool: ...
    @overload
    def ClearTemporarySpawnSpots(self) -> None: ...
    @overload
    def ClearTemporarySpawnSpots() -> void: ...
    @overload
    def CreateTeams(self) -> None: ...
    @overload
    def CreateTeams() -> void: ...
    @overload
    def DestroyTeams(self) -> None: ...
    @overload
    def DestroyTeams() -> void: ...
    @overload
    def EndGame(self) -> None: ...
    @overload
    def EndGame() -> void: ...
    @overload
    def FindBotReplacement(self, PRI: PriWrapper) -> bool: ...
    @overload
    def FindBotReplacement(classPriWrapper) -> bool: ...
    @overload
    def ForceNoContest(self) -> None: ...
    @overload
    def ForceNoContest() -> void: ...
    @overload
    def GetMaxTeamSize(self) -> int: ...
    @overload
    def GetMaxTeamSize() -> int: ...
    @overload
    def GetNumBots(self) -> int: ...
    @overload
    def GetNumBots() -> int: ...
    @overload
    def GetTeamArchetypes(self) -> ArrayWrapper_TeamWrapper_t: ...
    @overload
    def GetTeamArchetypes() -> classArrayWrapper<classTeamWrapper>: ...
    @overload
    def GetTeams(self) -> ArrayWrapper_TeamWrapper_t: ...
    @overload
    def GetTeams() -> classArrayWrapper<classTeamWrapper>: ...
    @overload
    def GetbAlwaysAutoSelectTeam(self) -> int: ...
    @overload
    def GetbAlwaysAutoSelectTeam() -> unsignedlong: ...
    @overload
    def GetbDisableMutingOtherTeam(self) -> int: ...
    @overload
    def GetbDisableMutingOtherTeam() -> unsignedlong: ...
    @overload
    def GetbForfeit(self) -> int: ...
    @overload
    def GetbForfeit() -> unsignedlong: ...
    @overload
    def GetbMuteOppositeTeams(self) -> int: ...
    @overload
    def GetbMuteOppositeTeams() -> unsignedlong: ...
    @overload
    def GetbUnfairTeams(self) -> int: ...
    @overload
    def GetbUnfairTeams() -> unsignedlong: ...
    @overload
    def HandleSelectedLoadout(self, PlayerPRI: PriWrapper) -> None: ...
    @overload
    def HandleSelectedLoadout(classPriWrapper) -> void: ...
    @overload
    def HandleTeamForfeit(self, Team: TeamWrapper) -> None: ...
    @overload
    def HandleTeamForfeit(classTeamWrapper) -> void: ...
    @overload
    def InitBotSkill(self) -> None: ...
    @overload
    def InitBotSkill() -> void: ...
    @overload
    def MuteOppositeTeams2(self, bMute: int) -> None: ...
    @overload
    def MuteOppositeTeams2(unsignedlong) -> void: ...
    @overload
    def OnAllTeamsCreated(self) -> None: ...
    @overload
    def OnAllTeamsCreated() -> void: ...
    @overload
    def OnInit(self) -> None: ...
    @overload
    def OnInit() -> void: ...
    @overload
    def OnMatchSettingsChanged(self) -> None: ...
    @overload
    def OnMatchSettingsChanged() -> void: ...
    @overload
    def OnPenaltyChanged(self) -> None: ...
    @overload
    def OnPenaltyChanged() -> void: ...
    @overload
    def OnTeamForfeited(self, Team: TeamWrapper) -> None: ...
    @overload
    def OnTeamForfeited(classTeamWrapper) -> void: ...
    @overload
    def PreloadBots(self) -> None: ...
    @overload
    def PreloadBots() -> void: ...
    @overload
    def SetMaxTeamSize(self, newMaxTeamSize: int) -> None: ...
    @overload
    def SetMaxTeamSize(int) -> void: ...
    @overload
    def SetMaxTeamSize2(self, MaxSize: int) -> None: ...
    @overload
    def SetMaxTeamSize2(int) -> void: ...
    @overload
    def SetNumBots(self, newNumBots: int) -> None: ...
    @overload
    def SetNumBots(int) -> void: ...
    @overload
    def SetTeam(self, TeamNum: int, NewTeam: TeamWrapper) -> None: ...
    @overload
    def SetTeam(int, classTeamWrapper) -> void: ...
    @overload
    def SetUnfairTeams(self, bUnfair: int) -> None: ...
    @overload
    def SetUnfairTeams(unsignedlong) -> void: ...
    @overload
    def SetbAlwaysAutoSelectTeam(self, newbAlwaysAutoSelectTeam: int) -> None: ...
    @overload
    def SetbAlwaysAutoSelectTeam(unsignedlong) -> void: ...
    @overload
    def SetbDisableMutingOtherTeam(self, newbDisableMutingOtherTeam: int) -> None: ...
    @overload
    def SetbDisableMutingOtherTeam(unsignedlong) -> void: ...
    @overload
    def SetbForfeit(self, newbForfeit: int) -> None: ...
    @overload
    def SetbForfeit(unsignedlong) -> void: ...
    @overload
    def SetbMuteOppositeTeams(self, newbMuteOppositeTeams: int) -> None: ...
    @overload
    def SetbMuteOppositeTeams(unsignedlong) -> void: ...
    @overload
    def SetbUnfairTeams(self, newbUnfairTeams: int) -> None: ...
    @overload
    def SetbUnfairTeams(unsignedlong) -> void: ...
    @overload
    def StartRematchVote(self) -> None: ...
    @overload
    def StartRematchVote() -> void: ...
    @overload
    def UpdateBotCount(self) -> None: ...
    @overload
    def UpdateBotCount() -> void: ...
    @overload
    def UpdateMaxTeamSize(self) -> None: ...
    @overload
    def UpdateMaxTeamSize() -> void: ...
    @overload
    def UpdatePlayerShortcuts(self) -> None: ...
    @overload
    def UpdatePlayerShortcuts() -> void: ...
    @overload
    def __GameEvent_Team_TA__AllTeamsHaveHumans(self, Team: TeamWrapper) -> bool: ...
    @overload
    def __GameEvent_Team_TA__AllTeamsHaveHumans(classTeamWrapper) -> bool: ...
    def assign(self, rhs: TeamGameEventWrapper) -> TeamGameEventWrapper: ...
    @overload
    def eventInitGame(self, Options: str) -> None: ...
    @overload
    def eventInitGame(std) -> void: ...

class TeamInfoWrapper(ActorWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: TeamInfoWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def GetScore(self) -> int: ...
    @overload
    def GetScore() -> int: ...
    @overload
    def GetSize(self) -> int: ...
    @overload
    def GetSize() -> int: ...
    @overload
    def GetTeamColor(self) -> UnrealColor: ...
    @overload
    def GetTeamColor() -> structUnrealColor: ...
    @overload
    def GetTeamIndex(self) -> int: ...
    @overload
    def GetTeamIndex() -> int: ...
    @overload
    def GetTeamName(self) -> UnrealStringWrapper: ...
    @overload
    def GetTeamName() -> classUnrealStringWrapper: ...
    @overload
    def GetTeamNum(self) -> int: ...
    @overload
    def GetTeamNum() -> unsignedchar: ...
    @overload
    def SetScore(self, newScore: int) -> None: ...
    @overload
    def SetScore(int) -> void: ...
    @overload
    def SetSize(self, newSize: int) -> None: ...
    @overload
    def SetSize(int) -> void: ...
    @overload
    def SetTeamColor(self, newTeamColor: UnrealColor) -> None: ...
    @overload
    def SetTeamColor(structUnrealColor) -> void: ...
    @overload
    def SetTeamIndex(self, newTeamIndex: int) -> None: ...
    @overload
    def SetTeamIndex(int) -> void: ...
    def assign(self, rhs: TeamInfoWrapper) -> TeamInfoWrapper: ...
    @overload
    def eventDestroyed(self) -> None: ...
    @overload
    def eventDestroyed() -> void: ...

class TeamWrapper(TeamInfoWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: TeamWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def AddTemporarySpawnSpot(self, AtActor: ActorWrapper) -> None: ...
    @overload
    def AddTemporarySpawnSpot(classActorWrapper) -> void: ...
    @overload
    def ClearTemporarySpawnSpots(self) -> None: ...
    @overload
    def ClearTemporarySpawnSpots() -> void: ...
    @overload
    def EnableAllMembersStartVoteToForfeit2(self) -> None: ...
    @overload
    def EnableAllMembersStartVoteToForfeit2() -> void: ...
    @overload
    def EnableAllMembersStartVoteToForfeitIfNecessary(self) -> None: ...
    @overload
    def EnableAllMembersStartVoteToForfeitIfNecessary() -> void: ...
    @overload
    def ExpireTemporarySpawnSpots(self) -> None: ...
    @overload
    def ExpireTemporarySpawnSpots() -> void: ...
    @overload
    def Forfeit2(self) -> None: ...
    @overload
    def Forfeit2() -> void: ...
    @overload
    def GetClubID(self) -> int: ...
    @overload
    def GetClubID() -> unsignedlonglong: ...
    @overload
    def GetColorBlindColorList(self) -> StructArrayWrapper<LinearColor>: ...
    @overload
    def GetColorBlindColorList() -> classStructArrayWrapper<structLinearColor>: ...
    @overload
    def GetColorBlindFontColor(self) -> LinearColor: ...
    @overload
    def GetColorBlindFontColor() -> structLinearColor: ...
    @overload
    def GetCurrentColorList(self) -> StructArrayWrapper<LinearColor>: ...
    @overload
    def GetCurrentColorList() -> classStructArrayWrapper<structLinearColor>: ...
    @overload
    def GetCustomTeamName(self) -> UnrealStringWrapper: ...
    @overload
    def GetCustomTeamName() -> classUnrealStringWrapper: ...
    @overload
    def GetDefaultColorList(self) -> StructArrayWrapper<LinearColor>: ...
    @overload
    def GetDefaultColorList() -> classStructArrayWrapper<structLinearColor>: ...
    @overload
    def GetFontColor(self) -> LinearColor: ...
    @overload
    def GetFontColor() -> structLinearColor: ...
    @overload
    def GetGameEvent(self) -> TeamGameEventWrapper: ...
    @overload
    def GetGameEvent() -> classTeamGameEventWrapper: ...
    @overload
    def GetMembers(self) -> ArrayWrapper<PriWrapper>: ...
    @overload
    def GetMembers() -> classArrayWrapper<classPriWrapper>: ...
    @overload
    def GetNumBots(self) -> int: ...
    @overload
    def GetNumBots() -> int: ...
    @overload
    def GetNumHumans(self) -> int: ...
    @overload
    def GetNumHumans() -> int: ...
    @overload
    def GetSanitizedTeamName(self) -> UnrealStringWrapper: ...
    @overload
    def GetSanitizedTeamName() -> classUnrealStringWrapper: ...
    @overload
    def GetTeamControllerColor(self) -> UnrealColor: ...
    @overload
    def GetTeamControllerColor() -> structUnrealColor: ...
    @overload
    def GetTeamMemberNamed(self, PlayerName: str) -> PriWrapper: ...
    @overload
    def GetTeamMemberNamed(std) -> classPriWrapper: ...
    @overload
    def GetTeamScoreStrobeColor(self) -> UnrealColor: ...
    @overload
    def GetTeamScoreStrobeColor() -> structUnrealColor: ...
    @overload
    def GetbForfeit(self) -> int: ...
    @overload
    def GetbForfeit() -> unsignedlong: ...
    def HandleTeamNameSanitized(self, Original: str, Sanitized: str) -> None: ...
    @overload
    def IsSingleParty(self) -> bool: ...
    @overload
    def IsSingleParty() -> bool: ...
    @overload
    def MuteOtherTeam(self, OtherTeam: TeamWrapper, bMute: int) -> None: ...
    @overload
    def MuteOtherTeam(classTeamWrapper, unsignedlong) -> void: ...
    @overload
    def NotifyKismetTeamColorChanged(self) -> None: ...
    @overload
    def NotifyKismetTeamColorChanged() -> void: ...
    @overload
    def OnClubColorsChanged(self) -> None: ...
    @overload
    def OnClubColorsChanged() -> void: ...
    @overload
    def OnGameEventSet(self) -> None: ...
    @overload
    def OnGameEventSet() -> void: ...
    @overload
    def OnScoreUpdated(self) -> None: ...
    @overload
    def OnScoreUpdated() -> void: ...
    @overload
    def RemovePoints(self, Points: int) -> None: ...
    @overload
    def RemovePoints(int) -> void: ...
    @overload
    def ResetScore(self) -> None: ...
    @overload
    def ResetScore() -> void: ...
    @overload
    def ScorePoint(self, AdditionalScore: int) -> None: ...
    @overload
    def ScorePoint(int) -> void: ...
    @overload
    def SetClubID(self, newClubID: int) -> None: ...
    @overload
    def SetClubID(unsignedlonglong) -> void: ...
    @overload
    def SetClubID2(self, InClubID: int) -> None: ...
    @overload
    def SetClubID2(unsignedlonglong) -> void: ...
    @overload
    def SetColorBlindFontColor(self, newColorBlindFontColor: LinearColor) -> None: ...
    @overload
    def SetColorBlindFontColor(structLinearColor) -> void: ...
    @overload
    def SetCustomTeamName(self, NewName: str) -> None: ...
    @overload
    def SetCustomTeamName(std) -> void: ...
    @overload
    def SetDefaultColors(self) -> None: ...
    @overload
    def SetDefaultColors() -> void: ...
    @overload
    def SetFontColor(self, newFontColor: LinearColor) -> None: ...
    @overload
    def SetFontColor(structLinearColor) -> void: ...
    @overload
    def SetGameEvent(self, newGameEvent: TeamGameEventWrapper) -> None: ...
    @overload
    def SetGameEvent(classTeamGameEventWrapper) -> void: ...
    @overload
    def SetGameEvent2(self, InGameEvent: TeamGameEventWrapper) -> None: ...
    @overload
    def SetGameEvent2(classTeamGameEventWrapper) -> void: ...
    @overload
    def SetLogo(self, LogoID: int, bSwapColors: int) -> None: ...
    @overload
    def SetLogo(int, unsignedlong) -> void: ...
    @overload
    def SetScore(self, Points: int) -> None: ...
    @overload
    def SetScore(int) -> void: ...
    @overload
    def SetTeamControllerColor(self, newTeamControllerColor: UnrealColor) -> None: ...
    @overload
    def SetTeamControllerColor(structUnrealColor) -> void: ...
    @overload
    def SetTeamScoreStrobeColor(self, newTeamScoreStrobeColor: UnrealColor) -> None: ...
    @overload
    def SetTeamScoreStrobeColor(structUnrealColor) -> void: ...
    @overload
    def SetbForfeit(self, newbForfeit: int) -> None: ...
    @overload
    def SetbForfeit(unsignedlong) -> void: ...
    @overload
    def UpdateColors(self) -> None: ...
    @overload
    def UpdateColors() -> void: ...
    @overload
    def VoteToForfeit22(self, PRI: PriWrapper) -> None: ...
    @overload
    def VoteToForfeit22(classPriWrapper) -> void: ...
    @overload
    def __Team_TA__EnableAllMembersStartVoteToForfeit(self, Member: PriWrapper) -> None: ...
    @overload
    def __Team_TA__EnableAllMembersStartVoteToForfeit(classPriWrapper) -> void: ...
    @overload
    def __Team_TA__GetHumanPlayers(self, PRI: PriWrapper) -> bool: ...
    @overload
    def __Team_TA__GetHumanPlayers(classPriWrapper) -> bool: ...
    @overload
    def __Team_TA__GetHumanPrimaryPlayers(self, PRI: PriWrapper) -> bool: ...
    @overload
    def __Team_TA__GetHumanPrimaryPlayers(classPriWrapper) -> bool: ...
    @overload
    def __Team_TA__GetNumOfMembersThatCanStartForfeit(self, P: PriWrapper) -> bool: ...
    @overload
    def __Team_TA__GetNumOfMembersThatCanStartForfeit(classPriWrapper) -> bool: ...
    def assign(self, rhs: TeamWrapper) -> TeamWrapper: ...

class TimeBombPickup(RumblePickupComponentWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: TimeBombPickup) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def AlmostReady2(self) -> None: ...
    @overload
    def AlmostReady2() -> void: ...
    @overload
    def GetAlmostReadyDuration(self) -> float: ...
    @overload
    def GetAlmostReadyDuration() -> float: ...
    @overload
    def GetAlmostReadyMatSpeed(self) -> float: ...
    @overload
    def GetAlmostReadyMatSpeed() -> float: ...
    @overload
    def GetCarTorque(self) -> float: ...
    @overload
    def GetCarTorque() -> float: ...
    @overload
    def GetCarVerticalForce(self) -> float: ...
    @overload
    def GetCarVerticalForce() -> float: ...
    @overload
    def GetImpulseForce(self) -> float: ...
    @overload
    def GetImpulseForce() -> float: ...
    @overload
    def GetRadius(self) -> float: ...
    @overload
    def GetRadius() -> float: ...
    @overload
    def GetStartMatSpeed(self) -> float: ...
    @overload
    def GetStartMatSpeed() -> float: ...
    @overload
    def GetbDemolish(self) -> int: ...
    @overload
    def GetbDemolish() -> unsignedlong: ...
    @overload
    def GetbImpulse(self) -> int: ...
    @overload
    def GetbImpulse() -> unsignedlong: ...
    @overload
    def PickupEnd(self) -> None: ...
    @overload
    def PickupEnd() -> void: ...
    @overload
    def PickupStart(self) -> None: ...
    @overload
    def PickupStart() -> void: ...
    @overload
    def SetAlmostReadyDuration(self, newAlmostReadyDuration: float) -> None: ...
    @overload
    def SetAlmostReadyDuration(float) -> void: ...
    @overload
    def SetAlmostReadyMatSpeed(self, newAlmostReadyMatSpeed: float) -> None: ...
    @overload
    def SetAlmostReadyMatSpeed(float) -> void: ...
    @overload
    def SetCarTorque(self, newCarTorque: float) -> None: ...
    @overload
    def SetCarTorque(float) -> void: ...
    @overload
    def SetCarVerticalForce(self, newCarVerticalForce: float) -> None: ...
    @overload
    def SetCarVerticalForce(float) -> void: ...
    @overload
    def SetImpulseForce(self, newImpulseForce: float) -> None: ...
    @overload
    def SetImpulseForce(float) -> void: ...
    @overload
    def SetRadius(self, newRadius: float) -> None: ...
    @overload
    def SetRadius(float) -> void: ...
    @overload
    def SetStartMatSpeed(self, newStartMatSpeed: float) -> None: ...
    @overload
    def SetStartMatSpeed(float) -> void: ...
    @overload
    def SetbDemolish(self, newbDemolish: int) -> None: ...
    @overload
    def SetbDemolish(unsignedlong) -> void: ...
    @overload
    def SetbImpulse(self, newbImpulse: int) -> None: ...
    @overload
    def SetbImpulse(unsignedlong) -> void: ...
    def assign(self, rhs: TimeBombPickup) -> TimeBombPickup: ...

class ToastType:
    ToastType_Error: Any = ...
    ToastType_Info: Any = ...
    ToastType_OK: Any = ...
    ToastType_Warning: Any = ...
    __entries: Any = ...
    def __init__(self, arg0: int) -> None: ...
    def __and__(*args, **kwargs) -> Any: ...
    def __eq__(other) -> Any: ...
    def __ge__(other) -> Any: ...
    def __getstate__() -> Any: ...
    def __gt__(other) -> Any: ...
    def __hash__() -> Any: ...
    def __int__(self) -> int: ...
    def __le__(other) -> Any: ...
    def __lt__(other) -> Any: ...
    def __ne__(other) -> Any: ...
    def __or__(*args, **kwargs) -> Any: ...
    def __rand__(*args, **kwargs) -> Any: ...
    def __ror__(*args, **kwargs) -> Any: ...
    def __rxor__(*args, **kwargs) -> Any: ...
    def __setstate__(state) -> Any: ...
    def __xor__(*args, **kwargs) -> Any: ...
    @property
    def name(self) -> Any: ...
    @property
    def __doc__(self) -> Any: ...
    @property
    def __members__(self) -> Any: ...

class TornadoPickup(RumblePickupComponentWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: TornadoPickup) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def ApplyForces(self, ActiveTime: float) -> None: ...
    @overload
    def ApplyForces(float) -> void: ...
    @overload
    def GetAffecting(self) -> ArrayWrapper_RBActorWrapper_t: ...
    @overload
    def GetAffecting() -> classArrayWrapper<classRBActorWrapper>: ...
    @overload
    def GetBallMultiplier(self) -> float: ...
    @overload
    def GetBallMultiplier() -> float: ...
    @overload
    def GetFXOffset(self) -> Vector: ...
    @overload
    def GetFXOffset() -> structVector: ...
    @overload
    def GetFXScale(self) -> Vector: ...
    @overload
    def GetFXScale() -> structVector: ...
    @overload
    def GetHeight(self) -> float: ...
    @overload
    def GetHeight() -> float: ...
    @overload
    def GetMaxVelocityOffset(self) -> float: ...
    @overload
    def GetMaxVelocityOffset() -> float: ...
    @overload
    def GetMeshOffset(self) -> Vector: ...
    @overload
    def GetMeshOffset() -> structVector: ...
    @overload
    def GetMeshScale(self) -> Vector: ...
    @overload
    def GetMeshScale() -> structVector: ...
    @overload
    def GetOffset(self) -> Vector: ...
    @overload
    def GetOffset() -> structVector: ...
    @overload
    def GetRadius(self) -> float: ...
    @overload
    def GetRadius() -> float: ...
    @overload
    def GetRotationalForce(self) -> float: ...
    @overload
    def GetRotationalForce() -> float: ...
    @overload
    def GetTorque(self) -> float: ...
    @overload
    def GetTorque() -> float: ...
    @overload
    def GetVel(self) -> Vector: ...
    @overload
    def GetVel() -> structVector: ...
    @overload
    def GetVelocityEase(self) -> float: ...
    @overload
    def GetVelocityEase() -> float: ...
    @overload
    def GetbDebugVis(self) -> int: ...
    @overload
    def GetbDebugVis() -> unsignedlong: ...
    @overload
    def PlayBallSFX(self, InActor: RBActorWrapper) -> None: ...
    @overload
    def PlayBallSFX(classRBActorWrapper) -> void: ...
    @overload
    def PlayCarSFX(self, InActor: RBActorWrapper) -> None: ...
    @overload
    def PlayCarSFX(classRBActorWrapper) -> void: ...
    @overload
    def SetBallMultiplier(self, newBallMultiplier: float) -> None: ...
    @overload
    def SetBallMultiplier(float) -> void: ...
    @overload
    def SetFXOffset(self, newFXOffset: Vector) -> None: ...
    @overload
    def SetFXOffset(structVector) -> void: ...
    @overload
    def SetFXScale(self, newFXScale: Vector) -> None: ...
    @overload
    def SetFXScale(structVector) -> void: ...
    @overload
    def SetHeight(self, newHeight: float) -> None: ...
    @overload
    def SetHeight(float) -> void: ...
    @overload
    def SetMaxVelocityOffset(self, newMaxVelocityOffset: float) -> None: ...
    @overload
    def SetMaxVelocityOffset(float) -> void: ...
    @overload
    def SetMeshOffset(self, newMeshOffset: Vector) -> None: ...
    @overload
    def SetMeshOffset(structVector) -> void: ...
    @overload
    def SetMeshScale(self, newMeshScale: Vector) -> None: ...
    @overload
    def SetMeshScale(structVector) -> void: ...
    @overload
    def SetOffset(self, newOffset: Vector) -> None: ...
    @overload
    def SetOffset(structVector) -> void: ...
    @overload
    def SetRadius(self, newRadius: float) -> None: ...
    @overload
    def SetRadius(float) -> void: ...
    @overload
    def SetRotationalForce(self, newRotationalForce: float) -> None: ...
    @overload
    def SetRotationalForce(float) -> void: ...
    @overload
    def SetTorque(self, newTorque: float) -> None: ...
    @overload
    def SetTorque(float) -> void: ...
    @overload
    def SetVel(self, newVel: Vector) -> None: ...
    @overload
    def SetVel(structVector) -> void: ...
    @overload
    def SetVelocityEase(self, newVelocityEase: float) -> None: ...
    @overload
    def SetVelocityEase(float) -> void: ...
    @overload
    def SetbDebugVis(self, newbDebugVis: int) -> None: ...
    @overload
    def SetbDebugVis(unsignedlong) -> void: ...
    def assign(self, rhs: TornadoPickup) -> TornadoPickup: ...

class TrainingEditorSaveDataWrapper(ObjectWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: TrainingEditorSaveDataWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def GetCode(self) -> UnrealStringWrapper: ...
    @overload
    def GetCode() -> classUnrealStringWrapper: ...
    @overload
    def GetCreatedAt(self) -> int: ...
    @overload
    def GetCreatedAt() -> unsignedlonglong: ...
    @overload
    def GetCreatorName(self) -> UnrealStringWrapper: ...
    @overload
    def GetCreatorName() -> classUnrealStringWrapper: ...
    @overload
    def GetCreatorPlayerID(self) -> SteamID: ...
    @overload
    def GetCreatorPlayerID() -> structSteamID: ...
    @overload
    def GetDescription(self) -> UnrealStringWrapper: ...
    @overload
    def GetDescription() -> classUnrealStringWrapper: ...
    @overload
    def GetDifficulty(self) -> int: ...
    @overload
    def GetDifficulty() -> unsignedchar: ...
    @overload
    def GetNumRounds(self) -> int: ...
    @overload
    def GetNumRounds() -> int: ...
    @overload
    def GetTM_Name(self) -> UnrealStringWrapper: ...
    @overload
    def GetTM_Name() -> classUnrealStringWrapper: ...
    @overload
    def GetType(self) -> int: ...
    @overload
    def GetType() -> unsignedchar: ...
    @overload
    def GetUpdatedAt(self) -> int: ...
    @overload
    def GetUpdatedAt() -> unsignedlonglong: ...
    @overload
    def Init(self) -> None: ...
    @overload
    def Init() -> void: ...
    @overload
    def SetCreatedAt(self, newCreatedAt: int) -> None: ...
    @overload
    def SetCreatedAt(unsignedlonglong) -> void: ...
    @overload
    def SetCreatorPlayerID(self, newCreatorPlayerID: SteamID) -> None: ...
    @overload
    def SetCreatorPlayerID(structSteamID) -> void: ...
    @overload
    def SetDifficulty(self, newDifficulty: int) -> None: ...
    @overload
    def SetDifficulty(unsignedchar) -> void: ...
    @overload
    def SetNumRounds(self, newNumRounds: int) -> None: ...
    @overload
    def SetNumRounds(int) -> void: ...
    @overload
    def SetType(self, newType: int) -> None: ...
    @overload
    def SetType(unsignedchar) -> void: ...
    @overload
    def SetUpdatedAt(self, newUpdatedAt: int) -> None: ...
    @overload
    def SetUpdatedAt(unsignedlonglong) -> void: ...
    def assign(self, rhs: TrainingEditorSaveDataWrapper) -> TrainingEditorSaveDataWrapper: ...

class TrainingEditorWrapper(GameEditorWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: TrainingEditorWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def AddLocalPlayer(self, Player: PlayerControllerWrapper) -> None: ...
    @overload
    def AddLocalPlayer(classPlayerControllerWrapper) -> void: ...
    def AdjustToFloorLocation(self, TraceStart: Vector, CollsionExtent: Vector) -> Vector: ...
    @overload
    def AllowDynamicCrowd(self) -> bool: ...
    @overload
    def AllowDynamicCrowd() -> bool: ...
    @overload
    def BroadcastGoMessage(self) -> None: ...
    @overload
    def BroadcastGoMessage() -> void: ...
    @overload
    def CanPlayTestRoundNumber(self, RoundNumber: int) -> bool: ...
    @overload
    def CanPlayTestRoundNumber(int) -> bool: ...
    @overload
    def DeleteRound(self, RoundToDelete: int) -> None: ...
    @overload
    def DeleteRound(int) -> void: ...
    @overload
    def DestroyBall(self, Ball: BallWrapper) -> bool: ...
    @overload
    def DestroyBall(classBallWrapper) -> bool: ...
    @overload
    def DestroyGoalMeshBlockers(self) -> None: ...
    @overload
    def DestroyGoalMeshBlockers() -> void: ...
    @overload
    def DuplicateRound(self, Index: int) -> None: ...
    @overload
    def DuplicateRound(int) -> void: ...
    @overload
    def EndPlayTest(self) -> None: ...
    @overload
    def EndPlayTest() -> void: ...
    @overload
    def EventPlaytestStarted(self, GamEvent: TrainingEditorWrapper) -> None: ...
    @overload
    def EventPlaytestStarted(classTrainingEditorWrapper) -> void: ...
    @overload
    def EventRoundChanged(self, GamEvent: TrainingEditorWrapper) -> None: ...
    @overload
    def EventRoundChanged(classTrainingEditorWrapper) -> void: ...
    @overload
    def EventRoundTimeChanged(self, GameEvent: TrainingEditorWrapper) -> None: ...
    @overload
    def EventRoundTimeChanged(classTrainingEditorWrapper) -> void: ...
    @overload
    def EventSaveResult(self, bSuccess: int) -> None: ...
    @overload
    def EventSaveResult(unsignedlong) -> void: ...
    @overload
    def EventUnsavedChanges(self, bOutUnsavedChanges: int) -> None: ...
    @overload
    def EventUnsavedChanges(unsignedlong) -> void: ...
    @overload
    def ForceTagHistoryChanges(self) -> None: ...
    @overload
    def ForceTagHistoryChanges() -> void: ...
    @overload
    def GetBallGoalScoreNumber(self) -> int: ...
    @overload
    def GetBallGoalScoreNumber() -> int: ...
    @overload
    def GetDifficulty(self) -> int: ...
    @overload
    def GetDifficulty() -> unsignedchar: ...
    @overload
    def GetGoalMeshBlockerArchetype(self) -> ActorWrapper: ...
    @overload
    def GetGoalMeshBlockerArchetype() -> classActorWrapper: ...
    @overload
    def GetGoalMeshBlockers(self) -> ArrayWrapper_ActorWrapper_t: ...
    @overload
    def GetGoalMeshBlockers() -> classArrayWrapper<classActorWrapper>: ...
    @overload
    def GetGoalieScore(self) -> int: ...
    @overload
    def GetGoalieScore() -> int: ...
    @overload
    def GetMaxRoundTime(self) -> float: ...
    @overload
    def GetMaxRoundTime() -> float: ...
    @overload
    def GetMinRoundTime(self) -> float: ...
    @overload
    def GetMinRoundTime() -> float: ...
    @overload
    def GetPlayTestType(self) -> int: ...
    @overload
    def GetPlayTestType() -> unsignedchar: ...
    @overload
    def GetPlayerTeamNumber(self) -> int: ...
    @overload
    def GetPlayerTeamNumber() -> int: ...
    @overload
    def GetPointsScoredThisRound(self) -> int: ...
    @overload
    def GetPointsScoredThisRound() -> int: ...
    @overload
    def GetSaveCooldown(self) -> float: ...
    @overload
    def GetSaveCooldown() -> float: ...
    @overload
    def GetSaveDelayTime(self) -> float: ...
    @overload
    def GetSaveDelayTime() -> float: ...
    @overload
    def GetScore(self) -> int: ...
    @overload
    def GetScore() -> int: ...
    @overload
    def GetShotAttempt(self) -> int: ...
    @overload
    def GetShotAttempt() -> int: ...
    @overload
    def GetTotalRounds(self) -> int: ...
    @overload
    def GetTotalRounds() -> int: ...
    @overload
    def GetTrainingData(self) -> GameEditorSaveDataWrapper: ...
    @overload
    def GetTrainingData() -> classGameEditorSaveDataWrapper: ...
    @overload
    def GetTrainingFileName(self) -> UnrealStringWrapper: ...
    @overload
    def GetTrainingFileName() -> classUnrealStringWrapper: ...
    @overload
    def GetTrainingType(self) -> int: ...
    @overload
    def GetTrainingType() -> unsignedchar: ...
    @overload
    def GetbDisplayedRedoPenaltyMessage(self) -> int: ...
    @overload
    def GetbDisplayedRedoPenaltyMessage() -> unsignedlong: ...
    @overload
    def GetbNoEditor(self) -> int: ...
    @overload
    def GetbNoEditor() -> unsignedlong: ...
    @overload
    def GetbUnsavedChanges(self) -> int: ...
    @overload
    def GetbUnsavedChanges() -> unsignedlong: ...
    @overload
    def HandleNextGame(self) -> bool: ...
    @overload
    def HandleNextGame() -> bool: ...
    @overload
    def IncrementRound(self, bLoop: int) -> bool: ...
    @overload
    def IncrementRound(unsignedlong) -> bool: ...
    @overload
    def IsValidRoundIndex(self, ArrayIndex: int) -> bool: ...
    @overload
    def IsValidRoundIndex(int) -> bool: ...
    @overload
    def Load2(self, SaveName: str, PC: PlayerControllerWrapper) -> None: ...
    @overload
    def Load2(std, classPlayerControllerWrapper) -> void: ...
    @overload
    def MarkAsDirty(self) -> None: ...
    @overload
    def MarkAsDirty() -> void: ...
    @overload
    def OnInit(self) -> None: ...
    @overload
    def OnInit() -> void: ...
    @overload
    def OnLoadingMovieClosed(self) -> None: ...
    @overload
    def OnLoadingMovieClosed() -> void: ...
    @overload
    def OnTrainingModeLoaded(self) -> None: ...
    @overload
    def OnTrainingModeLoaded() -> void: ...
    @overload
    def RemoveAllPointsFromScore(self, TeamIndex: int) -> None: ...
    @overload
    def RemoveAllPointsFromScore(int) -> void: ...
    def RemovePointsFromScore(self, PointsToRemove: int, TeamIndex: int) -> None: ...
    def ReorderRound(self, FromIndex: int, ToIndex: int) -> None: ...
    @overload
    def ResetBalls(self) -> None: ...
    @overload
    def ResetBalls() -> void: ...
    @overload
    def RestartPlayTest(self) -> None: ...
    @overload
    def RestartPlayTest() -> void: ...
    @overload
    def Save2(self) -> None: ...
    @overload
    def Save2() -> void: ...
    @overload
    def SetGoalMeshBlockerArchetype(self, newGoalMeshBlockerArchetype: ActorWrapper) -> None: ...
    @overload
    def SetGoalMeshBlockerArchetype(classActorWrapper) -> void: ...
    @overload
    def SetGoalieScore(self, newGoalieScore: int) -> None: ...
    @overload
    def SetGoalieScore(int) -> void: ...
    @overload
    def SetMaxRoundTime(self, newMaxRoundTime: float) -> None: ...
    @overload
    def SetMaxRoundTime(float) -> void: ...
    @overload
    def SetMinRoundTime(self, newMinRoundTime: float) -> None: ...
    @overload
    def SetMinRoundTime(float) -> void: ...
    @overload
    def SetPlayTestType(self, newPlayTestType: int) -> None: ...
    @overload
    def SetPlayTestType(unsignedchar) -> void: ...
    @overload
    def SetPointsScoredThisRound(self, newPointsScoredThisRound: int) -> None: ...
    @overload
    def SetPointsScoredThisRound(int) -> void: ...
    @overload
    def SetRoundTimeLimit(self, NewRoundTime: float) -> None: ...
    @overload
    def SetRoundTimeLimit(float) -> void: ...
    @overload
    def SetSaveCooldown(self, newSaveCooldown: float) -> None: ...
    @overload
    def SetSaveCooldown(float) -> void: ...
    @overload
    def SetSaveDelayTime(self, newSaveDelayTime: float) -> None: ...
    @overload
    def SetSaveDelayTime(float) -> void: ...
    @overload
    def SetShotAttempt(self, newShotAttempt: int) -> None: ...
    @overload
    def SetShotAttempt(int) -> void: ...
    @overload
    def SetTracedCrosshairActor(self, PC: PlayerControllerWrapper, NewActor: ActorWrapper) -> None: ...
    @overload
    def SetTracedCrosshairActor(classPlayerControllerWrapper, classActorWrapper) -> void: ...
    @overload
    def SetTrainingData(self, newTrainingData: GameEditorSaveDataWrapper) -> None: ...
    @overload
    def SetTrainingData(classGameEditorSaveDataWrapper) -> void: ...
    @overload
    def SetUnsavedChanges(self, bInUnsavedChanges: int) -> None: ...
    @overload
    def SetUnsavedChanges(unsignedlong) -> void: ...
    @overload
    def SetbDisplayedRedoPenaltyMessage(self, newbDisplayedRedoPenaltyMessage: int) -> None: ...
    @overload
    def SetbDisplayedRedoPenaltyMessage(unsignedlong) -> void: ...
    @overload
    def SetbNoEditor(self, newbNoEditor: int) -> None: ...
    @overload
    def SetbNoEditor(unsignedlong) -> void: ...
    @overload
    def SetbUnsavedChanges(self, newbUnsavedChanges: int) -> None: ...
    @overload
    def SetbUnsavedChanges(unsignedlong) -> void: ...
    @overload
    def SetupDefaultRound(self) -> None: ...
    @overload
    def SetupDefaultRound() -> void: ...
    @overload
    def ShowPenaltyMessage(self) -> bool: ...
    @overload
    def ShowPenaltyMessage() -> bool: ...
    @overload
    def ShowResetRoundMessage(self) -> None: ...
    @overload
    def ShowResetRoundMessage() -> void: ...
    @overload
    def ShowScorerGoalMessage(self) -> bool: ...
    @overload
    def ShowScorerGoalMessage() -> bool: ...
    @overload
    def SpawnArchetypeAtAndAdjustToFloor(self, Archetype: ActorWrapper, SpawnLocation: Vector, SpawnRotation: Rotator) -> ActorWrapper: ...
    @overload
    def SpawnArchetypeAtAndAdjustToFloor(classActorWrapper, structVector&, structRotator&) -> classActorWrapper: ...
    def SpawnBallAndStartPointAt(self, BallSpawnLocation: Vector, BallSpawnRotation: Rotator, StartPointSpawnLocation: Vector, StartPointSpawnRotation: Rotator) -> None: ...
    @overload
    def StartNewRound(self) -> None: ...
    @overload
    def StartNewRound() -> void: ...
    @overload
    def StartPlayTest(self, InPlayTestType: int) -> None: ...
    @overload
    def StartPlayTest(unsignedchar) -> void: ...
    @overload
    def SwitchToRoundNumber(self, RoundNumber: int, BackupCurrentRound: int) -> None: ...
    @overload
    def SwitchToRoundNumber(int, unsignedlong) -> void: ...
    @overload
    def TagHistoryChanges(self) -> None: ...
    @overload
    def TagHistoryChanges() -> void: ...
    @overload
    def UpdateActiveRoundData(self) -> None: ...
    @overload
    def UpdateActiveRoundData() -> void: ...
    @overload
    def UpdateGoalMeshBlocker(self) -> None: ...
    @overload
    def UpdateGoalMeshBlocker() -> void: ...
    def assign(self, rhs: TrainingEditorWrapper) -> TrainingEditorWrapper: ...
    @overload
    def eventDestroyed(self) -> None: ...
    @overload
    def eventDestroyed() -> void: ...
    @overload
    def eventPostBeginPlay(self) -> None: ...
    @overload
    def eventPostBeginPlay() -> void: ...

class TutorialWrapper(ServerWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: TutorialWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def AddLocalPlayer(self, Player: PlayerControllerWrapper) -> None: ...
    @overload
    def AddLocalPlayer(classPlayerControllerWrapper) -> void: ...
    @overload
    def AllowDynamicCrowd(self) -> bool: ...
    @overload
    def AllowDynamicCrowd() -> bool: ...
    @overload
    def CanAwardPoints(self) -> bool: ...
    @overload
    def CanAwardPoints() -> bool: ...
    @overload
    def CanQueSaveReplay(self) -> bool: ...
    @overload
    def CanQueSaveReplay() -> bool: ...
    @overload
    def CanRedoRound(self) -> bool: ...
    @overload
    def CanRedoRound() -> bool: ...
    @overload
    def Chance(self, Chances: int) -> bool: ...
    @overload
    def Chance(int) -> bool: ...
    @overload
    def CheckForReset(self) -> None: ...
    @overload
    def CheckForReset() -> void: ...
    def ClampPointToExtent(self, ExtentCenter: Vector, Point: Vector, Extent: Vector) -> Vector: ...
    @overload
    def CleanupRoundActors(self) -> None: ...
    @overload
    def CleanupRoundActors() -> void: ...
    @overload
    def CommitRedoRound(self) -> None: ...
    @overload
    def CommitRedoRound() -> void: ...
    @overload
    def DestroyCannon(self) -> None: ...
    @overload
    def DestroyCannon() -> void: ...
    @overload
    def Destroyed(self) -> None: ...
    @overload
    def Destroyed() -> void: ...
    @overload
    def DisableGoalReset(self) -> None: ...
    @overload
    def DisableGoalReset() -> void: ...
    @overload
    def EnableGoalReset(self) -> None: ...
    @overload
    def EnableGoalReset() -> void: ...
    @overload
    def EndGame(self) -> None: ...
    @overload
    def EndGame() -> void: ...
    @overload
    def EndTutorial(self) -> bool: ...
    @overload
    def EndTutorial() -> bool: ...
    @overload
    def EventTutorialTipChanged(self, GameEvent: TutorialWrapper, NewTip: str) -> None: ...
    @overload
    def EventTutorialTipChanged(classTutorialWrapper, std) -> void: ...
    @overload
    def GenerateGoalAimLocation(self, goalNumber: int, currentBallLocation: Vector) -> Vector: ...
    @overload
    def GenerateGoalAimLocation(int, structVector) -> structVector: ...
    def GenerateShot(self, startPos: Vector, destination: Vector, speed: float) -> Vector: ...
    @overload
    def GetBallBounceScale(self) -> float: ...
    @overload
    def GetBallBounceScale() -> float: ...
    @overload
    def GetBallGoalNum(self) -> int: ...
    @overload
    def GetBallGoalNum() -> int: ...
    @overload
    def GetBallInitialVelocity(self) -> Vector: ...
    @overload
    def GetBallInitialVelocity() -> structVector: ...
    @overload
    def GetBallSpawnCount(self) -> int: ...
    @overload
    def GetBallSpawnCount() -> int: ...
    @overload
    def GetBallSpawnLocation(self) -> Vector: ...
    @overload
    def GetBallSpawnLocation() -> structVector: ...
    @overload
    def GetCarSpawnLocation(self) -> Vector: ...
    @overload
    def GetCarSpawnLocation() -> structVector: ...
    @overload
    def GetCarSpawnRotation(self) -> Rotator: ...
    @overload
    def GetCarSpawnRotation() -> structRotator: ...
    @overload
    def GetCurrentDebugStepX(self) -> int: ...
    @overload
    def GetCurrentDebugStepX() -> int: ...
    @overload
    def GetCurrentDebugStepY(self) -> int: ...
    @overload
    def GetCurrentDebugStepY() -> int: ...
    @overload
    def GetCurrentDebugStepZ(self) -> int: ...
    @overload
    def GetCurrentDebugStepZ() -> int: ...
    @overload
    def GetDebugLocationInExtent(self, Extent: Vector) -> Vector: ...
    @overload
    def GetDebugLocationInExtent(structVector&) -> structVector: ...
    @overload
    def GetDebugRotationType(self) -> int: ...
    @overload
    def GetDebugRotationType() -> unsignedchar: ...
    @overload
    def GetDifficulty(self) -> int: ...
    @overload
    def GetDifficulty() -> unsignedchar: ...
    @overload
    def GetDirectionToGoal(self, GoalNum: int) -> Vector: ...
    @overload
    def GetDirectionToGoal(int) -> structVector: ...
    @overload
    def GetEventStartTime(self) -> float: ...
    @overload
    def GetEventStartTime() -> float: ...
    @overload
    def GetGameBall(self) -> BallWrapper: ...
    @overload
    def GetGameBall() -> classBallWrapper: ...
    @overload
    def GetGameCar(self) -> CarWrapper: ...
    @overload
    def GetGameCar() -> classCarWrapper: ...
    @overload
    def GetGameEventRounds(self) -> int: ...
    @overload
    def GetGameEventRounds() -> int: ...
    @overload
    def GetGameEventRounds2(self) -> int: ...
    @overload
    def GetGameEventRounds2() -> int: ...
    @overload
    def GetGamePawn(self) -> CarWrapper: ...
    @overload
    def GetGamePawn() -> classCarWrapper: ...
    @overload
    def GetGoalDepth(self) -> float: ...
    @overload
    def GetGoalDepth() -> float: ...
    @overload
    def GetGoalExtent(self) -> Vector: ...
    @overload
    def GetGoalExtent(self, goalNumber: int = ...) -> Vector: ...
    @overload
    def GetGoalExtent(int) -> structVector: ...
    @overload
    def GetGoalExtent(*args, **kwargs) -> Any: ...
    @overload
    def GetGoalExtent2(self, Goal: GoalWrapper) -> Vector: ...
    @overload
    def GetGoalExtent2(classGoalWrapper) -> structVector: ...
    @overload
    def GetGoalLocation(self) -> Vector: ...
    @overload
    def GetGoalLocation(self, goalNumber: int = ...) -> Vector: ...
    @overload
    def GetGoalLocation(int) -> structVector: ...
    @overload
    def GetGoalLocation(*args, **kwargs) -> Any: ...
    @overload
    def GetGoalViewWidth(self, Goal: GoalWrapper, ViewerLoc: Vector) -> float: ...
    @overload
    def GetGoalViewWidth(classGoalWrapper, structVector&) -> float: ...
    @overload
    def GetOppositeTeamNum(self) -> int: ...
    @overload
    def GetOppositeTeamNum() -> int: ...
    @overload
    def GetPointsScoredThisRound(self) -> int: ...
    @overload
    def GetPointsScoredThisRound() -> int: ...
    @overload
    def GetRandomGoalAimLocation(self, InTeamNum: int, BallLoc: Vector) -> Vector: ...
    @overload
    def GetRandomGoalAimLocation(int, structVector&) -> structVector: ...
    @overload
    def GetRandomLocationInExtent(self, Extent: Vector) -> Vector: ...
    @overload
    def GetRandomLocationInExtent(structVector&) -> structVector: ...
    @overload
    def GetRandomSpawnIndex(self) -> int: ...
    @overload
    def GetRandomSpawnIndex() -> int: ...
    @overload
    def GetRedoCount(self) -> int: ...
    @overload
    def GetRedoCount() -> int: ...
    @overload
    def GetRedoTotal(self) -> int: ...
    @overload
    def GetRedoTotal() -> int: ...
    @overload
    def GetScore(self) -> int: ...
    @overload
    def GetScore() -> int: ...
    @overload
    def GetShuffledSpawnIndex(self) -> int: ...
    @overload
    def GetShuffledSpawnIndex() -> int: ...
    @overload
    def GetSpawnIndexTypeOverride(self) -> int: ...
    @overload
    def GetSpawnIndexTypeOverride() -> int: ...
    @overload
    def GetStartMessageArchetype(self) -> UnrealStringWrapper: ...
    @overload
    def GetStartMessageArchetype() -> classUnrealStringWrapper: ...
    @overload
    def GetStepLoc(self, Steps: int, TotalDist: float, bIncrement: int, Out_CurrentStep: int) -> float: ...
    @overload
    def GetStepLoc(int, float, unsignedlong, int*) -> float: ...
    @overload
    def GetTeamNum(self) -> int: ...
    @overload
    def GetTeamNum() -> int: ...
    @overload
    def GetTotalFieldExtent(self) -> Vector: ...
    @overload
    def GetTotalFieldExtent() -> structVector: ...
    @overload
    def GetTotalRounds(self) -> int: ...
    @overload
    def GetTotalRounds() -> int: ...
    @overload
    def GetTrainingType(self) -> int: ...
    @overload
    def GetTrainingType() -> unsignedchar: ...
    @overload
    def GetWaveIndex(self) -> int: ...
    @overload
    def GetWaveIndex() -> int: ...
    @overload
    def GetWaveSpawnCount(self) -> int: ...
    @overload
    def GetWaveSpawnCount() -> int: ...
    @overload
    def GetWinningTeam(self) -> TeamWrapper: ...
    @overload
    def GetWinningTeam() -> classTeamWrapper: ...
    @overload
    def GetbAllowSuperBoost(self) -> int: ...
    @overload
    def GetbAllowSuperBoost() -> unsignedlong: ...
    @overload
    def GetbDisplayedRedoPenaltyMessage(self) -> int: ...
    @overload
    def GetbDisplayedRedoPenaltyMessage() -> unsignedlong: ...
    @overload
    def GetbOnlyScoreInBallGoalNum(self) -> int: ...
    @overload
    def GetbOnlyScoreInBallGoalNum() -> unsignedlong: ...
    @overload
    def GetbRedoRound(self) -> int: ...
    @overload
    def GetbRedoRound() -> unsignedlong: ...
    @overload
    def GetbShowBoostMeter(self) -> int: ...
    @overload
    def GetbShowBoostMeter() -> unsignedlong: ...
    @overload
    def HandlePlayerResetTraining(self, GameEvent: GameEventWrapper) -> None: ...
    @overload
    def HandlePlayerResetTraining(classGameEventWrapper) -> void: ...
    @overload
    def HandleScoreUpdated(self, Team: TeamWrapper) -> None: ...
    @overload
    def HandleScoreUpdated(classTeamWrapper) -> void: ...
    @overload
    def HandleVehicleSetup(self, Car: CarWrapper) -> None: ...
    @overload
    def HandleVehicleSetup(classCarWrapper) -> void: ...
    @overload
    def InitBallEffects(self) -> None: ...
    @overload
    def InitBallEffects() -> void: ...
    @overload
    def InitBallVelocity(self) -> None: ...
    @overload
    def InitBallVelocity() -> void: ...
    @overload
    def InitCrowdManager(self) -> None: ...
    @overload
    def InitCrowdManager() -> void: ...
    @overload
    def InitDebugSetup(self, Car: CarWrapper) -> None: ...
    @overload
    def InitDebugSetup(classCarWrapper) -> void: ...
    @overload
    def InitGameSetup(self, Car: CarWrapper) -> None: ...
    @overload
    def InitGameSetup(classCarWrapper) -> void: ...
    @overload
    def InitIntro(self) -> None: ...
    @overload
    def InitIntro() -> void: ...
    @overload
    def InitMutators(self) -> None: ...
    @overload
    def InitMutators() -> void: ...
    @overload
    def IsBallMovingTowardsGoal(self, goalNo: int, bw: BallWrapper) -> bool: ...
    @overload
    def IsBallMovingTowardsGoal(int, classBallWrapper) -> bool: ...
    def IsBallMovingTowardsGoal2(self, Goal: GoalWrapper, Ball: BallWrapper, MinVelocityForDestroy: float, InGoalDepth: float) -> bool: ...
    @overload
    def IsGameEventComplete(self) -> bool: ...
    @overload
    def IsGameEventComplete() -> bool: ...
    @overload
    def IsInGoal(self, vec: Vector) -> bool: ...
    @overload
    def IsInGoal(structVector) -> bool: ...
    @overload
    def IsPrimaryPlayer(self, Car: CarWrapper) -> bool: ...
    @overload
    def IsPrimaryPlayer(classCarWrapper) -> bool: ...
    @overload
    def OnInit(self) -> None: ...
    @overload
    def OnInit() -> void: ...
    @overload
    def OnLoadingMovieClosed(self) -> None: ...
    @overload
    def OnLoadingMovieClosed() -> void: ...
    @overload
    def OnPlayerRestarted(self, PlayerCar: CarWrapper) -> None: ...
    @overload
    def OnPlayerRestarted(classCarWrapper) -> void: ...
    @overload
    def OnVehicleSetup(self, Car: CarWrapper) -> None: ...
    @overload
    def OnVehicleSetup(classCarWrapper) -> void: ...
    def PredictInitialVelocity(self, StartLoc: Vector, EndLoc: Vector, Z: float) -> Vector: ...
    @overload
    def Redo(self) -> None: ...
    @overload
    def Redo() -> void: ...
    @overload
    def RedoRound2(self) -> None: ...
    @overload
    def RedoRound2() -> void: ...
    @overload
    def ResetBalls(self) -> None: ...
    @overload
    def ResetBalls() -> void: ...
    @overload
    def ResetGameEvent(self) -> None: ...
    @overload
    def ResetGameEvent() -> void: ...
    @overload
    def ResetRoundTime(self) -> None: ...
    @overload
    def ResetRoundTime() -> void: ...
    @overload
    def SaveLocalPlayerStats(self) -> None: ...
    @overload
    def SaveLocalPlayerStats() -> void: ...
    @overload
    def SetBallBounceScale(self, newBallBounceScale: float) -> None: ...
    @overload
    def SetBallBounceScale(float) -> void: ...
    @overload
    def SetBallGoalNum(self, newBallGoalNum: int) -> None: ...
    @overload
    def SetBallGoalNum(int) -> void: ...
    @overload
    def SetBallInitialVelocity(self, newBallInitialVelocity: Vector) -> None: ...
    @overload
    def SetBallInitialVelocity(structVector) -> void: ...
    @overload
    def SetBallSpawnCount(self, newBallSpawnCount: int) -> None: ...
    @overload
    def SetBallSpawnCount(int) -> void: ...
    @overload
    def SetBallSpawnLocation(self, newBallSpawnLocation: Vector) -> None: ...
    @overload
    def SetBallSpawnLocation(structVector) -> void: ...
    @overload
    def SetBallVelocity(self, InitialVelocity: Vector, Ball: BallWrapper) -> None: ...
    @overload
    def SetBallVelocity(structVector&, classBallWrapper) -> void: ...
    @overload
    def SetCannonOrientation(self, NewLocation: Vector, NewRotation: Rotator) -> None: ...
    @overload
    def SetCannonOrientation(structVector&, structRotator&) -> void: ...
    @overload
    def SetCarSpawnLocation(self, v: Vector) -> None: ...
    @overload
    def SetCarSpawnLocation(structVector) -> void: ...
    @overload
    def SetCarSpawnRotation(self, v: Rotator) -> None: ...
    @overload
    def SetCarSpawnRotation(structRotator) -> void: ...
    @overload
    def SetCurrentDebugStepX(self, newCurrentDebugStepX: int) -> None: ...
    @overload
    def SetCurrentDebugStepX(int) -> void: ...
    @overload
    def SetCurrentDebugStepY(self, newCurrentDebugStepY: int) -> None: ...
    @overload
    def SetCurrentDebugStepY(int) -> void: ...
    @overload
    def SetCurrentDebugStepZ(self, newCurrentDebugStepZ: int) -> None: ...
    @overload
    def SetCurrentDebugStepZ(int) -> void: ...
    @overload
    def SetDebugRotationType(self, newDebugRotationType: int) -> None: ...
    @overload
    def SetDebugRotationType(unsignedchar) -> void: ...
    @overload
    def SetDifficulty(self, newDifficulty: int) -> None: ...
    @overload
    def SetDifficulty(unsignedchar) -> void: ...
    @overload
    def SetDifficulty2(self, InDifficulty: int) -> None: ...
    @overload
    def SetDifficulty2(int) -> void: ...
    @overload
    def SetEventStartTime(self, newEventStartTime: float) -> None: ...
    @overload
    def SetEventStartTime(float) -> void: ...
    @overload
    def SetGameEventRounds(self, newGameEventRounds: int) -> None: ...
    @overload
    def SetGameEventRounds(int) -> void: ...
    @overload
    def SetGoalDepth(self, newGoalDepth: float) -> None: ...
    @overload
    def SetGoalDepth(float) -> void: ...
    @overload
    def SetGoalDepth2(self) -> None: ...
    @overload
    def SetGoalDepth2() -> void: ...
    @overload
    def SetPointsScoredThisRound(self, newPointsScoredThisRound: int) -> None: ...
    @overload
    def SetPointsScoredThisRound(int) -> void: ...
    @overload
    def SetRandomSpawnIndex(self, newRandomSpawnIndex: int) -> None: ...
    @overload
    def SetRandomSpawnIndex(int) -> void: ...
    @overload
    def SetRedoCount(self, newRedoCount: int) -> None: ...
    @overload
    def SetRedoCount(int) -> void: ...
    @overload
    def SetRedoTotal(self, newRedoTotal: int) -> None: ...
    @overload
    def SetRedoTotal(int) -> void: ...
    @overload
    def SetShowBoostMeter(self, bShow: int) -> None: ...
    @overload
    def SetShowBoostMeter(unsignedlong) -> void: ...
    @overload
    def SetSpawnIndexTypeOverride(self, newSpawnIndexTypeOverride: int) -> None: ...
    @overload
    def SetSpawnIndexTypeOverride(int) -> void: ...
    @overload
    def SetTeamNum(self, newTeamNum: int) -> None: ...
    @overload
    def SetTeamNum(int) -> void: ...
    @overload
    def SetTotalFieldExtent(self, newTotalFieldExtent: Vector) -> None: ...
    @overload
    def SetTotalFieldExtent(structVector) -> void: ...
    @overload
    def SetTutorialTip(self, NewTip: str) -> None: ...
    @overload
    def SetTutorialTip(std) -> void: ...
    @overload
    def SetWaveIndex(self, newWaveIndex: int) -> None: ...
    @overload
    def SetWaveIndex(int) -> void: ...
    @overload
    def SetWaveSpawnCount(self, newWaveSpawnCount: int) -> None: ...
    @overload
    def SetWaveSpawnCount(int) -> void: ...
    @overload
    def SetbAllowSuperBoost(self, newbAllowSuperBoost: int) -> None: ...
    @overload
    def SetbAllowSuperBoost(unsignedlong) -> void: ...
    @overload
    def SetbDisplayedRedoPenaltyMessage(self, newbDisplayedRedoPenaltyMessage: int) -> None: ...
    @overload
    def SetbDisplayedRedoPenaltyMessage(unsignedlong) -> void: ...
    @overload
    def SetbOnlyScoreInBallGoalNum(self, newbOnlyScoreInBallGoalNum: int) -> None: ...
    @overload
    def SetbOnlyScoreInBallGoalNum(unsignedlong) -> void: ...
    @overload
    def SetbRedoRound(self, newbRedoRound: int) -> None: ...
    @overload
    def SetbRedoRound(unsignedlong) -> void: ...
    @overload
    def SetbShowBoostMeter(self, newbShowBoostMeter: int) -> None: ...
    @overload
    def SetbShowBoostMeter(unsignedlong) -> void: ...
    @overload
    def ShouldAllowSuperBoost(self) -> bool: ...
    @overload
    def ShouldAllowSuperBoost() -> bool: ...
    @overload
    def ShowResetRoundMessage(self) -> None: ...
    @overload
    def ShowResetRoundMessage() -> void: ...
    @overload
    def SkipTutorial(self) -> None: ...
    @overload
    def SkipTutorial() -> void: ...
    def SpawnBall(self, SpawnLoc: Vector, bWake: int, bSpawnCannon: int, BallArch: str) -> BallWrapper: ...
    @overload
    def StartNewRound(self) -> None: ...
    @overload
    def StartNewRound() -> void: ...
    @overload
    def StartRound(self) -> None: ...
    @overload
    def StartRound() -> void: ...
    @overload
    def StartTimers(self) -> None: ...
    @overload
    def StartTimers() -> void: ...
    @overload
    def UpdateBotCount(self) -> None: ...
    @overload
    def UpdateBotCount() -> void: ...
    @overload
    def UpdateMVP(self) -> None: ...
    @overload
    def UpdateMVP() -> void: ...
    @overload
    def UpdateStats(self) -> None: ...
    @overload
    def UpdateStats() -> void: ...
    def assign(self, rhs: TutorialWrapper) -> TutorialWrapper: ...

class UnrealColor:
    def __init__(self) -> None: ...
    @property
    def A(self) -> Any: ...
    @A.setter
    def A(self, val: Any) -> None: ...
    @property
    def B(self) -> Any: ...
    @B.setter
    def B(self, val: Any) -> None: ...
    @property
    def G(self) -> Any: ...
    @G.setter
    def G(self, val: Any) -> None: ...
    @property
    def R(self) -> Any: ...
    @R.setter
    def R(self, val: Any) -> None: ...

class UnrealStringWrapper(ArrayWrapper_wchar_t_t):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: UnrealStringWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def IsNull(self) -> bool: ...
    @overload
    def IsNull() -> bool: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    def ToString() -> std::string: ...
    def assign(self, rhs: UnrealStringWrapper) -> UnrealStringWrapper: ...

class Vector:
    @overload
    def __init__(self, x: float, y: float, z: float) -> None: ...
    @overload
    def __init__(self, def: float) -> None: ...
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: Vector) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def clone(self) -> Vector: ...
    @overload
    def clone() -> structVector: ...
    def cross(*args, **kwargs) -> Any: ...
    def dot(*args, **kwargs) -> Any: ...
    def lerp(*args, **kwargs) -> Any: ...
    @overload
    def magnitude(self) -> float: ...
    @overload
    def magnitude() -> float: ...
    @overload
    def normalize(self) -> None: ...
    @overload
    def normalize() -> void: ...
    def slerp(*args, **kwargs) -> Any: ...
    def __add__(self, v2: Vector) -> Vector: ...
    def __div__(self, v2: Vector) -> Vector: ...
    def __mul__(self, v2: Vector) -> Vector: ...
    def __sub__(self, v2: Vector) -> Vector: ...
    @property
    def X(self) -> Any: ...
    @X.setter
    def X(self, val: Any) -> None: ...
    @property
    def Y(self) -> Any: ...
    @Y.setter
    def Y(self, val: Any) -> None: ...
    @property
    def Z(self) -> Any: ...
    @Z.setter
    def Z(self, val: Any) -> None: ...

class Vector2:
    def __init__(self) -> None: ...
    @overload
    def minus(self, other: Vector2) -> Vector2: ...
    @overload
    def minus(structVector2) -> structVector2: ...
    @property
    def X(self) -> Any: ...
    @X.setter
    def X(self, val: Any) -> None: ...
    @property
    def Y(self) -> Any: ...
    @Y.setter
    def Y(self, val: Any) -> None: ...

class Vector2F:
    def __init__(self) -> None: ...
    @overload
    def minus(self, other: Vector2) -> Vector2F: ...
    @overload
    def minus(structVector2) -> structVector2F: ...
    @property
    def X(self) -> Any: ...
    @X.setter
    def X(self, val: Any) -> None: ...
    @property
    def Y(self) -> Any: ...
    @Y.setter
    def Y(self, val: Any) -> None: ...

class VehiclePickupWrapper(ActorWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: VehiclePickupWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def CanPickup(self, Car: CarWrapper) -> bool: ...
    @overload
    def CanPickup(classCarWrapper) -> bool: ...
    @overload
    def EventPickedUp(self, Pickup: VehiclePickupWrapper) -> None: ...
    @overload
    def EventPickedUp(classVehiclePickupWrapper) -> void: ...
    @overload
    def EventSpawned(self, Pickup: VehiclePickupWrapper) -> None: ...
    @overload
    def EventSpawned(classVehiclePickupWrapper) -> void: ...
    @overload
    def GetFXActor(self) -> FXActorWrapper: ...
    @overload
    def GetFXActor() -> classFXActorWrapper: ...
    @overload
    def GetFXActorArchetype(self) -> FXActorWrapper: ...
    @overload
    def GetFXActorArchetype() -> classFXActorWrapper: ...
    @overload
    def GetRespawnDelay(self) -> float: ...
    @overload
    def GetRespawnDelay() -> float: ...
    @overload
    def GetbNetRelevant(self) -> int: ...
    @overload
    def GetbNetRelevant() -> unsignedlong: ...
    @overload
    def GetbNoPickup(self) -> int: ...
    @overload
    def GetbNoPickup() -> unsignedlong: ...
    @overload
    def GetbPickedUp(self) -> int: ...
    @overload
    def GetbPickedUp() -> unsignedlong: ...
    @overload
    def InitFX(self) -> None: ...
    @overload
    def InitFX() -> void: ...
    @overload
    def IsTouchingAVehicle(self) -> bool: ...
    @overload
    def IsTouchingAVehicle() -> bool: ...
    @overload
    def OnPickUp(self) -> None: ...
    @overload
    def OnPickUp() -> void: ...
    @overload
    def OnSpawn(self) -> None: ...
    @overload
    def OnSpawn() -> void: ...
    @overload
    def OnTouch(self, Car: CarWrapper) -> None: ...
    @overload
    def OnTouch(classCarWrapper) -> void: ...
    @overload
    def Pickup2(self, Car: CarWrapper) -> None: ...
    @overload
    def Pickup2(classCarWrapper) -> void: ...
    @overload
    def PlayPickedUpFX(self) -> None: ...
    @overload
    def PlayPickedUpFX() -> void: ...
    @overload
    def Respawn2(self) -> None: ...
    @overload
    def Respawn2() -> void: ...
    @overload
    def SetFXActor(self, newFXActor: FXActorWrapper) -> None: ...
    @overload
    def SetFXActor(classFXActorWrapper) -> void: ...
    @overload
    def SetFXActorArchetype(self, newFXActorArchetype: FXActorWrapper) -> None: ...
    @overload
    def SetFXActorArchetype(classFXActorWrapper) -> void: ...
    @overload
    def SetNetRelevant(self, bRelevant: int) -> None: ...
    @overload
    def SetNetRelevant(unsignedlong) -> void: ...
    @overload
    def SetNoPickup(self) -> None: ...
    @overload
    def SetNoPickup() -> void: ...
    @overload
    def SetPickedUp(self, bNewPickedUp: int, InInstigator: CarWrapper) -> None: ...
    @overload
    def SetPickedUp(unsignedlong, classCarWrapper) -> void: ...
    @overload
    def SetRespawnDelay(self, newRespawnDelay: float) -> None: ...
    @overload
    def SetRespawnDelay(float) -> void: ...
    @overload
    def SetbNetRelevant(self, newbNetRelevant: int) -> None: ...
    @overload
    def SetbNetRelevant(unsignedlong) -> void: ...
    @overload
    def SetbNoPickup(self, newbNoPickup: int) -> None: ...
    @overload
    def SetbNoPickup(unsignedlong) -> void: ...
    @overload
    def SetbPickedUp(self, newbPickedUp: int) -> None: ...
    @overload
    def SetbPickedUp(unsignedlong) -> void: ...
    @overload
    def SetupReplicateNoPickup(self) -> None: ...
    @overload
    def SetupReplicateNoPickup() -> void: ...
    @overload
    def UpdateTickDisabled(self) -> None: ...
    @overload
    def UpdateTickDisabled() -> void: ...
    def assign(self, rhs: VehiclePickupWrapper) -> VehiclePickupWrapper: ...
    @overload
    def eventPostBeginPlay(self) -> None: ...
    @overload
    def eventPostBeginPlay() -> void: ...
    @overload
    def eventPreBeginPlay(self) -> None: ...
    @overload
    def eventPreBeginPlay() -> void: ...
    def eventTouch(self, Other: ActorWrapper, OtherComp: PrimitiveComponentWrapper, HitLocation: Vector, HitNormal: Vector) -> None: ...

class VehicleSimWrapper(ObjectWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: VehicleSimWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def GetBrakeTorque(self) -> float: ...
    @overload
    def GetBrakeTorque() -> float: ...
    @overload
    def GetCar(self) -> CarWrapper: ...
    @overload
    def GetCar() -> classCarWrapper: ...
    @overload
    def GetDriveTorque(self) -> float: ...
    @overload
    def GetDriveTorque() -> float: ...
    @overload
    def GetIdleBrakeFactor(self) -> float: ...
    @overload
    def GetIdleBrakeFactor() -> float: ...
    @overload
    def GetOppositeBrakeFactor(self) -> float: ...
    @overload
    def GetOppositeBrakeFactor() -> float: ...
    @overload
    def GetOutputBrake(self) -> float: ...
    @overload
    def GetOutputBrake() -> float: ...
    @overload
    def GetOutputHandbrake(self) -> float: ...
    @overload
    def GetOutputHandbrake() -> float: ...
    @overload
    def GetOutputSteer(self) -> float: ...
    @overload
    def GetOutputSteer() -> float: ...
    @overload
    def GetOutputThrottle(self) -> float: ...
    @overload
    def GetOutputThrottle() -> float: ...
    @overload
    def GetSteeringSensitivity(self) -> float: ...
    @overload
    def GetSteeringSensitivity() -> float: ...
    @overload
    def GetStopThreshold(self) -> float: ...
    @overload
    def GetStopThreshold() -> float: ...
    @overload
    def GetVehicle(self) -> VehicleWrapper: ...
    @overload
    def GetVehicle() -> classVehicleWrapper: ...
    @overload
    def GetWheels(self) -> ArrayWrapper_WheelWrapper_t: ...
    @overload
    def GetWheels() -> classArrayWrapper<classWheelWrapper>: ...
    @overload
    def GetbUseAckermannSteering(self) -> int: ...
    @overload
    def GetbUseAckermannSteering() -> unsignedlong: ...
    @overload
    def GetbWasAttached(self) -> int: ...
    @overload
    def GetbWasAttached() -> unsignedlong: ...
    @overload
    def SetBrakeTorque(self, newBrakeTorque: float) -> None: ...
    @overload
    def SetBrakeTorque(float) -> void: ...
    @overload
    def SetCar(self, newCar: CarWrapper) -> None: ...
    @overload
    def SetCar(classCarWrapper) -> void: ...
    @overload
    def SetDriveTorque(self, newDriveTorque: float) -> None: ...
    @overload
    def SetDriveTorque(float) -> void: ...
    @overload
    def SetIdleBrakeFactor(self, newIdleBrakeFactor: float) -> None: ...
    @overload
    def SetIdleBrakeFactor(float) -> void: ...
    @overload
    def SetOppositeBrakeFactor(self, newOppositeBrakeFactor: float) -> None: ...
    @overload
    def SetOppositeBrakeFactor(float) -> void: ...
    @overload
    def SetOutputBrake(self, newOutputBrake: float) -> None: ...
    @overload
    def SetOutputBrake(float) -> void: ...
    @overload
    def SetOutputHandbrake(self, newOutputHandbrake: float) -> None: ...
    @overload
    def SetOutputHandbrake(float) -> void: ...
    @overload
    def SetOutputSteer(self, newOutputSteer: float) -> None: ...
    @overload
    def SetOutputSteer(float) -> void: ...
    @overload
    def SetOutputThrottle(self, newOutputThrottle: float) -> None: ...
    @overload
    def SetOutputThrottle(float) -> void: ...
    @overload
    def SetSteeringSensitivity(self, newSteeringSensitivity: float) -> None: ...
    @overload
    def SetSteeringSensitivity(float) -> void: ...
    @overload
    def SetStopThreshold(self, newStopThreshold: float) -> None: ...
    @overload
    def SetStopThreshold(float) -> void: ...
    @overload
    def SetVehicle(self, newVehicle: VehicleWrapper) -> None: ...
    @overload
    def SetVehicle(classVehicleWrapper) -> void: ...
    @overload
    def SetbUseAckermannSteering(self, newbUseAckermannSteering: int) -> None: ...
    @overload
    def SetbUseAckermannSteering(unsignedlong) -> void: ...
    @overload
    def SetbWasAttached(self, newbWasAttached: int) -> None: ...
    @overload
    def SetbWasAttached(unsignedlong) -> void: ...
    def assign(self, rhs: VehicleSimWrapper) -> VehicleSimWrapper: ...

class VehicleWrapper(RBActorWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: VehicleWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def EnablePodiumMode(self) -> None: ...
    @overload
    def EnablePodiumMode() -> void: ...
    @overload
    def EventPRIChanged(self, Vehicle: VehicleWrapper) -> None: ...
    @overload
    def EventPRIChanged(classVehicleWrapper) -> void: ...
    @overload
    def ForceNetPacketIfNearBall(self) -> None: ...
    @overload
    def ForceNetPacketIfNearBall() -> void: ...
    @overload
    def GetAirControlComponent(self) -> AirControlComponentWrapper: ...
    @overload
    def GetAirControlComponent() -> classAirControlComponentWrapper: ...
    @overload
    def GetBoostComponent(self) -> BoostWrapper: ...
    @overload
    def GetBoostComponent() -> classBoostWrapper: ...
    @overload
    def GetDodgeComponent(self) -> DodgeComponentWrapper: ...
    @overload
    def GetDodgeComponent() -> classDodgeComponentWrapper: ...
    @overload
    def GetDoubleJumpComponent(self) -> DoubleJumpComponentWrapper: ...
    @overload
    def GetDoubleJumpComponent() -> classDoubleJumpComponentWrapper: ...
    @overload
    def GetForwardSpeed(self) -> float: ...
    @overload
    def GetForwardSpeed() -> float: ...
    @overload
    def GetGroundNormal(self) -> Vector: ...
    @overload
    def GetGroundNormal() -> structVector: ...
    @overload
    def GetInput(self) -> ControllerInput: ...
    @overload
    def GetInput() -> structControllerInput: ...
    @overload
    def GetJumpComponent(self) -> JumpComponentWrapper: ...
    @overload
    def GetJumpComponent() -> classJumpComponentWrapper: ...
    @overload
    def GetLastBallImpactFrame(self) -> int: ...
    @overload
    def GetLastBallImpactFrame() -> int: ...
    @overload
    def GetLastBallTouchFrame(self) -> int: ...
    @overload
    def GetLastBallTouchFrame() -> int: ...
    @overload
    def GetLocalCollisionExtent(self) -> Vector: ...
    @overload
    def GetLocalCollisionExtent() -> structVector: ...
    @overload
    def GetLocalCollisionOffset(self) -> Vector: ...
    @overload
    def GetLocalCollisionOffset() -> structVector: ...
    @overload
    def GetNumWheelContacts(self) -> int: ...
    @overload
    def GetNumWheelContacts() -> int: ...
    @overload
    def GetNumWheelWorldContacts(self) -> int: ...
    @overload
    def GetNumWheelWorldContacts() -> int: ...
    @overload
    def GetPRI(self) -> PriWrapper: ...
    @overload
    def GetPRI() -> classPriWrapper: ...
    @overload
    def GetPlayerController(self) -> PlayerControllerWrapper: ...
    @overload
    def GetPlayerController() -> classPlayerControllerWrapper: ...
    @overload
    def GetReplicatedSteer(self) -> int: ...
    @overload
    def GetReplicatedSteer() -> unsignedchar: ...
    @overload
    def GetReplicatedThrottle(self) -> int: ...
    @overload
    def GetReplicatedThrottle() -> unsignedchar: ...
    @overload
    def GetStickyForce(self) -> StickyForceData: ...
    @overload
    def GetStickyForce() -> structStickyForceData: ...
    @overload
    def GetTimeBelowSupersonicSpeed(self) -> float: ...
    @overload
    def GetTimeBelowSupersonicSpeed() -> float: ...
    @overload
    def GetTimeOffGround(self) -> float: ...
    @overload
    def GetTimeOffGround() -> float: ...
    @overload
    def GetTimeOnGround(self) -> float: ...
    @overload
    def GetTimeOnGround() -> float: ...
    @overload
    def GetVehicleSim(self) -> VehicleSimWrapper: ...
    @overload
    def GetVehicleSim() -> classVehicleSimWrapper: ...
    @overload
    def GetVehicleUpdateTag(self) -> int: ...
    @overload
    def GetVehicleUpdateTag() -> int: ...
    @overload
    def GetbDoubleJumped(self) -> int: ...
    @overload
    def GetbDoubleJumped() -> unsignedlong: ...
    @overload
    def GetbDriving(self) -> int: ...
    @overload
    def GetbDriving() -> unsignedlong: ...
    @overload
    def GetbJumped(self) -> int: ...
    @overload
    def GetbJumped() -> unsignedlong: ...
    @overload
    def GetbOnGround(self) -> int: ...
    @overload
    def GetbOnGround() -> unsignedlong: ...
    @overload
    def GetbPodiumMode(self) -> int: ...
    @overload
    def GetbPodiumMode() -> unsignedlong: ...
    @overload
    def GetbReplicatedHandbrake(self) -> int: ...
    @overload
    def GetbReplicatedHandbrake() -> unsignedlong: ...
    @overload
    def GetbSuperSonic(self) -> int: ...
    @overload
    def GetbSuperSonic() -> unsignedlong: ...
    @overload
    def InitAudioParams(self) -> None: ...
    @overload
    def InitAudioParams() -> void: ...
    def IsCarWithinForwardEllipticalCone(self, OtherCar: VehicleWrapper, YawAngleDegrees: float, PitchAngleDegrees: float) -> bool: ...
    @overload
    def IsOnGround(self) -> bool: ...
    @overload
    def IsOnGround() -> bool: ...
    @overload
    def IsOnWall(self) -> bool: ...
    @overload
    def IsOnWall() -> bool: ...
    @overload
    def OnControllerChanged(self) -> None: ...
    @overload
    def OnControllerChanged() -> void: ...
    @overload
    def OnPRIChanged(self) -> None: ...
    @overload
    def OnPRIChanged() -> void: ...
    @overload
    def SetDoubleJumpComponent(self, newDoubleJumpComponent: DoubleJumpComponentWrapper) -> None: ...
    @overload
    def SetDoubleJumpComponent(classDoubleJumpComponentWrapper) -> void: ...
    @overload
    def SetDriving(self, bDrive: int) -> None: ...
    @overload
    def SetDriving(unsignedlong) -> void: ...
    @overload
    def SetInput(self, newInput: ControllerInput) -> None: ...
    @overload
    def SetInput(structControllerInput) -> void: ...
    @overload
    def SetLastBallImpactFrame(self, newLastBallImpactFrame: int) -> None: ...
    @overload
    def SetLastBallImpactFrame(int) -> void: ...
    @overload
    def SetLastBallTouchFrame(self, newLastBallTouchFrame: int) -> None: ...
    @overload
    def SetLastBallTouchFrame(int) -> void: ...
    @overload
    def SetLocalCollisionExtent(self, newLocalCollisionExtent: Vector) -> None: ...
    @overload
    def SetLocalCollisionExtent(structVector) -> void: ...
    @overload
    def SetLocalCollisionOffset(self, newLocalCollisionOffset: Vector) -> None: ...
    @overload
    def SetLocalCollisionOffset(structVector) -> void: ...
    @overload
    def SetPRI(self, newPRI: PriWrapper) -> None: ...
    @overload
    def SetPRI(classPriWrapper) -> void: ...
    @overload
    def SetPlayerController(self, newPlayerController: PlayerControllerWrapper) -> None: ...
    @overload
    def SetPlayerController(classPlayerControllerWrapper) -> void: ...
    @overload
    def SetReplicatedSteer(self, newReplicatedSteer: int) -> None: ...
    @overload
    def SetReplicatedSteer(unsignedchar) -> void: ...
    @overload
    def SetReplicatedThrottle(self, newReplicatedThrottle: int) -> None: ...
    @overload
    def SetReplicatedThrottle(unsignedchar) -> void: ...
    @overload
    def SetStickyForce(self, newStickyForce: StickyForceData) -> None: ...
    @overload
    def SetStickyForce(structStickyForceData) -> void: ...
    @overload
    def SetTimeBelowSupersonicSpeed(self, newTimeBelowSupersonicSpeed: float) -> None: ...
    @overload
    def SetTimeBelowSupersonicSpeed(float) -> void: ...
    @overload
    def SetVehicleSim(self, newVehicleSim: VehicleSimWrapper) -> None: ...
    @overload
    def SetVehicleSim(classVehicleSimWrapper) -> void: ...
    @overload
    def SetVehicleUpdateTag(self, newVehicleUpdateTag: int) -> None: ...
    @overload
    def SetVehicleUpdateTag(int) -> void: ...
    @overload
    def SetbDoubleJumped(self, newbDoubleJumped: int) -> None: ...
    @overload
    def SetbDoubleJumped(unsignedlong) -> void: ...
    @overload
    def SetbDriving(self, newbDriving: int) -> None: ...
    @overload
    def SetbDriving(unsignedlong) -> void: ...
    @overload
    def SetbJumped(self, newbJumped: int) -> None: ...
    @overload
    def SetbJumped(unsignedlong) -> void: ...
    @overload
    def SetbOnGround(self, newbOnGround: int) -> None: ...
    @overload
    def SetbOnGround(unsignedlong) -> void: ...
    @overload
    def SetbPodiumMode(self, newbPodiumMode: int) -> None: ...
    @overload
    def SetbPodiumMode(unsignedlong) -> void: ...
    @overload
    def SetbReplicatedHandbrake(self, newbReplicatedHandbrake: int) -> None: ...
    @overload
    def SetbReplicatedHandbrake(unsignedlong) -> void: ...
    @overload
    def SetbSuperSonic(self, newbSuperSonic: int) -> None: ...
    @overload
    def SetbSuperSonic(unsignedlong) -> void: ...
    @overload
    def UnPossessed(self) -> None: ...
    @overload
    def UnPossessed() -> void: ...
    @overload
    def ZeroMovementVariables(self) -> None: ...
    @overload
    def ZeroMovementVariables() -> void: ...
    def assign(self, rhs: VehicleWrapper) -> VehicleWrapper: ...
    @overload
    def eventSetVehicleInput(self, NewInput: ControllerInput) -> None: ...
    @overload
    def eventSetVehicleInput(structControllerInput&) -> void: ...

class VelcroPickup(RumblePickupComponentWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: VelcroPickup) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def DoBreak(self) -> None: ...
    @overload
    def DoBreak() -> void: ...
    @overload
    def GetAfterHitDuration(self) -> float: ...
    @overload
    def GetAfterHitDuration() -> float: ...
    @overload
    def GetAttachTime(self) -> float: ...
    @overload
    def GetAttachTime() -> float: ...
    @overload
    def GetBallOffset(self) -> Vector: ...
    @overload
    def GetBallOffset() -> structVector: ...
    @overload
    def GetBreakTime(self) -> float: ...
    @overload
    def GetBreakTime() -> float: ...
    @overload
    def GetCheckLastTouchRate(self) -> float: ...
    @overload
    def GetCheckLastTouchRate() -> float: ...
    @overload
    def GetLastTouchCheckTime(self) -> float: ...
    @overload
    def GetLastTouchCheckTime() -> float: ...
    @overload
    def GetMinBreakForce(self) -> float: ...
    @overload
    def GetMinBreakForce() -> float: ...
    @overload
    def GetMinBreakTime(self) -> float: ...
    @overload
    def GetMinBreakTime() -> float: ...
    @overload
    def GetOldBallMass(self) -> float: ...
    @overload
    def GetOldBallMass() -> float: ...
    @overload
    def GetPostBreakDuration(self) -> float: ...
    @overload
    def GetPostBreakDuration() -> float: ...
    @overload
    def GetWeldedBall(self) -> BallWrapper: ...
    @overload
    def GetWeldedBall() -> classBallWrapper: ...
    @overload
    def GetbBroken(self) -> int: ...
    @overload
    def GetbBroken() -> unsignedlong: ...
    @overload
    def GetbHit(self) -> int: ...
    @overload
    def GetbHit() -> unsignedlong: ...
    @overload
    def GetbUseRealOffset(self) -> int: ...
    @overload
    def GetbUseRealOffset() -> unsignedlong: ...
    @overload
    def HandleCarTouch(self, InBall: BallWrapper, InCar: CarWrapper, HitType: int) -> None: ...
    @overload
    def HandleCarTouch(classBallWrapper, classCarWrapper, unsignedchar) -> void: ...
    @overload
    def OnBallHit(self) -> None: ...
    @overload
    def OnBallHit() -> void: ...
    @overload
    def PickupEnd(self) -> None: ...
    @overload
    def PickupEnd() -> void: ...
    @overload
    def PickupStart(self) -> None: ...
    @overload
    def PickupStart() -> void: ...
    @overload
    def SetAfterHitDuration(self, newAfterHitDuration: float) -> None: ...
    @overload
    def SetAfterHitDuration(float) -> void: ...
    @overload
    def SetAttachTime(self, newAttachTime: float) -> None: ...
    @overload
    def SetAttachTime(float) -> void: ...
    @overload
    def SetBallOffset(self, newBallOffset: Vector) -> None: ...
    @overload
    def SetBallOffset(structVector) -> void: ...
    @overload
    def SetBreakTime(self, newBreakTime: float) -> None: ...
    @overload
    def SetBreakTime(float) -> void: ...
    @overload
    def SetCheckLastTouchRate(self, newCheckLastTouchRate: float) -> None: ...
    @overload
    def SetCheckLastTouchRate(float) -> void: ...
    @overload
    def SetLastTouchCheckTime(self, newLastTouchCheckTime: float) -> None: ...
    @overload
    def SetLastTouchCheckTime(float) -> void: ...
    @overload
    def SetMinBreakForce(self, newMinBreakForce: float) -> None: ...
    @overload
    def SetMinBreakForce(float) -> void: ...
    @overload
    def SetMinBreakTime(self, newMinBreakTime: float) -> None: ...
    @overload
    def SetMinBreakTime(float) -> void: ...
    @overload
    def SetOldBallMass(self, newOldBallMass: float) -> None: ...
    @overload
    def SetOldBallMass(float) -> void: ...
    @overload
    def SetPostBreakDuration(self, newPostBreakDuration: float) -> None: ...
    @overload
    def SetPostBreakDuration(float) -> void: ...
    @overload
    def SetWeldedBall(self, newWeldedBall: BallWrapper) -> None: ...
    @overload
    def SetWeldedBall(classBallWrapper) -> void: ...
    @overload
    def SetbBroken(self, newbBroken: int) -> None: ...
    @overload
    def SetbBroken(unsignedlong) -> void: ...
    @overload
    def SetbHit(self, newbHit: int) -> None: ...
    @overload
    def SetbHit(unsignedlong) -> void: ...
    @overload
    def SetbUseRealOffset(self, newbUseRealOffset: int) -> None: ...
    @overload
    def SetbUseRealOffset(unsignedlong) -> void: ...
    def assign(self, rhs: VelcroPickup) -> VelcroPickup: ...

class ViewTarget:
    def __init__(self) -> None: ...
    @property
    def AspectRatio(self) -> Any: ...
    @AspectRatio.setter
    def AspectRatio(self, val: Any) -> None: ...
    @property
    def POV(self) -> Any: ...
    @POV.setter
    def POV(self, val: Any) -> None: ...

class WheelContactData:
    def __init__(self) -> None: ...
    @property
    def HasContactChangeTime(self) -> Any: ...
    @HasContactChangeTime.setter
    def HasContactChangeTime(self, val: Any) -> None: ...
    @property
    def LatDirection(self) -> Any: ...
    @LatDirection.setter
    def LatDirection(self, val: Any) -> None: ...
    @property
    def Location(self) -> Any: ...
    @Location.setter
    def Location(self, val: Any) -> None: ...
    @property
    def LongDirection(self) -> Any: ...
    @LongDirection.setter
    def LongDirection(self, val: Any) -> None: ...
    @property
    def Normal(self) -> Any: ...
    @Normal.setter
    def Normal(self, val: Any) -> None: ...
    @property
    def bHasContact(self) -> Any: ...
    @property
    def bHasContactWithWorldGeometry(self) -> Any: ...

class WheelWrapper(ObjectWrapper):
    @overload
    def __init__(self, mem: int) -> None: ...
    @overload
    def __init__(self, arg0: WheelWrapper) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    @overload
    def EventContactChanged(self, Wheel: WheelWrapper) -> None: ...
    @overload
    def EventContactChanged(classWheelWrapper) -> void: ...
    @overload
    def GetAerialAccelerationFactor(self) -> float: ...
    @overload
    def GetAerialAccelerationFactor() -> float: ...
    @overload
    def GetAerialThrottleToVelocityFactor(self) -> float: ...
    @overload
    def GetAerialThrottleToVelocityFactor() -> float: ...
    @overload
    def GetBoneOffset(self) -> Vector: ...
    @overload
    def GetBoneOffset() -> structVector: ...
    @overload
    def GetContact(self) -> WheelContactData: ...
    @overload
    def GetContact() -> structWheelContactData: ...
    @overload
    def GetContactForceDistance(self) -> float: ...
    @overload
    def GetContactForceDistance() -> float: ...
    @overload
    def GetFrictionCurveInput(self) -> float: ...
    @overload
    def GetFrictionCurveInput() -> float: ...
    @overload
    def GetLinearVelocity(self) -> Vector: ...
    @overload
    def GetLinearVelocity() -> structVector: ...
    @overload
    def GetLocalRestPosition(self) -> Vector: ...
    @overload
    def GetLocalRestPosition() -> structVector: ...
    @overload
    def GetLocalSuspensionRayStart(self) -> Vector: ...
    @overload
    def GetLocalSuspensionRayStart() -> structVector: ...
    @overload
    def GetPresetRestPosition(self) -> Vector: ...
    @overload
    def GetPresetRestPosition() -> structVector: ...
    @overload
    def GetRefWheelLocation(self) -> Vector: ...
    @overload
    def GetRefWheelLocation() -> structVector: ...
    @overload
    def GetSpinSpeed(self) -> float: ...
    @overload
    def GetSpinSpeed() -> float: ...
    @overload
    def GetSpinSpeedDecayRate(self) -> float: ...
    @overload
    def GetSpinSpeedDecayRate() -> float: ...
    @overload
    def GetSteer2(self) -> float: ...
    @overload
    def GetSteer2() -> float: ...
    @overload
    def GetSteerFactor(self) -> float: ...
    @overload
    def GetSteerFactor() -> float: ...
    @overload
    def GetSuspensionDampingCompression(self) -> float: ...
    @overload
    def GetSuspensionDampingCompression() -> float: ...
    @overload
    def GetSuspensionDampingRelaxation(self) -> float: ...
    @overload
    def GetSuspensionDampingRelaxation() -> float: ...
    @overload
    def GetSuspensionDistance(self) -> float: ...
    @overload
    def GetSuspensionDistance() -> float: ...
    @overload
    def GetSuspensionMaxRaise(self) -> float: ...
    @overload
    def GetSuspensionMaxRaise() -> float: ...
    @overload
    def GetSuspensionStiffness(self) -> float: ...
    @overload
    def GetSuspensionStiffness() -> float: ...
    @overload
    def GetSuspensionTravel(self) -> float: ...
    @overload
    def GetSuspensionTravel() -> float: ...
    @overload
    def GetVehicleSim(self) -> VehicleSimWrapper: ...
    @overload
    def GetVehicleSim() -> classVehicleSimWrapper: ...
    @overload
    def GetWheelIndex(self) -> int: ...
    @overload
    def GetWheelIndex() -> int: ...
    @overload
    def GetWheelRadius(self) -> float: ...
    @overload
    def GetWheelRadius() -> float: ...
    @overload
    def GetbDrawDebug(self) -> int: ...
    @overload
    def GetbDrawDebug() -> unsignedlong: ...
    @overload
    def GetbHadContact(self) -> int: ...
    @overload
    def GetbHadContact() -> unsignedlong: ...
    @overload
    def SetAerialAccelerationFactor(self, newAerialAccelerationFactor: float) -> None: ...
    @overload
    def SetAerialAccelerationFactor(float) -> void: ...
    @overload
    def SetAerialThrottleToVelocityFactor(self, newAerialThrottleToVelocityFactor: float) -> None: ...
    @overload
    def SetAerialThrottleToVelocityFactor(float) -> void: ...
    @overload
    def SetBoneOffset(self, newBoneOffset: Vector) -> None: ...
    @overload
    def SetBoneOffset(structVector) -> void: ...
    @overload
    def SetContact(self, newContact: WheelContactData) -> None: ...
    @overload
    def SetContact(structWheelContactData) -> void: ...
    @overload
    def SetContactForceDistance(self, newContactForceDistance: float) -> None: ...
    @overload
    def SetContactForceDistance(float) -> void: ...
    @overload
    def SetFrictionCurveInput(self, newFrictionCurveInput: float) -> None: ...
    @overload
    def SetFrictionCurveInput(float) -> void: ...
    @overload
    def SetLocalRestPosition(self, newLocalRestPosition: Vector) -> None: ...
    @overload
    def SetLocalRestPosition(structVector) -> void: ...
    @overload
    def SetLocalSuspensionRayStart(self, newLocalSuspensionRayStart: Vector) -> None: ...
    @overload
    def SetLocalSuspensionRayStart(structVector) -> void: ...
    @overload
    def SetPresetRestPosition(self, newPresetRestPosition: Vector) -> None: ...
    @overload
    def SetPresetRestPosition(structVector) -> void: ...
    @overload
    def SetSpinSpeed(self, newSpinSpeed: float) -> None: ...
    @overload
    def SetSpinSpeed(float) -> void: ...
    @overload
    def SetSpinSpeedDecayRate(self, newSpinSpeedDecayRate: float) -> None: ...
    @overload
    def SetSpinSpeedDecayRate(float) -> void: ...
    @overload
    def SetSteerFactor(self, newSteerFactor: float) -> None: ...
    @overload
    def SetSteerFactor(float) -> void: ...
    @overload
    def SetSuspensionDampingCompression(self, newSuspensionDampingCompression: float) -> None: ...
    @overload
    def SetSuspensionDampingCompression(float) -> void: ...
    @overload
    def SetSuspensionDampingRelaxation(self, newSuspensionDampingRelaxation: float) -> None: ...
    @overload
    def SetSuspensionDampingRelaxation(float) -> void: ...
    @overload
    def SetSuspensionMaxRaise(self, newSuspensionMaxRaise: float) -> None: ...
    @overload
    def SetSuspensionMaxRaise(float) -> void: ...
    @overload
    def SetSuspensionStiffness(self, newSuspensionStiffness: float) -> None: ...
    @overload
    def SetSuspensionStiffness(float) -> void: ...
    @overload
    def SetSuspensionTravel(self, newSuspensionTravel: float) -> None: ...
    @overload
    def SetSuspensionTravel(float) -> void: ...
    @overload
    def SetVehicleSim(self, newVehicleSim: VehicleSimWrapper) -> None: ...
    @overload
    def SetVehicleSim(classVehicleSimWrapper) -> void: ...
    @overload
    def SetWheelIndex(self, newWheelIndex: int) -> None: ...
    @overload
    def SetWheelIndex(int) -> void: ...
    @overload
    def SetWheelRadius(self, newWheelRadius: float) -> None: ...
    @overload
    def SetWheelRadius(float) -> void: ...
    @overload
    def SetbDrawDebug(self, newbDrawDebug: int) -> None: ...
    @overload
    def SetbDrawDebug(unsignedlong) -> void: ...
    @overload
    def SetbHadContact(self, newbHadContact: int) -> None: ...
    @overload
    def SetbHadContact(unsignedlong) -> void: ...
    def assign(self, rhs: WheelWrapper) -> WheelWrapper: ...

class WorldContactData:
    def __init__(self) -> None: ...
    @property
    def Location(self) -> Any: ...
    @Location.setter
    def Location(self, val: Any) -> None: ...
    @property
    def Normal(self) -> Any: ...
    @Normal.setter
    def Normal(self, val: Any) -> None: ...
    @property
    def Velocity(self) -> Any: ...
    @Velocity.setter
    def Velocity(self, val: Any) -> None: ...
    @property
    def bHasContact(self) -> Any: ...
