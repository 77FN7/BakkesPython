#include "pch.h"
#include <bakkesmod/wrappers/GameObject/CarComponent/PrimitiveComponentWrapper.h>
#include <sstream> // __str__


void bind_bakkesmod_wrappers_GameObject_CarComponent_PrimitiveComponentWrapper(py::module &M)
{
	{ // PrimitiveComponentWrapper file:bakkesmod/wrappers/GameObject/CarComponent/PrimitiveComponentWrapper.h line:7
		pybind11::class_<PrimitiveComponentWrapper, std::shared_ptr<PrimitiveComponentWrapper>, ObjectWrapper> cl(M, "PrimitiveComponentWrapper");
		pybind11::handle cl_type = cl;

		cl.def( pybind11::init<unsigned long>(), pybind11::arg("mem") );

		cl.def( pybind11::init( [](PrimitiveComponentWrapper const &o){ return new PrimitiveComponentWrapper(o); } ) );
		cl.def("assign", (class PrimitiveComponentWrapper & (PrimitiveComponentWrapper::*)(class PrimitiveComponentWrapper)) &PrimitiveComponentWrapper::operator=, "C++: PrimitiveComponentWrapper::operator=(class PrimitiveComponentWrapper) --> class PrimitiveComponentWrapper &", pybind11::return_value_policy::automatic, pybind11::arg("rhs"));
		cl.def("GetRBChannel", (unsigned char (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetRBChannel, "C++: PrimitiveComponentWrapper::GetRBChannel() --> unsigned char");
		cl.def("SetRBChannel", (void (PrimitiveComponentWrapper::*)(unsigned char)) &PrimitiveComponentWrapper::SetRBChannel, "C++: PrimitiveComponentWrapper::SetRBChannel(unsigned char) --> void", pybind11::arg("newRBChannel"));
		cl.def("GetRBDominanceGroup", (unsigned char (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetRBDominanceGroup, "C++: PrimitiveComponentWrapper::GetRBDominanceGroup() --> unsigned char");
		cl.def("SetRBDominanceGroup", (void (PrimitiveComponentWrapper::*)(unsigned char)) &PrimitiveComponentWrapper::SetRBDominanceGroup, "C++: PrimitiveComponentWrapper::SetRBDominanceGroup(unsigned char) --> void", pybind11::arg("newRBDominanceGroup"));
		cl.def("GetbOnlyBlockActorMovement", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbOnlyBlockActorMovement, "C++: PrimitiveComponentWrapper::GetbOnlyBlockActorMovement() --> unsigned long");
		cl.def("SetbOnlyBlockActorMovement", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbOnlyBlockActorMovement, "C++: PrimitiveComponentWrapper::SetbOnlyBlockActorMovement(unsigned long) --> void", pybind11::arg("newbOnlyBlockActorMovement"));
		cl.def("GetHiddenGame", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetHiddenGame, "C++: PrimitiveComponentWrapper::GetHiddenGame() --> unsigned long");
		cl.def("SetHiddenGame", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetHiddenGame, "C++: PrimitiveComponentWrapper::SetHiddenGame(unsigned long) --> void", pybind11::arg("newHiddenGame"));
		cl.def("GetbOwnerNoSee", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbOwnerNoSee, "C++: PrimitiveComponentWrapper::GetbOwnerNoSee() --> unsigned long");
		cl.def("SetbOwnerNoSee", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbOwnerNoSee, "C++: PrimitiveComponentWrapper::SetbOwnerNoSee(unsigned long) --> void", pybind11::arg("newbOwnerNoSee"));
		cl.def("GetbOnlyOwnerSee", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbOnlyOwnerSee, "C++: PrimitiveComponentWrapper::GetbOnlyOwnerSee() --> unsigned long");
		cl.def("SetbOnlyOwnerSee", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbOnlyOwnerSee, "C++: PrimitiveComponentWrapper::SetbOnlyOwnerSee(unsigned long) --> void", pybind11::arg("newbOnlyOwnerSee"));
		cl.def("GetbIgnoreOwnerHidden", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbIgnoreOwnerHidden, "C++: PrimitiveComponentWrapper::GetbIgnoreOwnerHidden() --> unsigned long");
		cl.def("SetbIgnoreOwnerHidden", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbIgnoreOwnerHidden, "C++: PrimitiveComponentWrapper::SetbIgnoreOwnerHidden(unsigned long) --> void", pybind11::arg("newbIgnoreOwnerHidden"));
		cl.def("GetbUseAsOccluder", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbUseAsOccluder, "C++: PrimitiveComponentWrapper::GetbUseAsOccluder() --> unsigned long");
		cl.def("SetbUseAsOccluder", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbUseAsOccluder, "C++: PrimitiveComponentWrapper::SetbUseAsOccluder(unsigned long) --> void", pybind11::arg("newbUseAsOccluder"));
		cl.def("GetbAllowApproximateOcclusion", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbAllowApproximateOcclusion, "C++: PrimitiveComponentWrapper::GetbAllowApproximateOcclusion() --> unsigned long");
		cl.def("SetbAllowApproximateOcclusion", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbAllowApproximateOcclusion, "C++: PrimitiveComponentWrapper::SetbAllowApproximateOcclusion(unsigned long) --> void", pybind11::arg("newbAllowApproximateOcclusion"));
		cl.def("GetbFirstFrameOcclusion", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbFirstFrameOcclusion, "C++: PrimitiveComponentWrapper::GetbFirstFrameOcclusion() --> unsigned long");
		cl.def("SetbFirstFrameOcclusion", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbFirstFrameOcclusion, "C++: PrimitiveComponentWrapper::SetbFirstFrameOcclusion(unsigned long) --> void", pybind11::arg("newbFirstFrameOcclusion"));
		cl.def("GetbIgnoreNearPlaneIntersection", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbIgnoreNearPlaneIntersection, "C++: PrimitiveComponentWrapper::GetbIgnoreNearPlaneIntersection() --> unsigned long");
		cl.def("SetbIgnoreNearPlaneIntersection", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbIgnoreNearPlaneIntersection, "C++: PrimitiveComponentWrapper::SetbIgnoreNearPlaneIntersection(unsigned long) --> void", pybind11::arg("newbIgnoreNearPlaneIntersection"));
		cl.def("GetbAcceptsStaticDecals", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbAcceptsStaticDecals, "C++: PrimitiveComponentWrapper::GetbAcceptsStaticDecals() --> unsigned long");
		cl.def("GetbAcceptsDynamicDecals", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbAcceptsDynamicDecals, "C++: PrimitiveComponentWrapper::GetbAcceptsDynamicDecals() --> unsigned long");
		cl.def("GetbIsRefreshingDecals", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbIsRefreshingDecals, "C++: PrimitiveComponentWrapper::GetbIsRefreshingDecals() --> unsigned long");
		cl.def("GetCastShadow", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetCastShadow, "C++: PrimitiveComponentWrapper::GetCastShadow() --> unsigned long");
		cl.def("SetCastShadow", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetCastShadow, "C++: PrimitiveComponentWrapper::SetCastShadow(unsigned long) --> void", pybind11::arg("newCastShadow"));
		cl.def("GetbForceDirectLightMap", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbForceDirectLightMap, "C++: PrimitiveComponentWrapper::GetbForceDirectLightMap() --> unsigned long");
		cl.def("SetbForceDirectLightMap", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbForceDirectLightMap, "C++: PrimitiveComponentWrapper::SetbForceDirectLightMap(unsigned long) --> void", pybind11::arg("newbForceDirectLightMap"));
		cl.def("GetbCastDynamicShadow", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbCastDynamicShadow, "C++: PrimitiveComponentWrapper::GetbCastDynamicShadow() --> unsigned long");
		cl.def("SetbCastDynamicShadow", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbCastDynamicShadow, "C++: PrimitiveComponentWrapper::SetbCastDynamicShadow(unsigned long) --> void", pybind11::arg("newbCastDynamicShadow"));
		cl.def("GetbCastStaticShadow", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbCastStaticShadow, "C++: PrimitiveComponentWrapper::GetbCastStaticShadow() --> unsigned long");
		cl.def("SetbCastStaticShadow", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbCastStaticShadow, "C++: PrimitiveComponentWrapper::SetbCastStaticShadow(unsigned long) --> void", pybind11::arg("newbCastStaticShadow"));
		cl.def("GetbSelfShadowOnly", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbSelfShadowOnly, "C++: PrimitiveComponentWrapper::GetbSelfShadowOnly() --> unsigned long");
		cl.def("SetbSelfShadowOnly", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbSelfShadowOnly, "C++: PrimitiveComponentWrapper::SetbSelfShadowOnly(unsigned long) --> void", pybind11::arg("newbSelfShadowOnly"));
		cl.def("GetbNoModSelfShadow", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbNoModSelfShadow, "C++: PrimitiveComponentWrapper::GetbNoModSelfShadow() --> unsigned long");
		cl.def("SetbNoModSelfShadow", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbNoModSelfShadow, "C++: PrimitiveComponentWrapper::SetbNoModSelfShadow(unsigned long) --> void", pybind11::arg("newbNoModSelfShadow"));
		cl.def("GetbAcceptsDynamicDominantLightShadows", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbAcceptsDynamicDominantLightShadows, "C++: PrimitiveComponentWrapper::GetbAcceptsDynamicDominantLightShadows() --> unsigned long");
		cl.def("SetbAcceptsDynamicDominantLightShadows", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbAcceptsDynamicDominantLightShadows, "C++: PrimitiveComponentWrapper::SetbAcceptsDynamicDominantLightShadows(unsigned long) --> void", pybind11::arg("newbAcceptsDynamicDominantLightShadows"));
		cl.def("GetbCastHiddenShadow", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbCastHiddenShadow, "C++: PrimitiveComponentWrapper::GetbCastHiddenShadow() --> unsigned long");
		cl.def("SetbCastHiddenShadow", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbCastHiddenShadow, "C++: PrimitiveComponentWrapper::SetbCastHiddenShadow(unsigned long) --> void", pybind11::arg("newbCastHiddenShadow"));
		cl.def("GetbCastShadowAsTwoSided", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbCastShadowAsTwoSided, "C++: PrimitiveComponentWrapper::GetbCastShadowAsTwoSided() --> unsigned long");
		cl.def("SetbCastShadowAsTwoSided", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbCastShadowAsTwoSided, "C++: PrimitiveComponentWrapper::SetbCastShadowAsTwoSided(unsigned long) --> void", pybind11::arg("newbCastShadowAsTwoSided"));
		cl.def("GetbAcceptsLights", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbAcceptsLights, "C++: PrimitiveComponentWrapper::GetbAcceptsLights() --> unsigned long");
		cl.def("SetbAcceptsLights", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbAcceptsLights, "C++: PrimitiveComponentWrapper::SetbAcceptsLights(unsigned long) --> void", pybind11::arg("newbAcceptsLights"));
		cl.def("GetbAcceptsDynamicLights", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbAcceptsDynamicLights, "C++: PrimitiveComponentWrapper::GetbAcceptsDynamicLights() --> unsigned long");
		cl.def("SetbAcceptsDynamicLights", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbAcceptsDynamicLights, "C++: PrimitiveComponentWrapper::SetbAcceptsDynamicLights(unsigned long) --> void", pybind11::arg("newbAcceptsDynamicLights"));
		cl.def("GetbUseOnePassLightingOnTranslucency", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbUseOnePassLightingOnTranslucency, "C++: PrimitiveComponentWrapper::GetbUseOnePassLightingOnTranslucency() --> unsigned long");
		cl.def("SetbUseOnePassLightingOnTranslucency", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbUseOnePassLightingOnTranslucency, "C++: PrimitiveComponentWrapper::SetbUseOnePassLightingOnTranslucency(unsigned long) --> void", pybind11::arg("newbUseOnePassLightingOnTranslucency"));
		cl.def("GetbUsePrecomputedShadows", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbUsePrecomputedShadows, "C++: PrimitiveComponentWrapper::GetbUsePrecomputedShadows() --> unsigned long");
		cl.def("GetbHasExplicitShadowParent", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbHasExplicitShadowParent, "C++: PrimitiveComponentWrapper::GetbHasExplicitShadowParent() --> unsigned long");
		cl.def("GetCollideActors", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetCollideActors, "C++: PrimitiveComponentWrapper::GetCollideActors() --> unsigned long");
		cl.def("SetCollideActors", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetCollideActors, "C++: PrimitiveComponentWrapper::SetCollideActors(unsigned long) --> void", pybind11::arg("newCollideActors"));
		cl.def("GetAlwaysCheckCollision", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetAlwaysCheckCollision, "C++: PrimitiveComponentWrapper::GetAlwaysCheckCollision() --> unsigned long");
		cl.def("SetAlwaysCheckCollision", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetAlwaysCheckCollision, "C++: PrimitiveComponentWrapper::SetAlwaysCheckCollision(unsigned long) --> void", pybind11::arg("newAlwaysCheckCollision"));
		cl.def("GetBlockActors", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetBlockActors, "C++: PrimitiveComponentWrapper::GetBlockActors() --> unsigned long");
		cl.def("SetBlockActors", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetBlockActors, "C++: PrimitiveComponentWrapper::SetBlockActors(unsigned long) --> void", pybind11::arg("newBlockActors"));
		cl.def("GetBlockZeroExtent", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetBlockZeroExtent, "C++: PrimitiveComponentWrapper::GetBlockZeroExtent() --> unsigned long");
		cl.def("SetBlockZeroExtent", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetBlockZeroExtent, "C++: PrimitiveComponentWrapper::SetBlockZeroExtent(unsigned long) --> void", pybind11::arg("newBlockZeroExtent"));
		cl.def("GetBlockNonZeroExtent", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetBlockNonZeroExtent, "C++: PrimitiveComponentWrapper::GetBlockNonZeroExtent() --> unsigned long");
		cl.def("SetBlockNonZeroExtent", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetBlockNonZeroExtent, "C++: PrimitiveComponentWrapper::SetBlockNonZeroExtent(unsigned long) --> void", pybind11::arg("newBlockNonZeroExtent"));
		cl.def("GetCanBlockCamera", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetCanBlockCamera, "C++: PrimitiveComponentWrapper::GetCanBlockCamera() --> unsigned long");
		cl.def("SetCanBlockCamera", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetCanBlockCamera, "C++: PrimitiveComponentWrapper::SetCanBlockCamera(unsigned long) --> void", pybind11::arg("newCanBlockCamera"));
		cl.def("GetBlockRigidBody", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetBlockRigidBody, "C++: PrimitiveComponentWrapper::GetBlockRigidBody() --> unsigned long");
		cl.def("SetBlockRigidBody", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetBlockRigidBody, "C++: PrimitiveComponentWrapper::SetBlockRigidBody(unsigned long) --> void", pybind11::arg("newBlockRigidBody"));
		cl.def("GetbBlockFootPlacement", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbBlockFootPlacement, "C++: PrimitiveComponentWrapper::GetbBlockFootPlacement() --> unsigned long");
		cl.def("SetbBlockFootPlacement", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbBlockFootPlacement, "C++: PrimitiveComponentWrapper::SetbBlockFootPlacement(unsigned long) --> void", pybind11::arg("newbBlockFootPlacement"));
		cl.def("GetbDisableAllRigidBody", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbDisableAllRigidBody, "C++: PrimitiveComponentWrapper::GetbDisableAllRigidBody() --> unsigned long");
		cl.def("SetbDisableAllRigidBody", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbDisableAllRigidBody, "C++: PrimitiveComponentWrapper::SetbDisableAllRigidBody(unsigned long) --> void", pybind11::arg("newbDisableAllRigidBody"));
		cl.def("GetbSkipRBGeomCreation", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbSkipRBGeomCreation, "C++: PrimitiveComponentWrapper::GetbSkipRBGeomCreation() --> unsigned long");
		cl.def("SetbSkipRBGeomCreation", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbSkipRBGeomCreation, "C++: PrimitiveComponentWrapper::SetbSkipRBGeomCreation(unsigned long) --> void", pybind11::arg("newbSkipRBGeomCreation"));
		cl.def("GetbNotifyRigidBodyCollision", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbNotifyRigidBodyCollision, "C++: PrimitiveComponentWrapper::GetbNotifyRigidBodyCollision() --> unsigned long");
		cl.def("SetbNotifyRigidBodyCollision", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbNotifyRigidBodyCollision, "C++: PrimitiveComponentWrapper::SetbNotifyRigidBodyCollision(unsigned long) --> void", pybind11::arg("newbNotifyRigidBodyCollision"));
		cl.def("GetbFluidDrain", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbFluidDrain, "C++: PrimitiveComponentWrapper::GetbFluidDrain() --> unsigned long");
		cl.def("SetbFluidDrain", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbFluidDrain, "C++: PrimitiveComponentWrapper::SetbFluidDrain(unsigned long) --> void", pybind11::arg("newbFluidDrain"));
		cl.def("GetbFluidTwoWay", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbFluidTwoWay, "C++: PrimitiveComponentWrapper::GetbFluidTwoWay() --> unsigned long");
		cl.def("SetbFluidTwoWay", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbFluidTwoWay, "C++: PrimitiveComponentWrapper::SetbFluidTwoWay(unsigned long) --> void", pybind11::arg("newbFluidTwoWay"));
		cl.def("GetbIgnoreRadialImpulse", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbIgnoreRadialImpulse, "C++: PrimitiveComponentWrapper::GetbIgnoreRadialImpulse() --> unsigned long");
		cl.def("SetbIgnoreRadialImpulse", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbIgnoreRadialImpulse, "C++: PrimitiveComponentWrapper::SetbIgnoreRadialImpulse(unsigned long) --> void", pybind11::arg("newbIgnoreRadialImpulse"));
		cl.def("GetbIgnoreRadialForce", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbIgnoreRadialForce, "C++: PrimitiveComponentWrapper::GetbIgnoreRadialForce() --> unsigned long");
		cl.def("SetbIgnoreRadialForce", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbIgnoreRadialForce, "C++: PrimitiveComponentWrapper::SetbIgnoreRadialForce(unsigned long) --> void", pybind11::arg("newbIgnoreRadialForce"));
		cl.def("GetbIgnoreForceField", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbIgnoreForceField, "C++: PrimitiveComponentWrapper::GetbIgnoreForceField() --> unsigned long");
		cl.def("SetbIgnoreForceField", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbIgnoreForceField, "C++: PrimitiveComponentWrapper::SetbIgnoreForceField(unsigned long) --> void", pybind11::arg("newbIgnoreForceField"));
		cl.def("GetbUseCompartment", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbUseCompartment, "C++: PrimitiveComponentWrapper::GetbUseCompartment() --> unsigned long");
		cl.def("SetbUseCompartment", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbUseCompartment, "C++: PrimitiveComponentWrapper::SetbUseCompartment(unsigned long) --> void", pybind11::arg("newbUseCompartment"));
		cl.def("GetAlwaysLoadOnClient", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetAlwaysLoadOnClient, "C++: PrimitiveComponentWrapper::GetAlwaysLoadOnClient() --> unsigned long");
		cl.def("SetAlwaysLoadOnClient", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetAlwaysLoadOnClient, "C++: PrimitiveComponentWrapper::SetAlwaysLoadOnClient(unsigned long) --> void", pybind11::arg("newAlwaysLoadOnClient"));
		cl.def("GetAlwaysLoadOnServer", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetAlwaysLoadOnServer, "C++: PrimitiveComponentWrapper::GetAlwaysLoadOnServer() --> unsigned long");
		cl.def("SetAlwaysLoadOnServer", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetAlwaysLoadOnServer, "C++: PrimitiveComponentWrapper::SetAlwaysLoadOnServer(unsigned long) --> void", pybind11::arg("newAlwaysLoadOnServer"));
		cl.def("GetbIgnoreHiddenActorsMembership", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetbIgnoreHiddenActorsMembership, "C++: PrimitiveComponentWrapper::GetbIgnoreHiddenActorsMembership() --> unsigned long");
		cl.def("SetbIgnoreHiddenActorsMembership", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetbIgnoreHiddenActorsMembership, "C++: PrimitiveComponentWrapper::SetbIgnoreHiddenActorsMembership(unsigned long) --> void", pybind11::arg("newbIgnoreHiddenActorsMembership"));
		cl.def("GetAbsoluteTranslation", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetAbsoluteTranslation, "C++: PrimitiveComponentWrapper::GetAbsoluteTranslation() --> unsigned long");
		cl.def("SetAbsoluteTranslation", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetAbsoluteTranslation, "C++: PrimitiveComponentWrapper::SetAbsoluteTranslation(unsigned long) --> void", pybind11::arg("newAbsoluteTranslation"));
		cl.def("GetAbsoluteRotation", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetAbsoluteRotation, "C++: PrimitiveComponentWrapper::GetAbsoluteRotation() --> unsigned long");
		cl.def("SetAbsoluteRotation", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetAbsoluteRotation, "C++: PrimitiveComponentWrapper::SetAbsoluteRotation(unsigned long) --> void", pybind11::arg("newAbsoluteRotation"));
		cl.def("GetAbsoluteScale", (unsigned long (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetAbsoluteScale, "C++: PrimitiveComponentWrapper::GetAbsoluteScale() --> unsigned long");
		cl.def("SetAbsoluteScale", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetAbsoluteScale, "C++: PrimitiveComponentWrapper::SetAbsoluteScale(unsigned long) --> void", pybind11::arg("newAbsoluteScale"));
		cl.def("GetVisibilityId", (int (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetVisibilityId, "C++: PrimitiveComponentWrapper::GetVisibilityId() --> int");
		cl.def("SetVisibilityId", (void (PrimitiveComponentWrapper::*)(int)) &PrimitiveComponentWrapper::SetVisibilityId, "C++: PrimitiveComponentWrapper::SetVisibilityId(int) --> void", pybind11::arg("newVisibilityId"));
		cl.def("GetTranslation", (struct Vector (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetTranslation, "C++: PrimitiveComponentWrapper::GetTranslation() --> struct Vector");
		cl.def("SetTranslation", (void (PrimitiveComponentWrapper::*)(struct Vector)) &PrimitiveComponentWrapper::SetTranslation, "C++: PrimitiveComponentWrapper::SetTranslation(struct Vector) --> void", pybind11::arg("newTranslation"));
		cl.def("GetRotation", (struct Rotator (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetRotation, "C++: PrimitiveComponentWrapper::GetRotation() --> struct Rotator");
		cl.def("SetRotation", (void (PrimitiveComponentWrapper::*)(struct Rotator)) &PrimitiveComponentWrapper::SetRotation, "C++: PrimitiveComponentWrapper::SetRotation(struct Rotator) --> void", pybind11::arg("newRotation"));
		cl.def("GetScale", (float (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetScale, "C++: PrimitiveComponentWrapper::GetScale() --> float");
		cl.def("SetScale", (void (PrimitiveComponentWrapper::*)(float)) &PrimitiveComponentWrapper::SetScale, "C++: PrimitiveComponentWrapper::SetScale(float) --> void", pybind11::arg("newScale"));
		cl.def("GetScale3D", (struct Vector (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetScale3D, "C++: PrimitiveComponentWrapper::GetScale3D() --> struct Vector");
		cl.def("SetScale3D", (void (PrimitiveComponentWrapper::*)(struct Vector)) &PrimitiveComponentWrapper::SetScale3D, "C++: PrimitiveComponentWrapper::SetScale3D(struct Vector) --> void", pybind11::arg("newScale3D"));
		cl.def("GetBoundsScale", (float (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetBoundsScale, "C++: PrimitiveComponentWrapper::GetBoundsScale() --> float");
		cl.def("SetBoundsScale", (void (PrimitiveComponentWrapper::*)(float)) &PrimitiveComponentWrapper::SetBoundsScale, "C++: PrimitiveComponentWrapper::SetBoundsScale(float) --> void", pybind11::arg("newBoundsScale"));
		cl.def("SetLastSubmitTime", (void (PrimitiveComponentWrapper::*)(float)) &PrimitiveComponentWrapper::SetLastSubmitTime, "C++: PrimitiveComponentWrapper::SetLastSubmitTime(float) --> void", pybind11::arg("newLastSubmitTime"));
		cl.def("GetLastRenderTime", (float (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetLastRenderTime, "C++: PrimitiveComponentWrapper::GetLastRenderTime() --> float");
		cl.def("GetScriptRigidBodyCollisionThreshold", (float (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::GetScriptRigidBodyCollisionThreshold, "C++: PrimitiveComponentWrapper::GetScriptRigidBodyCollisionThreshold() --> float");
		cl.def("SetScriptRigidBodyCollisionThreshold", (void (PrimitiveComponentWrapper::*)(float)) &PrimitiveComponentWrapper::SetScriptRigidBodyCollisionThreshold, "C++: PrimitiveComponentWrapper::SetScriptRigidBodyCollisionThreshold(float) --> void", pybind11::arg("newScriptRigidBodyCollisionThreshold"));
		cl.def("TermRBPhys", (void (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::TermRBPhys, "C++: PrimitiveComponentWrapper::TermRBPhys() --> void");
		cl.def("InitRBPhys", (void (PrimitiveComponentWrapper::*)()) &PrimitiveComponentWrapper::InitRBPhys, "C++: PrimitiveComponentWrapper::InitRBPhys() --> void");
		cl.def("SetNotifyRigidBodyCollision", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetNotifyRigidBodyCollision, "C++: PrimitiveComponentWrapper::SetNotifyRigidBodyCollision(unsigned long) --> void", pybind11::arg("bNewNotifyRigidBodyCollision"));
		cl.def("SetRBChannel2", (void (PrimitiveComponentWrapper::*)(unsigned char)) &PrimitiveComponentWrapper::SetRBChannel2, "C++: PrimitiveComponentWrapper::SetRBChannel2(unsigned char) --> void", pybind11::arg("Channel"));
		cl.def("SetRBCollidesWithChannel", (void (PrimitiveComponentWrapper::*)(unsigned char, unsigned long)) &PrimitiveComponentWrapper::SetRBCollidesWithChannel, "C++: PrimitiveComponentWrapper::SetRBCollidesWithChannel(unsigned char, unsigned long) --> void", pybind11::arg("Channel"), pybind11::arg("bNewCollides"));
		cl.def("SetBlockRigidBody2", (void (PrimitiveComponentWrapper::*)(unsigned long)) &PrimitiveComponentWrapper::SetBlockRigidBody2, "C++: PrimitiveComponentWrapper::SetBlockRigidBody2(unsigned long) --> void", pybind11::arg("bNewBlockRigidBody"));
		cl.def("RetardRBLinearVelocity", (void (PrimitiveComponentWrapper::*)(struct Vector &, float)) &PrimitiveComponentWrapper::RetardRBLinearVelocity, "C++: PrimitiveComponentWrapper::RetardRBLinearVelocity(struct Vector &, float) --> void", pybind11::arg("RetardDir"), pybind11::arg("VelScale"));
		cl.def("SetRBAngularVelocity", (void (PrimitiveComponentWrapper::*)(struct Vector &, unsigned long)) &PrimitiveComponentWrapper::SetRBAngularVelocity, "C++: PrimitiveComponentWrapper::SetRBAngularVelocity(struct Vector &, unsigned long) --> void", pybind11::arg("NewAngVel"), pybind11::arg("bAddToCurrent"));
		cl.def("SetRBLinearVelocity", (void (PrimitiveComponentWrapper::*)(struct Vector &, unsigned long)) &PrimitiveComponentWrapper::SetRBLinearVelocity, "C++: PrimitiveComponentWrapper::SetRBLinearVelocity(struct Vector &, unsigned long) --> void", pybind11::arg("NewVel"), pybind11::arg("bAddToCurrent"));
		cl.def("AddRadialForce", (void (PrimitiveComponentWrapper::*)(struct Vector &, float, float, unsigned char)) &PrimitiveComponentWrapper::AddRadialForce, "C++: PrimitiveComponentWrapper::AddRadialForce(struct Vector &, float, float, unsigned char) --> void", pybind11::arg("Origin"), pybind11::arg("Radius"), pybind11::arg("Strength"), pybind11::arg("Falloff"));
		cl.def("AddRadialImpulse", (void (PrimitiveComponentWrapper::*)(struct Vector &, float, float, unsigned char, unsigned long)) &PrimitiveComponentWrapper::AddRadialImpulse, "C++: PrimitiveComponentWrapper::AddRadialImpulse(struct Vector &, float, float, unsigned char, unsigned long) --> void", pybind11::arg("Origin"), pybind11::arg("Radius"), pybind11::arg("Strength"), pybind11::arg("Falloff"), pybind11::arg("bVelChange"));
	}
}
